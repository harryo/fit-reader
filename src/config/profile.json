{
  "types": {
    "file": {
      "baseType": "enum",
      "values": {
        "1": {
          "valueName": "device",
          "comment": "Read only, single file. Must be in root directory."
        },
        "2": {
          "valueName": "settings",
          "comment": "Read/write, single file. Directory=Settings"
        },
        "3": {
          "valueName": "sport",
          "comment": "Read/write, multiple files, file number = sport type. Directory=Sports"
        },
        "4": {
          "valueName": "activity",
          "comment": "Read/erase, multiple files. Directory=Activities"
        },
        "5": {
          "valueName": "workout",
          "comment": "Read/write/erase, multiple files. Directory=Workouts"
        },
        "6": {
          "valueName": "course",
          "comment": "Read/write/erase, multiple files. Directory=Courses"
        },
        "7": {
          "valueName": "schedules",
          "comment": "Read/write, single file. Directory=Schedules"
        },
        "9": {
          "valueName": "weight",
          "comment": "Read only, single file. Circular buffer. All message definitions at start of file. Directory=Weight"
        },
        "10": {
          "valueName": "totals",
          "comment": "Read only, single file. Directory=Totals"
        },
        "11": {
          "valueName": "goals",
          "comment": "Read/write, single file. Directory=Goals"
        },
        "14": {
          "valueName": "blood_pressure",
          "comment": "Read only. Directory=Blood Pressure"
        },
        "15": {
          "valueName": "monitoring_a",
          "comment": "Read only. Directory=Monitoring. File number=sub type."
        },
        "20": {
          "valueName": "activity_summary",
          "comment": "Read/erase, multiple files. Directory=Activities"
        },
        "28": {
          "valueName": "monitoring_daily"
        },
        "32": {
          "valueName": "monitoring_b",
          "comment": "Read only. Directory=Monitoring. File number=identifier"
        },
        "34": {
          "valueName": "segment",
          "comment": "Read/write/erase. Multiple Files.  Directory=Segments"
        },
        "35": {
          "valueName": "segment_list",
          "comment": "Read/write/erase. Single File.  Directory=Segments"
        },
        "40": {
          "valueName": "exd_configuration",
          "comment": "Read/write/erase. Single File. Directory=Settings"
        },
        "247": {
          "valueName": "mfg_range_min",
          "comment": "0xF7 - 0xFE reserved for manufacturer specific file types"
        },
        "254": {
          "valueName": "mfg_range_max",
          "comment": "0xF7 - 0xFE reserved for manufacturer specific file types"
        }
      }
    },
    "mesg_num": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "file_id"
        },
        "1": {
          "valueName": "capabilities"
        },
        "2": {
          "valueName": "device_settings"
        },
        "3": {
          "valueName": "user_profile"
        },
        "4": {
          "valueName": "hrm_profile"
        },
        "5": {
          "valueName": "sdm_profile"
        },
        "6": {
          "valueName": "bike_profile"
        },
        "7": {
          "valueName": "zones_target"
        },
        "8": {
          "valueName": "hr_zone"
        },
        "9": {
          "valueName": "power_zone"
        },
        "10": {
          "valueName": "met_zone"
        },
        "12": {
          "valueName": "sport"
        },
        "15": {
          "valueName": "goal"
        },
        "18": {
          "valueName": "session"
        },
        "19": {
          "valueName": "lap"
        },
        "20": {
          "valueName": "record"
        },
        "21": {
          "valueName": "event"
        },
        "23": {
          "valueName": "device_info"
        },
        "26": {
          "valueName": "workout"
        },
        "27": {
          "valueName": "workout_step"
        },
        "28": {
          "valueName": "schedule"
        },
        "30": {
          "valueName": "weight_scale"
        },
        "31": {
          "valueName": "course"
        },
        "32": {
          "valueName": "course_point"
        },
        "33": {
          "valueName": "totals"
        },
        "34": {
          "valueName": "activity"
        },
        "35": {
          "valueName": "software"
        },
        "37": {
          "valueName": "file_capabilities"
        },
        "38": {
          "valueName": "mesg_capabilities"
        },
        "39": {
          "valueName": "field_capabilities"
        },
        "49": {
          "valueName": "file_creator"
        },
        "51": {
          "valueName": "blood_pressure"
        },
        "53": {
          "valueName": "speed_zone"
        },
        "55": {
          "valueName": "monitoring"
        },
        "72": {
          "valueName": "training_file"
        },
        "78": {
          "valueName": "hrv"
        },
        "80": {
          "valueName": "ant_rx"
        },
        "81": {
          "valueName": "ant_tx"
        },
        "82": {
          "valueName": "ant_channel_id"
        },
        "101": {
          "valueName": "length"
        },
        "103": {
          "valueName": "monitoring_info"
        },
        "105": {
          "valueName": "pad"
        },
        "106": {
          "valueName": "slave_device"
        },
        "127": {
          "valueName": "connectivity"
        },
        "128": {
          "valueName": "weather_conditions"
        },
        "129": {
          "valueName": "weather_alert"
        },
        "131": {
          "valueName": "cadence_zone"
        },
        "132": {
          "valueName": "hr"
        },
        "142": {
          "valueName": "segment_lap"
        },
        "145": {
          "valueName": "memo_glob"
        },
        "148": {
          "valueName": "segment_id"
        },
        "149": {
          "valueName": "segment_leaderboard_entry"
        },
        "150": {
          "valueName": "segment_point"
        },
        "151": {
          "valueName": "segment_file"
        },
        "158": {
          "valueName": "workout_session"
        },
        "159": {
          "valueName": "watchface_settings"
        },
        "160": {
          "valueName": "gps_metadata"
        },
        "161": {
          "valueName": "camera_event"
        },
        "162": {
          "valueName": "timestamp_correlation"
        },
        "164": {
          "valueName": "gyroscope_data"
        },
        "165": {
          "valueName": "accelerometer_data"
        },
        "167": {
          "valueName": "three_d_sensor_calibration"
        },
        "169": {
          "valueName": "video_frame"
        },
        "174": {
          "valueName": "obdii_data"
        },
        "177": {
          "valueName": "nmea_sentence"
        },
        "178": {
          "valueName": "aviation_attitude"
        },
        "184": {
          "valueName": "video"
        },
        "185": {
          "valueName": "video_title"
        },
        "186": {
          "valueName": "video_description"
        },
        "187": {
          "valueName": "video_clip"
        },
        "188": {
          "valueName": "ohr_settings"
        },
        "200": {
          "valueName": "exd_screen_configuration"
        },
        "201": {
          "valueName": "exd_data_field_configuration"
        },
        "202": {
          "valueName": "exd_data_concept_configuration"
        },
        "206": {
          "valueName": "field_description"
        },
        "207": {
          "valueName": "developer_data_id"
        },
        "208": {
          "valueName": "magnetometer_data"
        },
        "209": {
          "valueName": "barometer_data"
        },
        "210": {
          "valueName": "one_d_sensor_calibration"
        },
        "225": {
          "valueName": "set"
        },
        "227": {
          "valueName": "stress_level"
        },
        "258": {
          "valueName": "dive_settings"
        },
        "259": {
          "valueName": "dive_gas"
        },
        "262": {
          "valueName": "dive_alarm"
        },
        "264": {
          "valueName": "exercise_title"
        },
        "268": {
          "valueName": "dive_summary"
        },
        "285": {
          "valueName": "jump"
        },
        "317": {
          "valueName": "climb_pro"
        },
        "65280": {
          "valueName": "mfg_range_min",
          "comment": "0xFF00 - 0xFFFE reserved for manufacturer specific messages"
        },
        "65534": {
          "valueName": "mfg_range_max",
          "comment": "0xFF00 - 0xFFFE reserved for manufacturer specific messages"
        }
      }
    },
    "checksum": {
      "baseType": "uint8",
      "values": {
        "0": {
          "valueName": "clear",
          "comment": "Allows clear of checksum for flash memory where can only write 1 to 0 without erasing sector."
        },
        "1": {
          "valueName": "ok",
          "comment": "Set to mark checksum as valid if computes to invalid values 0 or 0xFF.  Checksum can also be set to ok to save encoding computation time."
        }
      }
    },
    "file_flags": {
      "baseType": "uint8z",
      "values": {
        "2": {
          "valueName": "read"
        },
        "4": {
          "valueName": "write"
        },
        "8": {
          "valueName": "erase"
        }
      }
    },
    "mesg_count": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "num_per_file"
        },
        "1": {
          "valueName": "max_per_file"
        },
        "2": {
          "valueName": "max_per_file_type"
        }
      }
    },
    "date_time": {
      "baseType": "uint32",
      "comment": "seconds since UTC 00:00 Dec 31 1989",
      "values": {
        "268435456": {
          "valueName": "min",
          "comment": "if date_time is < 0x10000000 then it is system time (seconds from device power on)"
        }
      }
    },
    "local_date_time": {
      "baseType": "uint32",
      "comment": "seconds since 00:00 Dec 31 1989 in local time zone",
      "values": {
        "268435456": {
          "valueName": "min",
          "comment": "if date_time is < 0x10000000 then it is system time (seconds from device power on)"
        }
      }
    },
    "message_index": {
      "baseType": "uint16",
      "values": {
        "4095": {
          "valueName": "mask",
          "comment": "index"
        },
        "28672": {
          "valueName": "reserved",
          "comment": "reserved (default 0)"
        },
        "32768": {
          "valueName": "selected",
          "comment": "message is selected if set"
        }
      }
    },
    "device_index": {
      "baseType": "uint8",
      "values": {
        "0": {
          "valueName": "creator",
          "comment": "Creator of the file is always device index 0."
        }
      }
    },
    "gender": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "female"
        },
        "1": {
          "valueName": "male"
        }
      }
    },
    "language": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "english"
        },
        "1": {
          "valueName": "french"
        },
        "2": {
          "valueName": "italian"
        },
        "3": {
          "valueName": "german"
        },
        "4": {
          "valueName": "spanish"
        },
        "5": {
          "valueName": "croatian"
        },
        "6": {
          "valueName": "czech"
        },
        "7": {
          "valueName": "danish"
        },
        "8": {
          "valueName": "dutch"
        },
        "9": {
          "valueName": "finnish"
        },
        "10": {
          "valueName": "greek"
        },
        "11": {
          "valueName": "hungarian"
        },
        "12": {
          "valueName": "norwegian"
        },
        "13": {
          "valueName": "polish"
        },
        "14": {
          "valueName": "portuguese"
        },
        "15": {
          "valueName": "slovakian"
        },
        "16": {
          "valueName": "slovenian"
        },
        "17": {
          "valueName": "swedish"
        },
        "18": {
          "valueName": "russian"
        },
        "19": {
          "valueName": "turkish"
        },
        "20": {
          "valueName": "latvian"
        },
        "21": {
          "valueName": "ukrainian"
        },
        "22": {
          "valueName": "arabic"
        },
        "23": {
          "valueName": "farsi"
        },
        "24": {
          "valueName": "bulgarian"
        },
        "25": {
          "valueName": "romanian"
        },
        "26": {
          "valueName": "chinese"
        },
        "27": {
          "valueName": "japanese"
        },
        "28": {
          "valueName": "korean"
        },
        "29": {
          "valueName": "taiwanese"
        },
        "30": {
          "valueName": "thai"
        },
        "31": {
          "valueName": "hebrew"
        },
        "32": {
          "valueName": "brazilian_portuguese"
        },
        "33": {
          "valueName": "indonesian"
        },
        "34": {
          "valueName": "malaysian"
        },
        "35": {
          "valueName": "vietnamese"
        },
        "36": {
          "valueName": "burmese"
        },
        "37": {
          "valueName": "mongolian"
        },
        "254": {
          "valueName": "custom"
        }
      }
    },
    "language_bits_0": {
      "baseType": "uint8z",
      "comment": "Bit field corresponding to language enum type (1 << language).",
      "values": {
        "1": {
          "valueName": "english"
        },
        "2": {
          "valueName": "french"
        },
        "4": {
          "valueName": "italian"
        },
        "8": {
          "valueName": "german"
        },
        "16": {
          "valueName": "spanish"
        },
        "32": {
          "valueName": "croatian"
        },
        "64": {
          "valueName": "czech"
        },
        "128": {
          "valueName": "danish"
        }
      }
    },
    "language_bits_1": {
      "baseType": "uint8z",
      "values": {
        "1": {
          "valueName": "dutch"
        },
        "2": {
          "valueName": "finnish"
        },
        "4": {
          "valueName": "greek"
        },
        "8": {
          "valueName": "hungarian"
        },
        "16": {
          "valueName": "norwegian"
        },
        "32": {
          "valueName": "polish"
        },
        "64": {
          "valueName": "portuguese"
        },
        "128": {
          "valueName": "slovakian"
        }
      }
    },
    "language_bits_2": {
      "baseType": "uint8z",
      "values": {
        "1": {
          "valueName": "slovenian"
        },
        "2": {
          "valueName": "swedish"
        },
        "4": {
          "valueName": "russian"
        },
        "8": {
          "valueName": "turkish"
        },
        "16": {
          "valueName": "latvian"
        },
        "32": {
          "valueName": "ukrainian"
        },
        "64": {
          "valueName": "arabic"
        },
        "128": {
          "valueName": "farsi"
        }
      }
    },
    "language_bits_3": {
      "baseType": "uint8z",
      "values": {
        "1": {
          "valueName": "bulgarian"
        },
        "2": {
          "valueName": "romanian"
        },
        "4": {
          "valueName": "chinese"
        },
        "8": {
          "valueName": "japanese"
        },
        "16": {
          "valueName": "korean"
        },
        "32": {
          "valueName": "taiwanese"
        },
        "64": {
          "valueName": "thai"
        },
        "128": {
          "valueName": "hebrew"
        }
      }
    },
    "language_bits_4": {
      "baseType": "uint8z",
      "values": {
        "1": {
          "valueName": "brazilian_portuguese"
        },
        "2": {
          "valueName": "indonesian"
        },
        "4": {
          "valueName": "malaysian"
        },
        "8": {
          "valueName": "vietnamese"
        },
        "16": {
          "valueName": "burmese"
        },
        "32": {
          "valueName": "mongolian"
        }
      }
    },
    "time_zone": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "almaty"
        },
        "1": {
          "valueName": "bangkok"
        },
        "2": {
          "valueName": "bombay"
        },
        "3": {
          "valueName": "brasilia"
        },
        "4": {
          "valueName": "cairo"
        },
        "5": {
          "valueName": "cape_verde_is"
        },
        "6": {
          "valueName": "darwin"
        },
        "7": {
          "valueName": "eniwetok"
        },
        "8": {
          "valueName": "fiji"
        },
        "9": {
          "valueName": "hong_kong"
        },
        "10": {
          "valueName": "islamabad"
        },
        "11": {
          "valueName": "kabul"
        },
        "12": {
          "valueName": "magadan"
        },
        "13": {
          "valueName": "mid_atlantic"
        },
        "14": {
          "valueName": "moscow"
        },
        "15": {
          "valueName": "muscat"
        },
        "16": {
          "valueName": "newfoundland"
        },
        "17": {
          "valueName": "samoa"
        },
        "18": {
          "valueName": "sydney"
        },
        "19": {
          "valueName": "tehran"
        },
        "20": {
          "valueName": "tokyo"
        },
        "21": {
          "valueName": "us_alaska"
        },
        "22": {
          "valueName": "us_atlantic"
        },
        "23": {
          "valueName": "us_central"
        },
        "24": {
          "valueName": "us_eastern"
        },
        "25": {
          "valueName": "us_hawaii"
        },
        "26": {
          "valueName": "us_mountain"
        },
        "27": {
          "valueName": "us_pacific"
        },
        "28": {
          "valueName": "other"
        },
        "29": {
          "valueName": "auckland"
        },
        "30": {
          "valueName": "kathmandu"
        },
        "31": {
          "valueName": "europe_western_wet"
        },
        "32": {
          "valueName": "europe_central_cet"
        },
        "33": {
          "valueName": "europe_eastern_eet"
        },
        "34": {
          "valueName": "jakarta"
        },
        "35": {
          "valueName": "perth"
        },
        "36": {
          "valueName": "adelaide"
        },
        "37": {
          "valueName": "brisbane"
        },
        "38": {
          "valueName": "tasmania"
        },
        "39": {
          "valueName": "iceland"
        },
        "40": {
          "valueName": "amsterdam"
        },
        "41": {
          "valueName": "athens"
        },
        "42": {
          "valueName": "barcelona"
        },
        "43": {
          "valueName": "berlin"
        },
        "44": {
          "valueName": "brussels"
        },
        "45": {
          "valueName": "budapest"
        },
        "46": {
          "valueName": "copenhagen"
        },
        "47": {
          "valueName": "dublin"
        },
        "48": {
          "valueName": "helsinki"
        },
        "49": {
          "valueName": "lisbon"
        },
        "50": {
          "valueName": "london"
        },
        "51": {
          "valueName": "madrid"
        },
        "52": {
          "valueName": "munich"
        },
        "53": {
          "valueName": "oslo"
        },
        "54": {
          "valueName": "paris"
        },
        "55": {
          "valueName": "prague"
        },
        "56": {
          "valueName": "reykjavik"
        },
        "57": {
          "valueName": "rome"
        },
        "58": {
          "valueName": "stockholm"
        },
        "59": {
          "valueName": "vienna"
        },
        "60": {
          "valueName": "warsaw"
        },
        "61": {
          "valueName": "zurich"
        },
        "62": {
          "valueName": "quebec"
        },
        "63": {
          "valueName": "ontario"
        },
        "64": {
          "valueName": "manitoba"
        },
        "65": {
          "valueName": "saskatchewan"
        },
        "66": {
          "valueName": "alberta"
        },
        "67": {
          "valueName": "british_columbia"
        },
        "68": {
          "valueName": "boise"
        },
        "69": {
          "valueName": "boston"
        },
        "70": {
          "valueName": "chicago"
        },
        "71": {
          "valueName": "dallas"
        },
        "72": {
          "valueName": "denver"
        },
        "73": {
          "valueName": "kansas_city"
        },
        "74": {
          "valueName": "las_vegas"
        },
        "75": {
          "valueName": "los_angeles"
        },
        "76": {
          "valueName": "miami"
        },
        "77": {
          "valueName": "minneapolis"
        },
        "78": {
          "valueName": "new_york"
        },
        "79": {
          "valueName": "new_orleans"
        },
        "80": {
          "valueName": "phoenix"
        },
        "81": {
          "valueName": "santa_fe"
        },
        "82": {
          "valueName": "seattle"
        },
        "83": {
          "valueName": "washington_dc"
        },
        "84": {
          "valueName": "us_arizona"
        },
        "85": {
          "valueName": "chita"
        },
        "86": {
          "valueName": "ekaterinburg"
        },
        "87": {
          "valueName": "irkutsk"
        },
        "88": {
          "valueName": "kaliningrad"
        },
        "89": {
          "valueName": "krasnoyarsk"
        },
        "90": {
          "valueName": "novosibirsk"
        },
        "91": {
          "valueName": "petropavlovsk_kamchatskiy"
        },
        "92": {
          "valueName": "samara"
        },
        "93": {
          "valueName": "vladivostok"
        },
        "94": {
          "valueName": "mexico_central"
        },
        "95": {
          "valueName": "mexico_mountain"
        },
        "96": {
          "valueName": "mexico_pacific"
        },
        "97": {
          "valueName": "cape_town"
        },
        "98": {
          "valueName": "winkhoek"
        },
        "99": {
          "valueName": "lagos"
        },
        "100": {
          "valueName": "riyahd"
        },
        "101": {
          "valueName": "venezuela"
        },
        "102": {
          "valueName": "australia_lh"
        },
        "103": {
          "valueName": "santiago"
        },
        "253": {
          "valueName": "manual"
        },
        "254": {
          "valueName": "automatic"
        }
      }
    },
    "display_measure": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "metric"
        },
        "1": {
          "valueName": "statute"
        },
        "2": {
          "valueName": "nautical"
        }
      }
    },
    "display_heart": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "bpm"
        },
        "1": {
          "valueName": "max"
        },
        "2": {
          "valueName": "reserve"
        }
      }
    },
    "display_power": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "watts"
        },
        "1": {
          "valueName": "percent_ftp"
        }
      }
    },
    "display_position": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "degree",
          "comment": "dd.dddddd"
        },
        "1": {
          "valueName": "degree_minute",
          "comment": "dddmm.mmm"
        },
        "2": {
          "valueName": "degree_minute_second",
          "comment": "dddmmss"
        },
        "3": {
          "valueName": "austrian_grid",
          "comment": "Austrian Grid (BMN)"
        },
        "4": {
          "valueName": "british_grid",
          "comment": "British National Grid"
        },
        "5": {
          "valueName": "dutch_grid",
          "comment": "Dutch grid system"
        },
        "6": {
          "valueName": "hungarian_grid",
          "comment": "Hungarian grid system"
        },
        "7": {
          "valueName": "finnish_grid",
          "comment": "Finnish grid system Zone3 KKJ27"
        },
        "8": {
          "valueName": "german_grid",
          "comment": "Gausss Krueger (German)"
        },
        "9": {
          "valueName": "icelandic_grid",
          "comment": "Icelandic Grid"
        },
        "10": {
          "valueName": "indonesian_equatorial",
          "comment": "Indonesian Equatorial LCO"
        },
        "11": {
          "valueName": "indonesian_irian",
          "comment": "Indonesian Irian LCO"
        },
        "12": {
          "valueName": "indonesian_southern",
          "comment": "Indonesian Southern LCO"
        },
        "13": {
          "valueName": "india_zone_0",
          "comment": "India zone 0"
        },
        "14": {
          "valueName": "india_zone_IA",
          "comment": "India zone IA"
        },
        "15": {
          "valueName": "india_zone_IB",
          "comment": "India zone IB"
        },
        "16": {
          "valueName": "india_zone_IIA",
          "comment": "India zone IIA"
        },
        "17": {
          "valueName": "india_zone_IIB",
          "comment": "India zone IIB"
        },
        "18": {
          "valueName": "india_zone_IIIA",
          "comment": "India zone IIIA"
        },
        "19": {
          "valueName": "india_zone_IIIB",
          "comment": "India zone IIIB"
        },
        "20": {
          "valueName": "india_zone_IVA",
          "comment": "India zone IVA"
        },
        "21": {
          "valueName": "india_zone_IVB",
          "comment": "India zone IVB"
        },
        "22": {
          "valueName": "irish_transverse",
          "comment": "Irish Transverse Mercator"
        },
        "23": {
          "valueName": "irish_grid",
          "comment": "Irish Grid"
        },
        "24": {
          "valueName": "loran",
          "comment": "Loran TD"
        },
        "25": {
          "valueName": "maidenhead_grid",
          "comment": "Maidenhead grid system"
        },
        "26": {
          "valueName": "mgrs_grid",
          "comment": "MGRS grid system"
        },
        "27": {
          "valueName": "new_zealand_grid",
          "comment": "New Zealand grid system"
        },
        "28": {
          "valueName": "new_zealand_transverse",
          "comment": "New Zealand Transverse Mercator"
        },
        "29": {
          "valueName": "qatar_grid",
          "comment": "Qatar National Grid"
        },
        "30": {
          "valueName": "modified_swedish_grid",
          "comment": "Modified RT-90 (Sweden)"
        },
        "31": {
          "valueName": "swedish_grid",
          "comment": "RT-90 (Sweden)"
        },
        "32": {
          "valueName": "south_african_grid",
          "comment": "South African Grid"
        },
        "33": {
          "valueName": "swiss_grid",
          "comment": "Swiss CH-1903 grid"
        },
        "34": {
          "valueName": "taiwan_grid",
          "comment": "Taiwan Grid"
        },
        "35": {
          "valueName": "united_states_grid",
          "comment": "United States National Grid"
        },
        "36": {
          "valueName": "utm_ups_grid",
          "comment": "UTM/UPS grid system"
        },
        "37": {
          "valueName": "west_malayan",
          "comment": "West Malayan RSO"
        },
        "38": {
          "valueName": "borneo_rso",
          "comment": "Borneo RSO"
        },
        "39": {
          "valueName": "estonian_grid",
          "comment": "Estonian grid system"
        },
        "40": {
          "valueName": "latvian_grid",
          "comment": "Latvian Transverse Mercator"
        },
        "41": {
          "valueName": "swedish_ref_99_grid",
          "comment": "Reference Grid 99 TM (Swedish)"
        }
      }
    },
    "switch": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "off"
        },
        "1": {
          "valueName": "on"
        },
        "2": {
          "valueName": "auto"
        }
      }
    },
    "sport": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "generic"
        },
        "1": {
          "valueName": "running"
        },
        "2": {
          "valueName": "cycling"
        },
        "3": {
          "valueName": "transition",
          "comment": "Mulitsport transition"
        },
        "4": {
          "valueName": "fitness_equipment"
        },
        "5": {
          "valueName": "swimming"
        },
        "6": {
          "valueName": "basketball"
        },
        "7": {
          "valueName": "soccer"
        },
        "8": {
          "valueName": "tennis"
        },
        "9": {
          "valueName": "american_football"
        },
        "10": {
          "valueName": "training"
        },
        "11": {
          "valueName": "walking"
        },
        "12": {
          "valueName": "cross_country_skiing"
        },
        "13": {
          "valueName": "alpine_skiing"
        },
        "14": {
          "valueName": "snowboarding"
        },
        "15": {
          "valueName": "rowing"
        },
        "16": {
          "valueName": "mountaineering"
        },
        "17": {
          "valueName": "hiking"
        },
        "18": {
          "valueName": "multisport"
        },
        "19": {
          "valueName": "paddling"
        },
        "20": {
          "valueName": "flying"
        },
        "21": {
          "valueName": "e_biking"
        },
        "22": {
          "valueName": "motorcycling"
        },
        "23": {
          "valueName": "boating"
        },
        "24": {
          "valueName": "driving"
        },
        "25": {
          "valueName": "golf"
        },
        "26": {
          "valueName": "hang_gliding"
        },
        "27": {
          "valueName": "horseback_riding"
        },
        "28": {
          "valueName": "hunting"
        },
        "29": {
          "valueName": "fishing"
        },
        "30": {
          "valueName": "inline_skating"
        },
        "31": {
          "valueName": "rock_climbing"
        },
        "32": {
          "valueName": "sailing"
        },
        "33": {
          "valueName": "ice_skating"
        },
        "34": {
          "valueName": "sky_diving"
        },
        "35": {
          "valueName": "snowshoeing"
        },
        "36": {
          "valueName": "snowmobiling"
        },
        "37": {
          "valueName": "stand_up_paddleboarding"
        },
        "38": {
          "valueName": "surfing"
        },
        "39": {
          "valueName": "wakeboarding"
        },
        "40": {
          "valueName": "water_skiing"
        },
        "41": {
          "valueName": "kayaking"
        },
        "42": {
          "valueName": "rafting"
        },
        "43": {
          "valueName": "windsurfing"
        },
        "44": {
          "valueName": "kitesurfing"
        },
        "45": {
          "valueName": "tactical"
        },
        "46": {
          "valueName": "jumpmaster"
        },
        "47": {
          "valueName": "boxing"
        },
        "48": {
          "valueName": "floor_climbing"
        },
        "254": {
          "valueName": "all",
          "comment": "All is for goals only to include all sports."
        }
      }
    },
    "sport_bits_0": {
      "baseType": "uint8z",
      "comment": "Bit field corresponding to sport enum type (1 << sport).",
      "values": {
        "1": {
          "valueName": "generic"
        },
        "2": {
          "valueName": "running"
        },
        "4": {
          "valueName": "cycling"
        },
        "8": {
          "valueName": "transition",
          "comment": "Mulitsport transition"
        },
        "16": {
          "valueName": "fitness_equipment"
        },
        "32": {
          "valueName": "swimming"
        },
        "64": {
          "valueName": "basketball"
        },
        "128": {
          "valueName": "soccer"
        }
      }
    },
    "sport_bits_1": {
      "baseType": "uint8z",
      "comment": "Bit field corresponding to sport enum type (1 << (sport-8)).",
      "values": {
        "1": {
          "valueName": "tennis"
        },
        "2": {
          "valueName": "american_football"
        },
        "4": {
          "valueName": "training"
        },
        "8": {
          "valueName": "walking"
        },
        "16": {
          "valueName": "cross_country_skiing"
        },
        "32": {
          "valueName": "alpine_skiing"
        },
        "64": {
          "valueName": "snowboarding"
        },
        "128": {
          "valueName": "rowing"
        }
      }
    },
    "sport_bits_2": {
      "baseType": "uint8z",
      "comment": "Bit field corresponding to sport enum type (1 << (sport-16)).",
      "values": {
        "1": {
          "valueName": "mountaineering"
        },
        "2": {
          "valueName": "hiking"
        },
        "4": {
          "valueName": "multisport"
        },
        "8": {
          "valueName": "paddling"
        },
        "16": {
          "valueName": "flying"
        },
        "32": {
          "valueName": "e_biking"
        },
        "64": {
          "valueName": "motorcycling"
        },
        "128": {
          "valueName": "boating"
        }
      }
    },
    "sport_bits_3": {
      "baseType": "uint8z",
      "comment": "Bit field corresponding to sport enum type (1 << (sport-24)).",
      "values": {
        "1": {
          "valueName": "driving"
        },
        "2": {
          "valueName": "golf"
        },
        "4": {
          "valueName": "hang_gliding"
        },
        "8": {
          "valueName": "horseback_riding"
        },
        "16": {
          "valueName": "hunting"
        },
        "32": {
          "valueName": "fishing"
        },
        "64": {
          "valueName": "inline_skating"
        },
        "128": {
          "valueName": "rock_climbing"
        }
      }
    },
    "sport_bits_4": {
      "baseType": "uint8z",
      "comment": "Bit field corresponding to sport enum type (1 << (sport-32)).",
      "values": {
        "1": {
          "valueName": "sailing"
        },
        "2": {
          "valueName": "ice_skating"
        },
        "4": {
          "valueName": "sky_diving"
        },
        "8": {
          "valueName": "snowshoeing"
        },
        "16": {
          "valueName": "snowmobiling"
        },
        "32": {
          "valueName": "stand_up_paddleboarding"
        },
        "64": {
          "valueName": "surfing"
        },
        "128": {
          "valueName": "wakeboarding"
        }
      }
    },
    "sport_bits_5": {
      "baseType": "uint8z",
      "comment": "Bit field corresponding to sport enum type (1 << (sport-40)).",
      "values": {
        "1": {
          "valueName": "water_skiing"
        },
        "2": {
          "valueName": "kayaking"
        },
        "4": {
          "valueName": "rafting"
        },
        "8": {
          "valueName": "windsurfing"
        },
        "16": {
          "valueName": "kitesurfing"
        },
        "32": {
          "valueName": "tactical"
        },
        "64": {
          "valueName": "jumpmaster"
        },
        "128": {
          "valueName": "boxing"
        }
      }
    },
    "sport_bits_6": {
      "baseType": "uint8z",
      "comment": "Bit field corresponding to sport enum type (1 << (sport-48)).",
      "values": {
        "1": {
          "valueName": "floor_climbing"
        }
      }
    },
    "sub_sport": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "generic"
        },
        "1": {
          "valueName": "treadmill",
          "comment": "Run/Fitness Equipment"
        },
        "2": {
          "valueName": "street",
          "comment": "Run"
        },
        "3": {
          "valueName": "trail",
          "comment": "Run"
        },
        "4": {
          "valueName": "track",
          "comment": "Run"
        },
        "5": {
          "valueName": "spin",
          "comment": "Cycling"
        },
        "6": {
          "valueName": "indoor_cycling",
          "comment": "Cycling/Fitness Equipment"
        },
        "7": {
          "valueName": "road",
          "comment": "Cycling"
        },
        "8": {
          "valueName": "mountain",
          "comment": "Cycling"
        },
        "9": {
          "valueName": "downhill",
          "comment": "Cycling"
        },
        "10": {
          "valueName": "recumbent",
          "comment": "Cycling"
        },
        "11": {
          "valueName": "cyclocross",
          "comment": "Cycling"
        },
        "12": {
          "valueName": "hand_cycling",
          "comment": "Cycling"
        },
        "13": {
          "valueName": "track_cycling",
          "comment": "Cycling"
        },
        "14": {
          "valueName": "indoor_rowing",
          "comment": "Fitness Equipment"
        },
        "15": {
          "valueName": "elliptical",
          "comment": "Fitness Equipment"
        },
        "16": {
          "valueName": "stair_climbing",
          "comment": "Fitness Equipment"
        },
        "17": {
          "valueName": "lap_swimming",
          "comment": "Swimming"
        },
        "18": {
          "valueName": "open_water",
          "comment": "Swimming"
        },
        "19": {
          "valueName": "flexibility_training",
          "comment": "Training"
        },
        "20": {
          "valueName": "strength_training",
          "comment": "Training"
        },
        "21": {
          "valueName": "warm_up",
          "comment": "Tennis"
        },
        "22": {
          "valueName": "match",
          "comment": "Tennis"
        },
        "23": {
          "valueName": "exercise",
          "comment": "Tennis"
        },
        "24": {
          "valueName": "challenge"
        },
        "25": {
          "valueName": "indoor_skiing",
          "comment": "Fitness Equipment"
        },
        "26": {
          "valueName": "cardio_training",
          "comment": "Training"
        },
        "27": {
          "valueName": "indoor_walking",
          "comment": "Walking/Fitness Equipment"
        },
        "28": {
          "valueName": "e_bike_fitness",
          "comment": "E-Biking"
        },
        "29": {
          "valueName": "bmx",
          "comment": "Cycling"
        },
        "30": {
          "valueName": "casual_walking",
          "comment": "Walking"
        },
        "31": {
          "valueName": "speed_walking",
          "comment": "Walking"
        },
        "32": {
          "valueName": "bike_to_run_transition",
          "comment": "Transition"
        },
        "33": {
          "valueName": "run_to_bike_transition",
          "comment": "Transition"
        },
        "34": {
          "valueName": "swim_to_bike_transition",
          "comment": "Transition"
        },
        "35": {
          "valueName": "atv",
          "comment": "Motorcycling"
        },
        "36": {
          "valueName": "motocross",
          "comment": "Motorcycling"
        },
        "37": {
          "valueName": "backcountry",
          "comment": "Alpine Skiing/Snowboarding"
        },
        "38": {
          "valueName": "resort",
          "comment": "Alpine Skiing/Snowboarding"
        },
        "39": {
          "valueName": "rc_drone",
          "comment": "Flying"
        },
        "40": {
          "valueName": "wingsuit",
          "comment": "Flying"
        },
        "41": {
          "valueName": "whitewater",
          "comment": "Kayaking/Rafting"
        },
        "42": {
          "valueName": "skate_skiing",
          "comment": "Cross Country Skiing"
        },
        "43": {
          "valueName": "yoga",
          "comment": "Training"
        },
        "44": {
          "valueName": "pilates",
          "comment": "Fitness Equipment"
        },
        "45": {
          "valueName": "indoor_running",
          "comment": "Run"
        },
        "46": {
          "valueName": "gravel_cycling",
          "comment": "Cycling"
        },
        "47": {
          "valueName": "e_bike_mountain",
          "comment": "Cycling"
        },
        "48": {
          "valueName": "commuting",
          "comment": "Cycling"
        },
        "49": {
          "valueName": "mixed_surface",
          "comment": "Cycling"
        },
        "50": {
          "valueName": "navigate"
        },
        "51": {
          "valueName": "track_me"
        },
        "52": {
          "valueName": "map"
        },
        "53": {
          "valueName": "single_gas_diving",
          "comment": "Diving"
        },
        "54": {
          "valueName": "multi_gas_diving",
          "comment": "Diving"
        },
        "55": {
          "valueName": "gauge_diving",
          "comment": "Diving"
        },
        "56": {
          "valueName": "apnea_diving",
          "comment": "Diving"
        },
        "57": {
          "valueName": "apnea_hunting",
          "comment": "Diving"
        },
        "58": {
          "valueName": "virtual_activity"
        },
        "59": {
          "valueName": "obstacle",
          "comment": "Used for events where participants run, crawl through mud, climb over walls, etc."
        },
        "254": {
          "valueName": "all"
        }
      }
    },
    "sport_event": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "uncategorized"
        },
        "1": {
          "valueName": "geocaching"
        },
        "2": {
          "valueName": "fitness"
        },
        "3": {
          "valueName": "recreation"
        },
        "4": {
          "valueName": "race"
        },
        "5": {
          "valueName": "special_event"
        },
        "6": {
          "valueName": "training"
        },
        "7": {
          "valueName": "transportation"
        },
        "8": {
          "valueName": "touring"
        }
      }
    },
    "activity": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "manual"
        },
        "1": {
          "valueName": "auto_multi_sport"
        }
      }
    },
    "intensity": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "active"
        },
        "1": {
          "valueName": "rest"
        },
        "2": {
          "valueName": "warmup"
        },
        "3": {
          "valueName": "cooldown"
        }
      }
    },
    "session_trigger": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "activity_end"
        },
        "1": {
          "valueName": "manual",
          "comment": "User changed sport."
        },
        "2": {
          "valueName": "auto_multi_sport",
          "comment": "Auto multi-sport feature is enabled and user pressed lap button to advance session."
        },
        "3": {
          "valueName": "fitness_equipment",
          "comment": "Auto sport change caused by user linking to fitness equipment."
        }
      }
    },
    "autolap_trigger": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "time"
        },
        "1": {
          "valueName": "distance"
        },
        "2": {
          "valueName": "position_start"
        },
        "3": {
          "valueName": "position_lap"
        },
        "4": {
          "valueName": "position_waypoint"
        },
        "5": {
          "valueName": "position_marked"
        },
        "6": {
          "valueName": "off"
        }
      }
    },
    "lap_trigger": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "manual"
        },
        "1": {
          "valueName": "time"
        },
        "2": {
          "valueName": "distance"
        },
        "3": {
          "valueName": "position_start"
        },
        "4": {
          "valueName": "position_lap"
        },
        "5": {
          "valueName": "position_waypoint"
        },
        "6": {
          "valueName": "position_marked"
        },
        "7": {
          "valueName": "session_end"
        },
        "8": {
          "valueName": "fitness_equipment"
        }
      }
    },
    "time_mode": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "hour12"
        },
        "1": {
          "valueName": "hour24",
          "comment": "Does not use a leading zero and has a colon"
        },
        "2": {
          "valueName": "military",
          "comment": "Uses a leading zero and does not have a colon"
        },
        "3": {
          "valueName": "hour_12_with_seconds"
        },
        "4": {
          "valueName": "hour_24_with_seconds"
        },
        "5": {
          "valueName": "utc"
        }
      }
    },
    "backlight_mode": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "off"
        },
        "1": {
          "valueName": "manual"
        },
        "2": {
          "valueName": "key_and_messages"
        },
        "3": {
          "valueName": "auto_brightness"
        },
        "4": {
          "valueName": "smart_notifications"
        },
        "5": {
          "valueName": "key_and_messages_night"
        },
        "6": {
          "valueName": "key_and_messages_and_smart_notifications"
        }
      }
    },
    "date_mode": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "day_month"
        },
        "1": {
          "valueName": "month_day"
        }
      }
    },
    "backlight_timeout": {
      "baseType": "uint8",
      "comment": "Timeout in seconds.",
      "values": {
        "0": {
          "valueName": "infinite",
          "comment": "Backlight stays on forever."
        }
      }
    },
    "event": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "timer",
          "comment": "Group 0.  Start / stop_all"
        },
        "3": {
          "valueName": "workout",
          "comment": "start / stop"
        },
        "4": {
          "valueName": "workout_step",
          "comment": "Start at beginning of workout.  Stop at end of each step."
        },
        "5": {
          "valueName": "power_down",
          "comment": "stop_all group 0"
        },
        "6": {
          "valueName": "power_up",
          "comment": "stop_all group 0"
        },
        "7": {
          "valueName": "off_course",
          "comment": "start / stop group 0"
        },
        "8": {
          "valueName": "session",
          "comment": "Stop at end of each session."
        },
        "9": {
          "valueName": "lap",
          "comment": "Stop at end of each lap."
        },
        "10": {
          "valueName": "course_point",
          "comment": "marker"
        },
        "11": {
          "valueName": "battery",
          "comment": "marker"
        },
        "12": {
          "valueName": "virtual_partner_pace",
          "comment": "Group 1. Start at beginning of activity if VP enabled, when VP pace is changed during activity or VP enabled mid activity.  stop_disable when VP disabled."
        },
        "13": {
          "valueName": "hr_high_alert",
          "comment": "Group 0.  Start / stop when in alert condition."
        },
        "14": {
          "valueName": "hr_low_alert",
          "comment": "Group 0.  Start / stop when in alert condition."
        },
        "15": {
          "valueName": "speed_high_alert",
          "comment": "Group 0.  Start / stop when in alert condition."
        },
        "16": {
          "valueName": "speed_low_alert",
          "comment": "Group 0.  Start / stop when in alert condition."
        },
        "17": {
          "valueName": "cad_high_alert",
          "comment": "Group 0.  Start / stop when in alert condition."
        },
        "18": {
          "valueName": "cad_low_alert",
          "comment": "Group 0.  Start / stop when in alert condition."
        },
        "19": {
          "valueName": "power_high_alert",
          "comment": "Group 0.  Start / stop when in alert condition."
        },
        "20": {
          "valueName": "power_low_alert",
          "comment": "Group 0.  Start / stop when in alert condition."
        },
        "21": {
          "valueName": "recovery_hr",
          "comment": "marker"
        },
        "22": {
          "valueName": "battery_low",
          "comment": "marker"
        },
        "23": {
          "valueName": "time_duration_alert",
          "comment": "Group 1.  Start if enabled mid activity (not required at start of activity). Stop when duration is reached.  stop_disable if disabled."
        },
        "24": {
          "valueName": "distance_duration_alert",
          "comment": "Group 1.  Start if enabled mid activity (not required at start of activity). Stop when duration is reached.  stop_disable if disabled."
        },
        "25": {
          "valueName": "calorie_duration_alert",
          "comment": "Group 1.  Start if enabled mid activity (not required at start of activity). Stop when duration is reached.  stop_disable if disabled."
        },
        "26": {
          "valueName": "activity",
          "comment": "Group 1..  Stop at end of activity."
        },
        "27": {
          "valueName": "fitness_equipment",
          "comment": "marker"
        },
        "28": {
          "valueName": "length",
          "comment": "Stop at end of each length."
        },
        "32": {
          "valueName": "user_marker",
          "comment": "marker"
        },
        "33": {
          "valueName": "sport_point",
          "comment": "marker"
        },
        "36": {
          "valueName": "calibration",
          "comment": "start/stop/marker"
        },
        "42": {
          "valueName": "front_gear_change",
          "comment": "marker"
        },
        "43": {
          "valueName": "rear_gear_change",
          "comment": "marker"
        },
        "44": {
          "valueName": "rider_position_change",
          "comment": "marker"
        },
        "45": {
          "valueName": "elev_high_alert",
          "comment": "Group 0.  Start / stop when in alert condition."
        },
        "46": {
          "valueName": "elev_low_alert",
          "comment": "Group 0.  Start / stop when in alert condition."
        },
        "47": {
          "valueName": "comm_timeout",
          "comment": "marker"
        }
      }
    },
    "event_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "start"
        },
        "1": {
          "valueName": "stop"
        },
        "2": {
          "valueName": "consecutive_depreciated"
        },
        "3": {
          "valueName": "marker"
        },
        "4": {
          "valueName": "stop_all"
        },
        "5": {
          "valueName": "begin_depreciated"
        },
        "6": {
          "valueName": "end_depreciated"
        },
        "7": {
          "valueName": "end_all_depreciated"
        },
        "8": {
          "valueName": "stop_disable"
        },
        "9": {
          "valueName": "stop_disable_all"
        }
      }
    },
    "timer_trigger": {
      "baseType": "enum",
      "comment": "timer event data",
      "values": {
        "0": {
          "valueName": "manual"
        },
        "1": {
          "valueName": "auto"
        },
        "2": {
          "valueName": "fitness_equipment"
        }
      }
    },
    "fitness_equipment_state": {
      "baseType": "enum",
      "comment": "fitness equipment event data",
      "values": {
        "0": {
          "valueName": "ready"
        },
        "1": {
          "valueName": "in_use"
        },
        "2": {
          "valueName": "paused"
        },
        "3": {
          "valueName": "unknown",
          "comment": "lost connection to fitness equipment"
        }
      }
    },
    "tone": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "off"
        },
        "1": {
          "valueName": "tone"
        },
        "2": {
          "valueName": "vibrate"
        },
        "3": {
          "valueName": "tone_and_vibrate"
        }
      }
    },
    "autoscroll": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "none"
        },
        "1": {
          "valueName": "slow"
        },
        "2": {
          "valueName": "medium"
        },
        "3": {
          "valueName": "fast"
        }
      }
    },
    "activity_class": {
      "baseType": "enum",
      "values": {
        "100": {
          "valueName": "level_max"
        },
        "127": {
          "valueName": "level",
          "comment": "0 to 100"
        },
        "128": {
          "valueName": "athlete"
        }
      }
    },
    "hr_zone_calc": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "custom"
        },
        "1": {
          "valueName": "percent_max_hr"
        },
        "2": {
          "valueName": "percent_hrr"
        }
      }
    },
    "pwr_zone_calc": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "custom"
        },
        "1": {
          "valueName": "percent_ftp"
        }
      }
    },
    "wkt_step_duration": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "time"
        },
        "1": {
          "valueName": "distance"
        },
        "2": {
          "valueName": "hr_less_than"
        },
        "3": {
          "valueName": "hr_greater_than"
        },
        "4": {
          "valueName": "calories"
        },
        "5": {
          "valueName": "open"
        },
        "6": {
          "valueName": "repeat_until_steps_cmplt"
        },
        "7": {
          "valueName": "repeat_until_time"
        },
        "8": {
          "valueName": "repeat_until_distance"
        },
        "9": {
          "valueName": "repeat_until_calories"
        },
        "10": {
          "valueName": "repeat_until_hr_less_than"
        },
        "11": {
          "valueName": "repeat_until_hr_greater_than"
        },
        "12": {
          "valueName": "repeat_until_power_less_than"
        },
        "13": {
          "valueName": "repeat_until_power_greater_than"
        },
        "14": {
          "valueName": "power_less_than"
        },
        "15": {
          "valueName": "power_greater_than"
        },
        "16": {
          "valueName": "training_peaks_tss"
        },
        "17": {
          "valueName": "repeat_until_power_last_lap_less_than"
        },
        "18": {
          "valueName": "repeat_until_max_power_last_lap_less_than"
        },
        "19": {
          "valueName": "power_3s_less_than"
        },
        "20": {
          "valueName": "power_10s_less_than"
        },
        "21": {
          "valueName": "power_30s_less_than"
        },
        "22": {
          "valueName": "power_3s_greater_than"
        },
        "23": {
          "valueName": "power_10s_greater_than"
        },
        "24": {
          "valueName": "power_30s_greater_than"
        },
        "25": {
          "valueName": "power_lap_less_than"
        },
        "26": {
          "valueName": "power_lap_greater_than"
        },
        "27": {
          "valueName": "repeat_until_training_peaks_tss"
        },
        "28": {
          "valueName": "repetition_time"
        },
        "29": {
          "valueName": "reps"
        }
      }
    },
    "wkt_step_target": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "speed"
        },
        "1": {
          "valueName": "heart_rate"
        },
        "2": {
          "valueName": "open"
        },
        "3": {
          "valueName": "cadence"
        },
        "4": {
          "valueName": "power"
        },
        "5": {
          "valueName": "grade"
        },
        "6": {
          "valueName": "resistance"
        },
        "7": {
          "valueName": "power_3s"
        },
        "8": {
          "valueName": "power_10s"
        },
        "9": {
          "valueName": "power_30s"
        },
        "10": {
          "valueName": "power_lap"
        },
        "11": {
          "valueName": "swim_stroke"
        },
        "12": {
          "valueName": "speed_lap"
        },
        "13": {
          "valueName": "heart_rate_lap"
        }
      }
    },
    "goal": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "time"
        },
        "1": {
          "valueName": "distance"
        },
        "2": {
          "valueName": "calories"
        },
        "3": {
          "valueName": "frequency"
        },
        "4": {
          "valueName": "steps"
        },
        "5": {
          "valueName": "ascent"
        },
        "6": {
          "valueName": "active_minutes"
        }
      }
    },
    "goal_recurrence": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "off"
        },
        "1": {
          "valueName": "daily"
        },
        "2": {
          "valueName": "weekly"
        },
        "3": {
          "valueName": "monthly"
        },
        "4": {
          "valueName": "yearly"
        },
        "5": {
          "valueName": "custom"
        }
      }
    },
    "goal_source": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "auto",
          "comment": "Device generated"
        },
        "1": {
          "valueName": "community",
          "comment": "Social network sourced goal"
        },
        "2": {
          "valueName": "user",
          "comment": "Manually generated"
        }
      }
    },
    "schedule": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "workout"
        },
        "1": {
          "valueName": "course"
        }
      }
    },
    "course_point": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "generic"
        },
        "1": {
          "valueName": "summit"
        },
        "2": {
          "valueName": "valley"
        },
        "3": {
          "valueName": "water"
        },
        "4": {
          "valueName": "food"
        },
        "5": {
          "valueName": "danger"
        },
        "6": {
          "valueName": "left"
        },
        "7": {
          "valueName": "right"
        },
        "8": {
          "valueName": "straight"
        },
        "9": {
          "valueName": "first_aid"
        },
        "10": {
          "valueName": "fourth_category"
        },
        "11": {
          "valueName": "third_category"
        },
        "12": {
          "valueName": "second_category"
        },
        "13": {
          "valueName": "first_category"
        },
        "14": {
          "valueName": "hors_category"
        },
        "15": {
          "valueName": "sprint"
        },
        "16": {
          "valueName": "left_fork"
        },
        "17": {
          "valueName": "right_fork"
        },
        "18": {
          "valueName": "middle_fork"
        },
        "19": {
          "valueName": "slight_left"
        },
        "20": {
          "valueName": "sharp_left"
        },
        "21": {
          "valueName": "slight_right"
        },
        "22": {
          "valueName": "sharp_right"
        },
        "23": {
          "valueName": "u_turn"
        },
        "24": {
          "valueName": "segment_start"
        },
        "25": {
          "valueName": "segment_end"
        }
      }
    },
    "manufacturer": {
      "baseType": "uint16",
      "values": {
        "1": {
          "valueName": "garmin"
        },
        "2": {
          "valueName": "garmin_fr405_antfs",
          "comment": "Do not use.  Used by FR405 for ANTFS man id."
        },
        "3": {
          "valueName": "zephyr"
        },
        "4": {
          "valueName": "dayton"
        },
        "5": {
          "valueName": "idt"
        },
        "6": {
          "valueName": "srm"
        },
        "7": {
          "valueName": "quarq"
        },
        "8": {
          "valueName": "ibike"
        },
        "9": {
          "valueName": "saris"
        },
        "10": {
          "valueName": "spark_hk"
        },
        "11": {
          "valueName": "tanita"
        },
        "12": {
          "valueName": "echowell"
        },
        "13": {
          "valueName": "dynastream_oem"
        },
        "14": {
          "valueName": "nautilus"
        },
        "15": {
          "valueName": "dynastream"
        },
        "16": {
          "valueName": "timex"
        },
        "17": {
          "valueName": "metrigear"
        },
        "18": {
          "valueName": "xelic"
        },
        "19": {
          "valueName": "beurer"
        },
        "20": {
          "valueName": "cardiosport"
        },
        "21": {
          "valueName": "a_and_d"
        },
        "22": {
          "valueName": "hmm"
        },
        "23": {
          "valueName": "suunto"
        },
        "24": {
          "valueName": "thita_elektronik"
        },
        "25": {
          "valueName": "gpulse"
        },
        "26": {
          "valueName": "clean_mobile"
        },
        "27": {
          "valueName": "pedal_brain"
        },
        "28": {
          "valueName": "peaksware"
        },
        "29": {
          "valueName": "saxonar"
        },
        "30": {
          "valueName": "lemond_fitness"
        },
        "31": {
          "valueName": "dexcom"
        },
        "32": {
          "valueName": "wahoo_fitness"
        },
        "33": {
          "valueName": "octane_fitness"
        },
        "34": {
          "valueName": "archinoetics"
        },
        "35": {
          "valueName": "the_hurt_box"
        },
        "36": {
          "valueName": "citizen_systems"
        },
        "37": {
          "valueName": "magellan"
        },
        "38": {
          "valueName": "osynce"
        },
        "39": {
          "valueName": "holux"
        },
        "40": {
          "valueName": "concept2"
        },
        "42": {
          "valueName": "one_giant_leap"
        },
        "43": {
          "valueName": "ace_sensor"
        },
        "44": {
          "valueName": "brim_brothers"
        },
        "45": {
          "valueName": "xplova"
        },
        "46": {
          "valueName": "perception_digital"
        },
        "47": {
          "valueName": "bf1systems"
        },
        "48": {
          "valueName": "pioneer"
        },
        "49": {
          "valueName": "spantec"
        },
        "50": {
          "valueName": "metalogics"
        },
        "51": {
          "valueName": "4iiiis"
        },
        "52": {
          "valueName": "seiko_epson"
        },
        "53": {
          "valueName": "seiko_epson_oem"
        },
        "54": {
          "valueName": "ifor_powell"
        },
        "55": {
          "valueName": "maxwell_guider"
        },
        "56": {
          "valueName": "star_trac"
        },
        "57": {
          "valueName": "breakaway"
        },
        "58": {
          "valueName": "alatech_technology_ltd"
        },
        "59": {
          "valueName": "mio_technology_europe"
        },
        "60": {
          "valueName": "rotor"
        },
        "61": {
          "valueName": "geonaute"
        },
        "62": {
          "valueName": "id_bike"
        },
        "63": {
          "valueName": "specialized"
        },
        "64": {
          "valueName": "wtek"
        },
        "65": {
          "valueName": "physical_enterprises"
        },
        "66": {
          "valueName": "north_pole_engineering"
        },
        "67": {
          "valueName": "bkool"
        },
        "68": {
          "valueName": "cateye"
        },
        "69": {
          "valueName": "stages_cycling"
        },
        "70": {
          "valueName": "sigmasport"
        },
        "71": {
          "valueName": "tomtom"
        },
        "72": {
          "valueName": "peripedal"
        },
        "73": {
          "valueName": "wattbike"
        },
        "76": {
          "valueName": "moxy"
        },
        "77": {
          "valueName": "ciclosport"
        },
        "78": {
          "valueName": "powerbahn"
        },
        "79": {
          "valueName": "acorn_projects_aps"
        },
        "80": {
          "valueName": "lifebeam"
        },
        "81": {
          "valueName": "bontrager"
        },
        "82": {
          "valueName": "wellgo"
        },
        "83": {
          "valueName": "scosche"
        },
        "84": {
          "valueName": "magura"
        },
        "85": {
          "valueName": "woodway"
        },
        "86": {
          "valueName": "elite"
        },
        "87": {
          "valueName": "nielsen_kellerman"
        },
        "88": {
          "valueName": "dk_city"
        },
        "89": {
          "valueName": "tacx"
        },
        "90": {
          "valueName": "direction_technology"
        },
        "91": {
          "valueName": "magtonic"
        },
        "92": {
          "valueName": "1partcarbon"
        },
        "93": {
          "valueName": "inside_ride_technologies"
        },
        "94": {
          "valueName": "sound_of_motion"
        },
        "95": {
          "valueName": "stryd"
        },
        "96": {
          "valueName": "icg",
          "comment": "Indoorcycling Group"
        },
        "97": {
          "valueName": "MiPulse"
        },
        "98": {
          "valueName": "bsx_athletics"
        },
        "99": {
          "valueName": "look"
        },
        "100": {
          "valueName": "campagnolo_srl"
        },
        "101": {
          "valueName": "body_bike_smart"
        },
        "102": {
          "valueName": "praxisworks"
        },
        "103": {
          "valueName": "limits_technology",
          "comment": "Limits Technology Ltd."
        },
        "104": {
          "valueName": "topaction_technology",
          "comment": "TopAction Technology Inc."
        },
        "105": {
          "valueName": "cosinuss"
        },
        "106": {
          "valueName": "fitcare"
        },
        "107": {
          "valueName": "magene"
        },
        "108": {
          "valueName": "giant_manufacturing_co"
        },
        "109": {
          "valueName": "tigrasport",
          "comment": "Tigrasport"
        },
        "110": {
          "valueName": "salutron"
        },
        "111": {
          "valueName": "technogym"
        },
        "112": {
          "valueName": "bryton_sensors"
        },
        "113": {
          "valueName": "latitude_limited"
        },
        "114": {
          "valueName": "soaring_technology"
        },
        "115": {
          "valueName": "igpsport"
        },
        "116": {
          "valueName": "thinkrider"
        },
        "117": {
          "valueName": "gopher_sport"
        },
        "118": {
          "valueName": "waterrower"
        },
        "119": {
          "valueName": "orangetheory"
        },
        "120": {
          "valueName": "inpeak"
        },
        "121": {
          "valueName": "kinetic"
        },
        "122": {
          "valueName": "johnson_health_tech"
        },
        "123": {
          "valueName": "polar_electro"
        },
        "124": {
          "valueName": "seesense"
        },
        "125": {
          "valueName": "nci_technology"
        },
        "126": {
          "valueName": "iqsquare"
        },
        "127": {
          "valueName": "leomo"
        },
        "128": {
          "valueName": "ifit_com"
        },
        "129": {
          "valueName": "coros_byte"
        },
        "130": {
          "valueName": "versa_design"
        },
        "131": {
          "valueName": "chileaf"
        },
        "255": {
          "valueName": "development"
        },
        "257": {
          "valueName": "healthandlife"
        },
        "258": {
          "valueName": "lezyne"
        },
        "259": {
          "valueName": "scribe_labs"
        },
        "260": {
          "valueName": "zwift"
        },
        "261": {
          "valueName": "watteam"
        },
        "262": {
          "valueName": "recon"
        },
        "263": {
          "valueName": "favero_electronics"
        },
        "264": {
          "valueName": "dynovelo"
        },
        "265": {
          "valueName": "strava"
        },
        "266": {
          "valueName": "precor",
          "comment": "Amer Sports"
        },
        "267": {
          "valueName": "bryton"
        },
        "268": {
          "valueName": "sram"
        },
        "269": {
          "valueName": "navman",
          "comment": "MiTAC Global Corporation (Mio Technology)"
        },
        "270": {
          "valueName": "cobi",
          "comment": "COBI GmbH"
        },
        "271": {
          "valueName": "spivi"
        },
        "272": {
          "valueName": "mio_magellan"
        },
        "273": {
          "valueName": "evesports"
        },
        "274": {
          "valueName": "sensitivus_gauge"
        },
        "275": {
          "valueName": "podoon"
        },
        "276": {
          "valueName": "life_time_fitness"
        },
        "277": {
          "valueName": "falco_e_motors",
          "comment": "Falco eMotors Inc."
        },
        "278": {
          "valueName": "minoura"
        },
        "279": {
          "valueName": "cycliq"
        },
        "280": {
          "valueName": "luxottica"
        },
        "281": {
          "valueName": "trainer_road"
        },
        "282": {
          "valueName": "the_sufferfest"
        },
        "283": {
          "valueName": "fullspeedahead"
        },
        "284": {
          "valueName": "virtualtraining"
        },
        "285": {
          "valueName": "feedbacksports"
        },
        "286": {
          "valueName": "omata"
        },
        "287": {
          "valueName": "vdo"
        },
        "288": {
          "valueName": "magneticdays"
        },
        "289": {
          "valueName": "hammerhead"
        },
        "290": {
          "valueName": "kinetic_by_kurt"
        },
        "291": {
          "valueName": "shapelog"
        },
        "292": {
          "valueName": "dabuziduo"
        },
        "293": {
          "valueName": "jetblack"
        },
        "294": {
          "valueName": "coros"
        },
        "295": {
          "valueName": "virtugo"
        },
        "296": {
          "valueName": "velosense"
        },
        "297": {
          "valueName": "cycligentinc"
        },
        "298": {
          "valueName": "trailforks"
        },
        "299": {
          "valueName": "mahle_ebikemotion"
        },
        "300": {
          "valueName": "nurvv"
        },
        "301": {
          "valueName": "microprogram"
        },
        "5759": {
          "valueName": "actigraphcorp"
        }
      }
    },
    "garmin_product": {
      "baseType": "uint16",
      "values": {
        "1": {
          "valueName": "hrm1"
        },
        "2": {
          "valueName": "axh01",
          "comment": "AXH01 HRM chipset"
        },
        "3": {
          "valueName": "axb01"
        },
        "4": {
          "valueName": "axb02"
        },
        "5": {
          "valueName": "hrm2ss"
        },
        "6": {
          "valueName": "dsi_alf02"
        },
        "7": {
          "valueName": "hrm3ss"
        },
        "8": {
          "valueName": "hrm_run_single_byte_product_id",
          "comment": "hrm_run model for HRM ANT+ messaging"
        },
        "9": {
          "valueName": "bsm",
          "comment": "BSM model for ANT+ messaging"
        },
        "10": {
          "valueName": "bcm",
          "comment": "BCM model for ANT+ messaging"
        },
        "11": {
          "valueName": "axs01",
          "comment": "AXS01 HRM Bike Chipset model for ANT+ messaging"
        },
        "12": {
          "valueName": "hrm_tri_single_byte_product_id",
          "comment": "hrm_tri model for HRM ANT+ messaging"
        },
        "14": {
          "valueName": "fr225_single_byte_product_id",
          "comment": "fr225 model for HRM ANT+ messaging"
        },
        "473": {
          "valueName": "fr301_china"
        },
        "474": {
          "valueName": "fr301_japan"
        },
        "475": {
          "valueName": "fr301_korea"
        },
        "494": {
          "valueName": "fr301_taiwan"
        },
        "717": {
          "valueName": "fr405",
          "comment": "Forerunner 405"
        },
        "782": {
          "valueName": "fr50",
          "comment": "Forerunner 50"
        },
        "987": {
          "valueName": "fr405_japan"
        },
        "988": {
          "valueName": "fr60",
          "comment": "Forerunner 60"
        },
        "1011": {
          "valueName": "dsi_alf01"
        },
        "1018": {
          "valueName": "fr310xt",
          "comment": "Forerunner 310"
        },
        "1036": {
          "valueName": "edge500"
        },
        "1124": {
          "valueName": "fr110",
          "comment": "Forerunner 110"
        },
        "1169": {
          "valueName": "edge800"
        },
        "1199": {
          "valueName": "edge500_taiwan"
        },
        "1213": {
          "valueName": "edge500_japan"
        },
        "1253": {
          "valueName": "chirp"
        },
        "1274": {
          "valueName": "fr110_japan"
        },
        "1325": {
          "valueName": "edge200"
        },
        "1328": {
          "valueName": "fr910xt"
        },
        "1333": {
          "valueName": "edge800_taiwan"
        },
        "1334": {
          "valueName": "edge800_japan"
        },
        "1341": {
          "valueName": "alf04"
        },
        "1345": {
          "valueName": "fr610"
        },
        "1360": {
          "valueName": "fr210_japan"
        },
        "1380": {
          "valueName": "vector_ss"
        },
        "1381": {
          "valueName": "vector_cp"
        },
        "1386": {
          "valueName": "edge800_china"
        },
        "1387": {
          "valueName": "edge500_china"
        },
        "1410": {
          "valueName": "fr610_japan"
        },
        "1422": {
          "valueName": "edge500_korea"
        },
        "1436": {
          "valueName": "fr70"
        },
        "1446": {
          "valueName": "fr310xt_4t"
        },
        "1461": {
          "valueName": "amx"
        },
        "1482": {
          "valueName": "fr10"
        },
        "1497": {
          "valueName": "edge800_korea"
        },
        "1499": {
          "valueName": "swim"
        },
        "1537": {
          "valueName": "fr910xt_china"
        },
        "1551": {
          "valueName": "fenix"
        },
        "1555": {
          "valueName": "edge200_taiwan"
        },
        "1561": {
          "valueName": "edge510"
        },
        "1567": {
          "valueName": "edge810"
        },
        "1570": {
          "valueName": "tempe"
        },
        "1600": {
          "valueName": "fr910xt_japan"
        },
        "1623": {
          "valueName": "fr620"
        },
        "1632": {
          "valueName": "fr220"
        },
        "1664": {
          "valueName": "fr910xt_korea"
        },
        "1688": {
          "valueName": "fr10_japan"
        },
        "1721": {
          "valueName": "edge810_japan"
        },
        "1735": {
          "valueName": "virb_elite"
        },
        "1736": {
          "valueName": "edge_touring",
          "comment": "Also Edge Touring Plus"
        },
        "1742": {
          "valueName": "edge510_japan"
        },
        "1743": {
          "valueName": "hrm_tri"
        },
        "1752": {
          "valueName": "hrm_run"
        },
        "1765": {
          "valueName": "fr920xt"
        },
        "1821": {
          "valueName": "edge510_asia"
        },
        "1822": {
          "valueName": "edge810_china"
        },
        "1823": {
          "valueName": "edge810_taiwan"
        },
        "1836": {
          "valueName": "edge1000"
        },
        "1837": {
          "valueName": "vivo_fit"
        },
        "1853": {
          "valueName": "virb_remote"
        },
        "1885": {
          "valueName": "vivo_ki"
        },
        "1903": {
          "valueName": "fr15"
        },
        "1907": {
          "valueName": "vivo_active"
        },
        "1918": {
          "valueName": "edge510_korea"
        },
        "1928": {
          "valueName": "fr620_japan"
        },
        "1929": {
          "valueName": "fr620_china"
        },
        "1930": {
          "valueName": "fr220_japan"
        },
        "1931": {
          "valueName": "fr220_china"
        },
        "1936": {
          "valueName": "approach_s6"
        },
        "1956": {
          "valueName": "vivo_smart"
        },
        "1967": {
          "valueName": "fenix2"
        },
        "1988": {
          "valueName": "epix"
        },
        "2050": {
          "valueName": "fenix3"
        },
        "2052": {
          "valueName": "edge1000_taiwan"
        },
        "2053": {
          "valueName": "edge1000_japan"
        },
        "2061": {
          "valueName": "fr15_japan"
        },
        "2067": {
          "valueName": "edge520"
        },
        "2070": {
          "valueName": "edge1000_china"
        },
        "2072": {
          "valueName": "fr620_russia"
        },
        "2073": {
          "valueName": "fr220_russia"
        },
        "2079": {
          "valueName": "vector_s"
        },
        "2100": {
          "valueName": "edge1000_korea"
        },
        "2130": {
          "valueName": "fr920xt_taiwan"
        },
        "2131": {
          "valueName": "fr920xt_china"
        },
        "2132": {
          "valueName": "fr920xt_japan"
        },
        "2134": {
          "valueName": "virbx"
        },
        "2135": {
          "valueName": "vivo_smart_apac"
        },
        "2140": {
          "valueName": "etrex_touch"
        },
        "2147": {
          "valueName": "edge25"
        },
        "2148": {
          "valueName": "fr25"
        },
        "2150": {
          "valueName": "vivo_fit2"
        },
        "2153": {
          "valueName": "fr225"
        },
        "2156": {
          "valueName": "fr630"
        },
        "2157": {
          "valueName": "fr230"
        },
        "2158": {
          "valueName": "fr735xt"
        },
        "2160": {
          "valueName": "vivo_active_apac"
        },
        "2161": {
          "valueName": "vector_2"
        },
        "2162": {
          "valueName": "vector_2s"
        },
        "2172": {
          "valueName": "virbxe"
        },
        "2173": {
          "valueName": "fr620_taiwan"
        },
        "2174": {
          "valueName": "fr220_taiwan"
        },
        "2175": {
          "valueName": "truswing"
        },
        "2188": {
          "valueName": "fenix3_china"
        },
        "2189": {
          "valueName": "fenix3_twn"
        },
        "2192": {
          "valueName": "varia_headlight"
        },
        "2193": {
          "valueName": "varia_taillight_old"
        },
        "2204": {
          "valueName": "edge_explore_1000"
        },
        "2219": {
          "valueName": "fr225_asia"
        },
        "2225": {
          "valueName": "varia_radar_taillight"
        },
        "2226": {
          "valueName": "varia_radar_display"
        },
        "2238": {
          "valueName": "edge20"
        },
        "2262": {
          "valueName": "d2_bravo"
        },
        "2266": {
          "valueName": "approach_s20"
        },
        "2276": {
          "valueName": "varia_remote"
        },
        "2292": {
          "valueName": "approach_x40"
        },
        "2327": {
          "valueName": "hrm4_run"
        },
        "2337": {
          "valueName": "vivo_active_hr"
        },
        "2347": {
          "valueName": "vivo_smart_gps_hr"
        },
        "2348": {
          "valueName": "vivo_smart_hr"
        },
        "2368": {
          "valueName": "vivo_move"
        },
        "2398": {
          "valueName": "varia_vision"
        },
        "2406": {
          "valueName": "vivo_fit3"
        },
        "2413": {
          "valueName": "fenix3_hr"
        },
        "2417": {
          "valueName": "virb_ultra_30"
        },
        "2429": {
          "valueName": "index_smart_scale"
        },
        "2431": {
          "valueName": "fr235"
        },
        "2432": {
          "valueName": "fenix3_chronos"
        },
        "2441": {
          "valueName": "oregon7xx"
        },
        "2444": {
          "valueName": "rino7xx"
        },
        "2496": {
          "valueName": "nautix"
        },
        "2530": {
          "valueName": "edge_820"
        },
        "2531": {
          "valueName": "edge_explore_820"
        },
        "2533": {
          "valueName": "fr735xt_apac"
        },
        "2534": {
          "valueName": "fr735xt_japan"
        },
        "2544": {
          "valueName": "fenix5s"
        },
        "2547": {
          "valueName": "d2_bravo_titanium"
        },
        "2567": {
          "valueName": "varia_ut800",
          "comment": "Varia UT 800 SW"
        },
        "2593": {
          "valueName": "running_dynamics_pod"
        },
        "2604": {
          "valueName": "fenix5x"
        },
        "2606": {
          "valueName": "vivo_fit_jr"
        },
        "2622": {
          "valueName": "vivo_smart3"
        },
        "2623": {
          "valueName": "vivo_sport"
        },
        "2656": {
          "valueName": "approach_s60"
        },
        "2687": {
          "valueName": "virb_360"
        },
        "2691": {
          "valueName": "fr935"
        },
        "2697": {
          "valueName": "fenix5"
        },
        "2700": {
          "valueName": "vivoactive3"
        },
        "2713": {
          "valueName": "edge_1030"
        },
        "2769": {
          "valueName": "foretrex_601_701"
        },
        "2772": {
          "valueName": "vivo_move_hr"
        },
        "2806": {
          "valueName": "approach_z80"
        },
        "2831": {
          "valueName": "vivo_smart3_apac"
        },
        "2832": {
          "valueName": "vivo_sport_apac"
        },
        "2859": {
          "valueName": "descent"
        },
        "2886": {
          "valueName": "fr645"
        },
        "2888": {
          "valueName": "fr645m"
        },
        "2900": {
          "valueName": "fenix5s_plus"
        },
        "2909": {
          "valueName": "Edge_130"
        },
        "2927": {
          "valueName": "vivosmart_4"
        },
        "2962": {
          "valueName": "approach_x10"
        },
        "2988": {
          "valueName": "vivoactive3m_w"
        },
        "3011": {
          "valueName": "edge_explore"
        },
        "3028": {
          "valueName": "gpsmap66"
        },
        "3049": {
          "valueName": "approach_s10"
        },
        "3066": {
          "valueName": "vivoactive3m_l"
        },
        "3085": {
          "valueName": "approach_g80"
        },
        "3110": {
          "valueName": "fenix5_plus"
        },
        "3111": {
          "valueName": "fenix5x_plus"
        },
        "3112": {
          "valueName": "edge_520_plus"
        },
        "3299": {
          "valueName": "hrm_dual",
          "comment": "HRM-Dual"
        },
        "3314": {
          "valueName": "approach_s40"
        },
        "10007": {
          "valueName": "sdm4",
          "comment": "SDM4 footpod"
        },
        "10014": {
          "valueName": "edge_remote"
        },
        "20119": {
          "valueName": "training_center"
        },
        "65531": {
          "valueName": "connectiq_simulator"
        },
        "65532": {
          "valueName": "android_antplus_plugin"
        },
        "65534": {
          "valueName": "connect",
          "comment": "Garmin Connect website"
        }
      }
    },
    "antplus_device_type": {
      "baseType": "uint8",
      "values": {
        "1": {
          "valueName": "antfs"
        },
        "11": {
          "valueName": "bike_power"
        },
        "12": {
          "valueName": "environment_sensor_legacy"
        },
        "15": {
          "valueName": "multi_sport_speed_distance"
        },
        "16": {
          "valueName": "control"
        },
        "17": {
          "valueName": "fitness_equipment"
        },
        "18": {
          "valueName": "blood_pressure"
        },
        "19": {
          "valueName": "geocache_node"
        },
        "20": {
          "valueName": "light_electric_vehicle"
        },
        "25": {
          "valueName": "env_sensor"
        },
        "26": {
          "valueName": "racquet"
        },
        "27": {
          "valueName": "control_hub"
        },
        "31": {
          "valueName": "muscle_oxygen"
        },
        "35": {
          "valueName": "bike_light_main"
        },
        "36": {
          "valueName": "bike_light_shared"
        },
        "38": {
          "valueName": "exd"
        },
        "40": {
          "valueName": "bike_radar"
        },
        "46": {
          "valueName": "bike_aero"
        },
        "119": {
          "valueName": "weight_scale"
        },
        "120": {
          "valueName": "heart_rate"
        },
        "121": {
          "valueName": "bike_speed_cadence"
        },
        "122": {
          "valueName": "bike_cadence"
        },
        "123": {
          "valueName": "bike_speed"
        },
        "124": {
          "valueName": "stride_speed_distance"
        }
      }
    },
    "ant_network": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "public"
        },
        "1": {
          "valueName": "antplus"
        },
        "2": {
          "valueName": "antfs"
        },
        "3": {
          "valueName": "private"
        }
      }
    },
    "workout_capabilities": {
      "baseType": "uint32z",
      "values": {
        "1": {
          "valueName": "interval"
        },
        "2": {
          "valueName": "custom"
        },
        "4": {
          "valueName": "fitness_equipment"
        },
        "8": {
          "valueName": "firstbeat"
        },
        "16": {
          "valueName": "new_leaf"
        },
        "32": {
          "valueName": "tcx",
          "comment": "For backwards compatibility.  Watch should add missing id fields then clear flag."
        },
        "128": {
          "valueName": "speed",
          "comment": "Speed source required for workout step."
        },
        "256": {
          "valueName": "heart_rate",
          "comment": "Heart rate source required for workout step."
        },
        "512": {
          "valueName": "distance",
          "comment": "Distance source required for workout step."
        },
        "1024": {
          "valueName": "cadence",
          "comment": "Cadence source required for workout step."
        },
        "2048": {
          "valueName": "power",
          "comment": "Power source required for workout step."
        },
        "4096": {
          "valueName": "grade",
          "comment": "Grade source required for workout step."
        },
        "8192": {
          "valueName": "resistance",
          "comment": "Resistance source required for workout step."
        },
        "16384": {
          "valueName": "protected"
        }
      }
    },
    "battery_status": {
      "baseType": "uint8",
      "values": {
        "1": {
          "valueName": "new"
        },
        "2": {
          "valueName": "good"
        },
        "3": {
          "valueName": "ok"
        },
        "4": {
          "valueName": "low"
        },
        "5": {
          "valueName": "critical"
        },
        "6": {
          "valueName": "charging"
        },
        "7": {
          "valueName": "unknown"
        }
      }
    },
    "hr_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "normal"
        },
        "1": {
          "valueName": "irregular"
        }
      }
    },
    "course_capabilities": {
      "baseType": "uint32z",
      "values": {
        "1": {
          "valueName": "processed"
        },
        "2": {
          "valueName": "valid"
        },
        "4": {
          "valueName": "time"
        },
        "8": {
          "valueName": "distance"
        },
        "16": {
          "valueName": "position"
        },
        "32": {
          "valueName": "heart_rate"
        },
        "64": {
          "valueName": "power"
        },
        "128": {
          "valueName": "cadence"
        },
        "256": {
          "valueName": "training"
        },
        "512": {
          "valueName": "navigation"
        },
        "1024": {
          "valueName": "bikeway"
        }
      }
    },
    "weight": {
      "baseType": "uint16",
      "values": {
        "65534": {
          "valueName": "calculating"
        }
      }
    },
    "workout_hr": {
      "baseType": "uint32",
      "comment": "0 - 100 indicates% of max hr; >100 indicates bpm (255 max) plus 100",
      "values": {
        "100": {
          "valueName": "bpm_offset"
        }
      }
    },
    "workout_power": {
      "baseType": "uint32",
      "comment": "0 - 1000 indicates % of functional threshold power; >1000 indicates watts plus 1000.",
      "values": {
        "1000": {
          "valueName": "watts_offset"
        }
      }
    },
    "bp_status": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "no_error"
        },
        "1": {
          "valueName": "error_incomplete_data"
        },
        "2": {
          "valueName": "error_no_measurement"
        },
        "3": {
          "valueName": "error_data_out_of_range"
        },
        "4": {
          "valueName": "error_irregular_heart_rate"
        }
      }
    },
    "user_local_id": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "local_min"
        },
        "15": {
          "valueName": "local_max"
        },
        "16": {
          "valueName": "stationary_min"
        },
        "255": {
          "valueName": "stationary_max"
        },
        "256": {
          "valueName": "portable_min"
        },
        "65534": {
          "valueName": "portable_max"
        }
      }
    },
    "swim_stroke": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "freestyle"
        },
        "1": {
          "valueName": "backstroke"
        },
        "2": {
          "valueName": "breaststroke"
        },
        "3": {
          "valueName": "butterfly"
        },
        "4": {
          "valueName": "drill"
        },
        "5": {
          "valueName": "mixed"
        },
        "6": {
          "valueName": "im",
          "comment": "IM is a mixed interval containing the same number of lengths for each of: Butterfly, Backstroke, Breaststroke, Freestyle, swam in that order."
        }
      }
    },
    "activity_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "generic"
        },
        "1": {
          "valueName": "running"
        },
        "2": {
          "valueName": "cycling"
        },
        "3": {
          "valueName": "transition",
          "comment": "Mulitsport transition"
        },
        "4": {
          "valueName": "fitness_equipment"
        },
        "5": {
          "valueName": "swimming"
        },
        "6": {
          "valueName": "walking"
        },
        "8": {
          "valueName": "sedentary"
        },
        "254": {
          "valueName": "all",
          "comment": "All is for goals only to include all sports."
        }
      }
    },
    "activity_subtype": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "generic"
        },
        "1": {
          "valueName": "treadmill",
          "comment": "Run"
        },
        "2": {
          "valueName": "street",
          "comment": "Run"
        },
        "3": {
          "valueName": "trail",
          "comment": "Run"
        },
        "4": {
          "valueName": "track",
          "comment": "Run"
        },
        "5": {
          "valueName": "spin",
          "comment": "Cycling"
        },
        "6": {
          "valueName": "indoor_cycling",
          "comment": "Cycling"
        },
        "7": {
          "valueName": "road",
          "comment": "Cycling"
        },
        "8": {
          "valueName": "mountain",
          "comment": "Cycling"
        },
        "9": {
          "valueName": "downhill",
          "comment": "Cycling"
        },
        "10": {
          "valueName": "recumbent",
          "comment": "Cycling"
        },
        "11": {
          "valueName": "cyclocross",
          "comment": "Cycling"
        },
        "12": {
          "valueName": "hand_cycling",
          "comment": "Cycling"
        },
        "13": {
          "valueName": "track_cycling",
          "comment": "Cycling"
        },
        "14": {
          "valueName": "indoor_rowing",
          "comment": "Fitness Equipment"
        },
        "15": {
          "valueName": "elliptical",
          "comment": "Fitness Equipment"
        },
        "16": {
          "valueName": "stair_climbing",
          "comment": "Fitness Equipment"
        },
        "17": {
          "valueName": "lap_swimming",
          "comment": "Swimming"
        },
        "18": {
          "valueName": "open_water",
          "comment": "Swimming"
        },
        "254": {
          "valueName": "all"
        }
      }
    },
    "activity_level": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "low"
        },
        "1": {
          "valueName": "medium"
        },
        "2": {
          "valueName": "high"
        }
      }
    },
    "side": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "right"
        },
        "1": {
          "valueName": "left"
        }
      }
    },
    "left_right_balance": {
      "baseType": "uint8",
      "values": {
        "127": {
          "valueName": "mask",
          "comment": "% contribution"
        },
        "128": {
          "valueName": "right",
          "comment": "data corresponds to right if set, otherwise unknown"
        }
      }
    },
    "left_right_balance_100": {
      "baseType": "uint16",
      "values": {
        "16383": {
          "valueName": "mask",
          "comment": "% contribution scaled by 100"
        },
        "32768": {
          "valueName": "right",
          "comment": "data corresponds to right if set, otherwise unknown"
        }
      }
    },
    "length_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "idle",
          "comment": "Rest period. Length with no strokes"
        },
        "1": {
          "valueName": "active",
          "comment": "Length with strokes."
        }
      }
    },
    "day_of_week": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "sunday"
        },
        "1": {
          "valueName": "monday"
        },
        "2": {
          "valueName": "tuesday"
        },
        "3": {
          "valueName": "wednesday"
        },
        "4": {
          "valueName": "thursday"
        },
        "5": {
          "valueName": "friday"
        },
        "6": {
          "valueName": "saturday"
        }
      }
    },
    "connectivity_capabilities": {
      "baseType": "uint32z",
      "values": {
        "1": {
          "valueName": "bluetooth"
        },
        "2": {
          "valueName": "bluetooth_le"
        },
        "4": {
          "valueName": "ant"
        },
        "8": {
          "valueName": "activity_upload"
        },
        "16": {
          "valueName": "course_download"
        },
        "32": {
          "valueName": "workout_download"
        },
        "64": {
          "valueName": "live_track"
        },
        "128": {
          "valueName": "weather_conditions"
        },
        "256": {
          "valueName": "weather_alerts"
        },
        "512": {
          "valueName": "gps_ephemeris_download"
        },
        "1024": {
          "valueName": "explicit_archive"
        },
        "2048": {
          "valueName": "setup_incomplete"
        },
        "4096": {
          "valueName": "continue_sync_after_software_update"
        },
        "8192": {
          "valueName": "connect_iq_app_download"
        },
        "16384": {
          "valueName": "golf_course_download"
        },
        "32768": {
          "valueName": "device_initiates_sync",
          "comment": "Indicates device is in control of initiating all syncs"
        },
        "65536": {
          "valueName": "connect_iq_watch_app_download"
        },
        "131072": {
          "valueName": "connect_iq_widget_download"
        },
        "262144": {
          "valueName": "connect_iq_watch_face_download"
        },
        "524288": {
          "valueName": "connect_iq_data_field_download"
        },
        "1048576": {
          "valueName": "connect_iq_app_managment",
          "comment": "Device supports delete and reorder of apps via GCM"
        },
        "2097152": {
          "valueName": "swing_sensor"
        },
        "4194304": {
          "valueName": "swing_sensor_remote"
        },
        "8388608": {
          "valueName": "incident_detection",
          "comment": "Device supports incident detection"
        },
        "16777216": {
          "valueName": "audio_prompts"
        },
        "33554432": {
          "valueName": "wifi_verification",
          "comment": "Device supports reporting wifi verification via GCM"
        },
        "67108864": {
          "valueName": "true_up",
          "comment": "Device supports True Up"
        },
        "134217728": {
          "valueName": "find_my_watch",
          "comment": "Device supports Find My Watch"
        },
        "268435456": {
          "valueName": "remote_manual_sync"
        },
        "536870912": {
          "valueName": "live_track_auto_start",
          "comment": "Device supports LiveTrack auto start"
        },
        "1073741824": {
          "valueName": "live_track_messaging",
          "comment": "Device supports LiveTrack Messaging"
        },
        "2147483648": {
          "valueName": "instant_input",
          "comment": "Device supports instant input feature"
        }
      }
    },
    "weather_report": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "current"
        },
        "1": {
          "valueName": "hourly_forecast"
        },
        "2": {
          "valueName": "daily_forecast"
        }
      }
    },
    "weather_status": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "clear"
        },
        "1": {
          "valueName": "partly_cloudy"
        },
        "2": {
          "valueName": "mostly_cloudy"
        },
        "3": {
          "valueName": "rain"
        },
        "4": {
          "valueName": "snow"
        },
        "5": {
          "valueName": "windy"
        },
        "6": {
          "valueName": "thunderstorms"
        },
        "7": {
          "valueName": "wintry_mix"
        },
        "8": {
          "valueName": "fog"
        },
        "11": {
          "valueName": "hazy"
        },
        "12": {
          "valueName": "hail"
        },
        "13": {
          "valueName": "scattered_showers"
        },
        "14": {
          "valueName": "scattered_thunderstorms"
        },
        "15": {
          "valueName": "unknown_precipitation"
        },
        "16": {
          "valueName": "light_rain"
        },
        "17": {
          "valueName": "heavy_rain"
        },
        "18": {
          "valueName": "light_snow"
        },
        "19": {
          "valueName": "heavy_snow"
        },
        "20": {
          "valueName": "light_rain_snow"
        },
        "21": {
          "valueName": "heavy_rain_snow"
        },
        "22": {
          "valueName": "cloudy"
        }
      }
    },
    "weather_severity": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "unknown"
        },
        "1": {
          "valueName": "warning"
        },
        "2": {
          "valueName": "watch"
        },
        "3": {
          "valueName": "advisory"
        },
        "4": {
          "valueName": "statement"
        }
      }
    },
    "weather_severe_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "unspecified"
        },
        "1": {
          "valueName": "tornado"
        },
        "2": {
          "valueName": "tsunami"
        },
        "3": {
          "valueName": "hurricane"
        },
        "4": {
          "valueName": "extreme_wind"
        },
        "5": {
          "valueName": "typhoon"
        },
        "6": {
          "valueName": "inland_hurricane"
        },
        "7": {
          "valueName": "hurricane_force_wind"
        },
        "8": {
          "valueName": "waterspout"
        },
        "9": {
          "valueName": "severe_thunderstorm"
        },
        "10": {
          "valueName": "wreckhouse_winds"
        },
        "11": {
          "valueName": "les_suetes_wind"
        },
        "12": {
          "valueName": "avalanche"
        },
        "13": {
          "valueName": "flash_flood"
        },
        "14": {
          "valueName": "tropical_storm"
        },
        "15": {
          "valueName": "inland_tropical_storm"
        },
        "16": {
          "valueName": "blizzard"
        },
        "17": {
          "valueName": "ice_storm"
        },
        "18": {
          "valueName": "freezing_rain"
        },
        "19": {
          "valueName": "debris_flow"
        },
        "20": {
          "valueName": "flash_freeze"
        },
        "21": {
          "valueName": "dust_storm"
        },
        "22": {
          "valueName": "high_wind"
        },
        "23": {
          "valueName": "winter_storm"
        },
        "24": {
          "valueName": "heavy_freezing_spray"
        },
        "25": {
          "valueName": "extreme_cold"
        },
        "26": {
          "valueName": "wind_chill"
        },
        "27": {
          "valueName": "cold_wave"
        },
        "28": {
          "valueName": "heavy_snow_alert"
        },
        "29": {
          "valueName": "lake_effect_blowing_snow"
        },
        "30": {
          "valueName": "snow_squall"
        },
        "31": {
          "valueName": "lake_effect_snow"
        },
        "32": {
          "valueName": "winter_weather"
        },
        "33": {
          "valueName": "sleet"
        },
        "34": {
          "valueName": "snowfall"
        },
        "35": {
          "valueName": "snow_and_blowing_snow"
        },
        "36": {
          "valueName": "blowing_snow"
        },
        "37": {
          "valueName": "snow_alert"
        },
        "38": {
          "valueName": "arctic_outflow"
        },
        "39": {
          "valueName": "freezing_drizzle"
        },
        "40": {
          "valueName": "storm"
        },
        "41": {
          "valueName": "storm_surge"
        },
        "42": {
          "valueName": "rainfall"
        },
        "43": {
          "valueName": "areal_flood"
        },
        "44": {
          "valueName": "coastal_flood"
        },
        "45": {
          "valueName": "lakeshore_flood"
        },
        "46": {
          "valueName": "excessive_heat"
        },
        "47": {
          "valueName": "heat"
        },
        "48": {
          "valueName": "weather"
        },
        "49": {
          "valueName": "high_heat_and_humidity"
        },
        "50": {
          "valueName": "humidex_and_health"
        },
        "51": {
          "valueName": "humidex"
        },
        "52": {
          "valueName": "gale"
        },
        "53": {
          "valueName": "freezing_spray"
        },
        "54": {
          "valueName": "special_marine"
        },
        "55": {
          "valueName": "squall"
        },
        "56": {
          "valueName": "strong_wind"
        },
        "57": {
          "valueName": "lake_wind"
        },
        "58": {
          "valueName": "marine_weather"
        },
        "59": {
          "valueName": "wind"
        },
        "60": {
          "valueName": "small_craft_hazardous_seas"
        },
        "61": {
          "valueName": "hazardous_seas"
        },
        "62": {
          "valueName": "small_craft"
        },
        "63": {
          "valueName": "small_craft_winds"
        },
        "64": {
          "valueName": "small_craft_rough_bar"
        },
        "65": {
          "valueName": "high_water_level"
        },
        "66": {
          "valueName": "ashfall"
        },
        "67": {
          "valueName": "freezing_fog"
        },
        "68": {
          "valueName": "dense_fog"
        },
        "69": {
          "valueName": "dense_smoke"
        },
        "70": {
          "valueName": "blowing_dust"
        },
        "71": {
          "valueName": "hard_freeze"
        },
        "72": {
          "valueName": "freeze"
        },
        "73": {
          "valueName": "frost"
        },
        "74": {
          "valueName": "fire_weather"
        },
        "75": {
          "valueName": "flood"
        },
        "76": {
          "valueName": "rip_tide"
        },
        "77": {
          "valueName": "high_surf"
        },
        "78": {
          "valueName": "smog"
        },
        "79": {
          "valueName": "air_quality"
        },
        "80": {
          "valueName": "brisk_wind"
        },
        "81": {
          "valueName": "air_stagnation"
        },
        "82": {
          "valueName": "low_water"
        },
        "83": {
          "valueName": "hydrological"
        },
        "84": {
          "valueName": "special_weather"
        }
      }
    },
    "time_into_day": {
      "baseType": "uint32",
      "comment": "number of seconds into the day since 00:00:00 UTC",
      "values": {}
    },
    "localtime_into_day": {
      "baseType": "uint32",
      "comment": "number of seconds into the day since local 00:00:00",
      "values": {}
    },
    "stroke_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "no_event"
        },
        "1": {
          "valueName": "other",
          "comment": "stroke was detected but cannot be identified"
        },
        "2": {
          "valueName": "serve"
        },
        "3": {
          "valueName": "forehand"
        },
        "4": {
          "valueName": "backhand"
        },
        "5": {
          "valueName": "smash"
        }
      }
    },
    "body_location": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "left_leg"
        },
        "1": {
          "valueName": "left_calf"
        },
        "2": {
          "valueName": "left_shin"
        },
        "3": {
          "valueName": "left_hamstring"
        },
        "4": {
          "valueName": "left_quad"
        },
        "5": {
          "valueName": "left_glute"
        },
        "6": {
          "valueName": "right_leg"
        },
        "7": {
          "valueName": "right_calf"
        },
        "8": {
          "valueName": "right_shin"
        },
        "9": {
          "valueName": "right_hamstring"
        },
        "10": {
          "valueName": "right_quad"
        },
        "11": {
          "valueName": "right_glute"
        },
        "12": {
          "valueName": "torso_back"
        },
        "13": {
          "valueName": "left_lower_back"
        },
        "14": {
          "valueName": "left_upper_back"
        },
        "15": {
          "valueName": "right_lower_back"
        },
        "16": {
          "valueName": "right_upper_back"
        },
        "17": {
          "valueName": "torso_front"
        },
        "18": {
          "valueName": "left_abdomen"
        },
        "19": {
          "valueName": "left_chest"
        },
        "20": {
          "valueName": "right_abdomen"
        },
        "21": {
          "valueName": "right_chest"
        },
        "22": {
          "valueName": "left_arm"
        },
        "23": {
          "valueName": "left_shoulder"
        },
        "24": {
          "valueName": "left_bicep"
        },
        "25": {
          "valueName": "left_tricep"
        },
        "26": {
          "valueName": "left_brachioradialis",
          "comment": "Left anterior forearm"
        },
        "27": {
          "valueName": "left_forearm_extensors",
          "comment": "Left posterior forearm"
        },
        "28": {
          "valueName": "right_arm"
        },
        "29": {
          "valueName": "right_shoulder"
        },
        "30": {
          "valueName": "right_bicep"
        },
        "31": {
          "valueName": "right_tricep"
        },
        "32": {
          "valueName": "right_brachioradialis",
          "comment": "Right anterior forearm"
        },
        "33": {
          "valueName": "right_forearm_extensors",
          "comment": "Right posterior forearm"
        },
        "34": {
          "valueName": "neck"
        },
        "35": {
          "valueName": "throat"
        },
        "36": {
          "valueName": "waist_mid_back"
        },
        "37": {
          "valueName": "waist_front"
        },
        "38": {
          "valueName": "waist_left"
        },
        "39": {
          "valueName": "waist_right"
        }
      }
    },
    "segment_lap_status": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "end"
        },
        "1": {
          "valueName": "fail"
        }
      }
    },
    "segment_leaderboard_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "overall"
        },
        "1": {
          "valueName": "personal_best"
        },
        "2": {
          "valueName": "connections"
        },
        "3": {
          "valueName": "group"
        },
        "4": {
          "valueName": "challenger"
        },
        "5": {
          "valueName": "kom"
        },
        "6": {
          "valueName": "qom"
        },
        "7": {
          "valueName": "pr"
        },
        "8": {
          "valueName": "goal"
        },
        "9": {
          "valueName": "rival"
        },
        "10": {
          "valueName": "club_leader"
        }
      }
    },
    "segment_delete_status": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "do_not_delete"
        },
        "1": {
          "valueName": "delete_one"
        },
        "2": {
          "valueName": "delete_all"
        }
      }
    },
    "segment_selection_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "starred"
        },
        "1": {
          "valueName": "suggested"
        }
      }
    },
    "source_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "ant",
          "comment": "External device connected with ANT"
        },
        "1": {
          "valueName": "antplus",
          "comment": "External device connected with ANT+"
        },
        "2": {
          "valueName": "bluetooth",
          "comment": "External device connected with BT"
        },
        "3": {
          "valueName": "bluetooth_low_energy",
          "comment": "External device connected with BLE"
        },
        "4": {
          "valueName": "wifi",
          "comment": "External device connected with Wifi"
        },
        "5": {
          "valueName": "local",
          "comment": "Onboard device"
        }
      }
    },
    "local_device_type": {
      "baseType": "uint8",
      "values": {}
    },
    "display_orientation": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "auto",
          "comment": "automatic if the device supports it"
        },
        "1": {
          "valueName": "portrait"
        },
        "2": {
          "valueName": "landscape"
        },
        "3": {
          "valueName": "portrait_flipped",
          "comment": "portrait mode but rotated 180 degrees"
        },
        "4": {
          "valueName": "landscape_flipped",
          "comment": "landscape mode but rotated 180 degrees"
        }
      }
    },
    "workout_equipment": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "none"
        },
        "1": {
          "valueName": "swim_fins"
        },
        "2": {
          "valueName": "swim_kickboard"
        },
        "3": {
          "valueName": "swim_paddles"
        },
        "4": {
          "valueName": "swim_pull_buoy"
        },
        "5": {
          "valueName": "swim_snorkel"
        }
      }
    },
    "watchface_mode": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "digital"
        },
        "1": {
          "valueName": "analog"
        },
        "2": {
          "valueName": "connect_iq"
        },
        "3": {
          "valueName": "disabled"
        }
      }
    },
    "digital_watchface_layout": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "traditional"
        },
        "1": {
          "valueName": "modern"
        },
        "2": {
          "valueName": "bold"
        }
      }
    },
    "analog_watchface_layout": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "minimal"
        },
        "1": {
          "valueName": "traditional"
        },
        "2": {
          "valueName": "modern"
        }
      }
    },
    "rider_position_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "seated"
        },
        "1": {
          "valueName": "standing"
        },
        "2": {
          "valueName": "transition_to_seated"
        },
        "3": {
          "valueName": "transition_to_standing"
        }
      }
    },
    "power_phase_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "power_phase_start_angle"
        },
        "1": {
          "valueName": "power_phase_end_angle"
        },
        "2": {
          "valueName": "power_phase_arc_length"
        },
        "3": {
          "valueName": "power_phase_center"
        }
      }
    },
    "camera_event_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "video_start",
          "comment": "Start of video recording"
        },
        "1": {
          "valueName": "video_split",
          "comment": "Mark of video file split (end of one file, beginning of the other)"
        },
        "2": {
          "valueName": "video_end",
          "comment": "End of video recording"
        },
        "3": {
          "valueName": "photo_taken",
          "comment": "Still photo taken"
        },
        "4": {
          "valueName": "video_second_stream_start"
        },
        "5": {
          "valueName": "video_second_stream_split"
        },
        "6": {
          "valueName": "video_second_stream_end"
        },
        "7": {
          "valueName": "video_split_start",
          "comment": "Mark of video file split start"
        },
        "8": {
          "valueName": "video_second_stream_split_start"
        },
        "11": {
          "valueName": "video_pause",
          "comment": "Mark when a video recording has been paused"
        },
        "12": {
          "valueName": "video_second_stream_pause"
        },
        "13": {
          "valueName": "video_resume",
          "comment": "Mark when a video recording has been resumed"
        },
        "14": {
          "valueName": "video_second_stream_resume"
        }
      }
    },
    "sensor_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "accelerometer"
        },
        "1": {
          "valueName": "gyroscope"
        },
        "2": {
          "valueName": "compass",
          "comment": "Magnetometer"
        },
        "3": {
          "valueName": "barometer"
        }
      }
    },
    "bike_light_network_config_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "auto"
        },
        "4": {
          "valueName": "individual"
        },
        "5": {
          "valueName": "high_visibility"
        },
        "6": {
          "valueName": "trail"
        }
      }
    },
    "comm_timeout_type": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "wildcard_pairing_timeout",
          "comment": "Timeout pairing to any device"
        },
        "1": {
          "valueName": "pairing_timeout",
          "comment": "Timeout pairing to previously paired device"
        },
        "2": {
          "valueName": "connection_lost",
          "comment": "Temporary loss of communications"
        },
        "3": {
          "valueName": "connection_timeout",
          "comment": "Connection closed due to extended bad communications"
        }
      }
    },
    "camera_orientation_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "camera_orientation_0"
        },
        "1": {
          "valueName": "camera_orientation_90"
        },
        "2": {
          "valueName": "camera_orientation_180"
        },
        "3": {
          "valueName": "camera_orientation_270"
        }
      }
    },
    "attitude_stage": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "failed"
        },
        "1": {
          "valueName": "aligning"
        },
        "2": {
          "valueName": "degraded"
        },
        "3": {
          "valueName": "valid"
        }
      }
    },
    "attitude_validity": {
      "baseType": "uint16",
      "values": {
        "1": {
          "valueName": "track_angle_heading_valid"
        },
        "2": {
          "valueName": "pitch_valid"
        },
        "4": {
          "valueName": "roll_valid"
        },
        "8": {
          "valueName": "lateral_body_accel_valid"
        },
        "16": {
          "valueName": "normal_body_accel_valid"
        },
        "32": {
          "valueName": "turn_rate_valid"
        },
        "64": {
          "valueName": "hw_fail"
        },
        "128": {
          "valueName": "mag_invalid"
        },
        "256": {
          "valueName": "no_gps"
        },
        "512": {
          "valueName": "gps_invalid"
        },
        "1024": {
          "valueName": "solution_coasting"
        },
        "2048": {
          "valueName": "true_track_angle"
        },
        "4096": {
          "valueName": "magnetic_heading"
        }
      }
    },
    "auto_sync_frequency": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "never"
        },
        "1": {
          "valueName": "occasionally"
        },
        "2": {
          "valueName": "frequent"
        },
        "3": {
          "valueName": "once_a_day"
        },
        "4": {
          "valueName": "remote"
        }
      }
    },
    "exd_layout": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "full_screen"
        },
        "1": {
          "valueName": "half_vertical"
        },
        "2": {
          "valueName": "half_horizontal"
        },
        "3": {
          "valueName": "half_vertical_right_split"
        },
        "4": {
          "valueName": "half_horizontal_bottom_split"
        },
        "5": {
          "valueName": "full_quarter_split"
        },
        "6": {
          "valueName": "half_vertical_left_split"
        },
        "7": {
          "valueName": "half_horizontal_top_split"
        }
      }
    },
    "exd_display_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "numerical"
        },
        "1": {
          "valueName": "simple"
        },
        "2": {
          "valueName": "graph"
        },
        "3": {
          "valueName": "bar"
        },
        "4": {
          "valueName": "circle_graph"
        },
        "5": {
          "valueName": "virtual_partner"
        },
        "6": {
          "valueName": "balance"
        },
        "7": {
          "valueName": "string_list"
        },
        "8": {
          "valueName": "string"
        },
        "9": {
          "valueName": "simple_dynamic_icon"
        },
        "10": {
          "valueName": "gauge"
        }
      }
    },
    "exd_data_units": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "no_units"
        },
        "1": {
          "valueName": "laps"
        },
        "2": {
          "valueName": "miles_per_hour"
        },
        "3": {
          "valueName": "kilometers_per_hour"
        },
        "4": {
          "valueName": "feet_per_hour"
        },
        "5": {
          "valueName": "meters_per_hour"
        },
        "6": {
          "valueName": "degrees_celsius"
        },
        "7": {
          "valueName": "degrees_farenheit"
        },
        "8": {
          "valueName": "zone"
        },
        "9": {
          "valueName": "gear"
        },
        "10": {
          "valueName": "rpm"
        },
        "11": {
          "valueName": "bpm"
        },
        "12": {
          "valueName": "degrees"
        },
        "13": {
          "valueName": "millimeters"
        },
        "14": {
          "valueName": "meters"
        },
        "15": {
          "valueName": "kilometers"
        },
        "16": {
          "valueName": "feet"
        },
        "17": {
          "valueName": "yards"
        },
        "18": {
          "valueName": "kilofeet"
        },
        "19": {
          "valueName": "miles"
        },
        "20": {
          "valueName": "time"
        },
        "21": {
          "valueName": "enum_turn_type"
        },
        "22": {
          "valueName": "percent"
        },
        "23": {
          "valueName": "watts"
        },
        "24": {
          "valueName": "watts_per_kilogram"
        },
        "25": {
          "valueName": "enum_battery_status"
        },
        "26": {
          "valueName": "enum_bike_light_beam_angle_mode"
        },
        "27": {
          "valueName": "enum_bike_light_battery_status"
        },
        "28": {
          "valueName": "enum_bike_light_network_config_type"
        },
        "29": {
          "valueName": "lights"
        },
        "30": {
          "valueName": "seconds"
        },
        "31": {
          "valueName": "minutes"
        },
        "32": {
          "valueName": "hours"
        },
        "33": {
          "valueName": "calories"
        },
        "34": {
          "valueName": "kilojoules"
        },
        "35": {
          "valueName": "milliseconds"
        },
        "36": {
          "valueName": "second_per_mile"
        },
        "37": {
          "valueName": "second_per_kilometer"
        },
        "38": {
          "valueName": "centimeter"
        },
        "39": {
          "valueName": "enum_course_point"
        },
        "40": {
          "valueName": "bradians"
        },
        "41": {
          "valueName": "enum_sport"
        },
        "42": {
          "valueName": "inches_hg"
        },
        "43": {
          "valueName": "mm_hg"
        },
        "44": {
          "valueName": "mbars"
        },
        "45": {
          "valueName": "hecto_pascals"
        },
        "46": {
          "valueName": "feet_per_min"
        },
        "47": {
          "valueName": "meters_per_min"
        },
        "48": {
          "valueName": "meters_per_sec"
        },
        "49": {
          "valueName": "eight_cardinal"
        }
      }
    },
    "exd_qualifiers": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "no_qualifier"
        },
        "1": {
          "valueName": "instantaneous"
        },
        "2": {
          "valueName": "average"
        },
        "3": {
          "valueName": "lap"
        },
        "4": {
          "valueName": "maximum"
        },
        "5": {
          "valueName": "maximum_average"
        },
        "6": {
          "valueName": "maximum_lap"
        },
        "7": {
          "valueName": "last_lap"
        },
        "8": {
          "valueName": "average_lap"
        },
        "9": {
          "valueName": "to_destination"
        },
        "10": {
          "valueName": "to_go"
        },
        "11": {
          "valueName": "to_next"
        },
        "12": {
          "valueName": "next_course_point"
        },
        "13": {
          "valueName": "total"
        },
        "14": {
          "valueName": "three_second_average"
        },
        "15": {
          "valueName": "ten_second_average"
        },
        "16": {
          "valueName": "thirty_second_average"
        },
        "17": {
          "valueName": "percent_maximum"
        },
        "18": {
          "valueName": "percent_maximum_average"
        },
        "19": {
          "valueName": "lap_percent_maximum"
        },
        "20": {
          "valueName": "elapsed"
        },
        "21": {
          "valueName": "sunrise"
        },
        "22": {
          "valueName": "sunset"
        },
        "23": {
          "valueName": "compared_to_virtual_partner"
        },
        "24": {
          "valueName": "maximum_24h"
        },
        "25": {
          "valueName": "minimum_24h"
        },
        "26": {
          "valueName": "minimum"
        },
        "27": {
          "valueName": "first"
        },
        "28": {
          "valueName": "second"
        },
        "29": {
          "valueName": "third"
        },
        "30": {
          "valueName": "shifter"
        },
        "31": {
          "valueName": "last_sport"
        },
        "32": {
          "valueName": "moving"
        },
        "33": {
          "valueName": "stopped"
        },
        "34": {
          "valueName": "estimated_total"
        },
        "242": {
          "valueName": "zone_9"
        },
        "243": {
          "valueName": "zone_8"
        },
        "244": {
          "valueName": "zone_7"
        },
        "245": {
          "valueName": "zone_6"
        },
        "246": {
          "valueName": "zone_5"
        },
        "247": {
          "valueName": "zone_4"
        },
        "248": {
          "valueName": "zone_3"
        },
        "249": {
          "valueName": "zone_2"
        },
        "250": {
          "valueName": "zone_1"
        }
      }
    },
    "exd_descriptors": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "bike_light_battery_status"
        },
        "1": {
          "valueName": "beam_angle_status"
        },
        "2": {
          "valueName": "batery_level"
        },
        "3": {
          "valueName": "light_network_mode"
        },
        "4": {
          "valueName": "number_lights_connected"
        },
        "5": {
          "valueName": "cadence"
        },
        "6": {
          "valueName": "distance"
        },
        "7": {
          "valueName": "estimated_time_of_arrival"
        },
        "8": {
          "valueName": "heading"
        },
        "9": {
          "valueName": "time"
        },
        "10": {
          "valueName": "battery_level"
        },
        "11": {
          "valueName": "trainer_resistance"
        },
        "12": {
          "valueName": "trainer_target_power"
        },
        "13": {
          "valueName": "time_seated"
        },
        "14": {
          "valueName": "time_standing"
        },
        "15": {
          "valueName": "elevation"
        },
        "16": {
          "valueName": "grade"
        },
        "17": {
          "valueName": "ascent"
        },
        "18": {
          "valueName": "descent"
        },
        "19": {
          "valueName": "vertical_speed"
        },
        "20": {
          "valueName": "di2_battery_level"
        },
        "21": {
          "valueName": "front_gear"
        },
        "22": {
          "valueName": "rear_gear"
        },
        "23": {
          "valueName": "gear_ratio"
        },
        "24": {
          "valueName": "heart_rate"
        },
        "25": {
          "valueName": "heart_rate_zone"
        },
        "26": {
          "valueName": "time_in_heart_rate_zone"
        },
        "27": {
          "valueName": "heart_rate_reserve"
        },
        "28": {
          "valueName": "calories"
        },
        "29": {
          "valueName": "gps_accuracy"
        },
        "30": {
          "valueName": "gps_signal_strength"
        },
        "31": {
          "valueName": "temperature"
        },
        "32": {
          "valueName": "time_of_day"
        },
        "33": {
          "valueName": "balance"
        },
        "34": {
          "valueName": "pedal_smoothness"
        },
        "35": {
          "valueName": "power"
        },
        "36": {
          "valueName": "functional_threshold_power"
        },
        "37": {
          "valueName": "intensity_factor"
        },
        "38": {
          "valueName": "work"
        },
        "39": {
          "valueName": "power_ratio"
        },
        "40": {
          "valueName": "normalized_power"
        },
        "41": {
          "valueName": "training_stress_Score"
        },
        "42": {
          "valueName": "time_on_zone"
        },
        "43": {
          "valueName": "speed"
        },
        "44": {
          "valueName": "laps"
        },
        "45": {
          "valueName": "reps"
        },
        "46": {
          "valueName": "workout_step"
        },
        "47": {
          "valueName": "course_distance"
        },
        "48": {
          "valueName": "navigation_distance"
        },
        "49": {
          "valueName": "course_estimated_time_of_arrival"
        },
        "50": {
          "valueName": "navigation_estimated_time_of_arrival"
        },
        "51": {
          "valueName": "course_time"
        },
        "52": {
          "valueName": "navigation_time"
        },
        "53": {
          "valueName": "course_heading"
        },
        "54": {
          "valueName": "navigation_heading"
        },
        "55": {
          "valueName": "power_zone"
        },
        "56": {
          "valueName": "torque_effectiveness"
        },
        "57": {
          "valueName": "timer_time"
        },
        "58": {
          "valueName": "power_weight_ratio"
        },
        "59": {
          "valueName": "left_platform_center_offset"
        },
        "60": {
          "valueName": "right_platform_center_offset"
        },
        "61": {
          "valueName": "left_power_phase_start_angle"
        },
        "62": {
          "valueName": "right_power_phase_start_angle"
        },
        "63": {
          "valueName": "left_power_phase_finish_angle"
        },
        "64": {
          "valueName": "right_power_phase_finish_angle"
        },
        "65": {
          "valueName": "gears",
          "comment": "Combined gear information"
        },
        "66": {
          "valueName": "pace"
        },
        "67": {
          "valueName": "training_effect"
        },
        "68": {
          "valueName": "vertical_oscillation"
        },
        "69": {
          "valueName": "vertical_ratio"
        },
        "70": {
          "valueName": "ground_contact_time"
        },
        "71": {
          "valueName": "left_ground_contact_time_balance"
        },
        "72": {
          "valueName": "right_ground_contact_time_balance"
        },
        "73": {
          "valueName": "stride_length"
        },
        "74": {
          "valueName": "running_cadence"
        },
        "75": {
          "valueName": "performance_condition"
        },
        "76": {
          "valueName": "course_type"
        },
        "77": {
          "valueName": "time_in_power_zone"
        },
        "78": {
          "valueName": "navigation_turn"
        },
        "79": {
          "valueName": "course_location"
        },
        "80": {
          "valueName": "navigation_location"
        },
        "81": {
          "valueName": "compass"
        },
        "82": {
          "valueName": "gear_combo"
        },
        "83": {
          "valueName": "muscle_oxygen"
        },
        "84": {
          "valueName": "icon"
        },
        "85": {
          "valueName": "compass_heading"
        },
        "86": {
          "valueName": "gps_heading"
        },
        "87": {
          "valueName": "gps_elevation"
        },
        "88": {
          "valueName": "anaerobic_training_effect"
        },
        "89": {
          "valueName": "course"
        },
        "90": {
          "valueName": "off_course"
        },
        "91": {
          "valueName": "glide_ratio"
        },
        "92": {
          "valueName": "vertical_distance"
        },
        "93": {
          "valueName": "vmg"
        },
        "94": {
          "valueName": "ambient_pressure"
        },
        "95": {
          "valueName": "pressure"
        },
        "96": {
          "valueName": "vam"
        }
      }
    },
    "auto_activity_detect": {
      "baseType": "uint32",
      "values": {
        "0": {
          "valueName": "none"
        },
        "1": {
          "valueName": "running"
        },
        "2": {
          "valueName": "cycling"
        },
        "4": {
          "valueName": "swimming"
        },
        "8": {
          "valueName": "walking"
        },
        "32": {
          "valueName": "elliptical"
        },
        "1024": {
          "valueName": "sedentary"
        }
      }
    },
    "supported_exd_screen_layouts": {
      "baseType": "uint32z",
      "values": {
        "1": {
          "valueName": "full_screen"
        },
        "2": {
          "valueName": "half_vertical"
        },
        "4": {
          "valueName": "half_horizontal"
        },
        "8": {
          "valueName": "half_vertical_right_split"
        },
        "16": {
          "valueName": "half_horizontal_bottom_split"
        },
        "32": {
          "valueName": "full_quarter_split"
        },
        "64": {
          "valueName": "half_vertical_left_split"
        },
        "128": {
          "valueName": "half_horizontal_top_split"
        }
      }
    },
    "fit_base_type": {
      "baseType": "uint8",
      "values": {
        "0": {
          "valueName": "enum"
        },
        "1": {
          "valueName": "sint8"
        },
        "2": {
          "valueName": "uint8"
        },
        "7": {
          "valueName": "string"
        },
        "10": {
          "valueName": "uint8z"
        },
        "13": {
          "valueName": "byte"
        },
        "131": {
          "valueName": "sint16"
        },
        "132": {
          "valueName": "uint16"
        },
        "133": {
          "valueName": "sint32"
        },
        "134": {
          "valueName": "uint32"
        },
        "136": {
          "valueName": "float32"
        },
        "137": {
          "valueName": "float64"
        },
        "139": {
          "valueName": "uint16z"
        },
        "140": {
          "valueName": "uint32z"
        },
        "142": {
          "valueName": "sint64"
        },
        "143": {
          "valueName": "uint64"
        },
        "144": {
          "valueName": "uint64z"
        }
      }
    },
    "turn_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "arriving_idx"
        },
        "1": {
          "valueName": "arriving_left_idx"
        },
        "2": {
          "valueName": "arriving_right_idx"
        },
        "3": {
          "valueName": "arriving_via_idx"
        },
        "4": {
          "valueName": "arriving_via_left_idx"
        },
        "5": {
          "valueName": "arriving_via_right_idx"
        },
        "6": {
          "valueName": "bear_keep_left_idx"
        },
        "7": {
          "valueName": "bear_keep_right_idx"
        },
        "8": {
          "valueName": "continue_idx"
        },
        "9": {
          "valueName": "exit_left_idx"
        },
        "10": {
          "valueName": "exit_right_idx"
        },
        "11": {
          "valueName": "ferry_idx"
        },
        "12": {
          "valueName": "roundabout_45_idx"
        },
        "13": {
          "valueName": "roundabout_90_idx"
        },
        "14": {
          "valueName": "roundabout_135_idx"
        },
        "15": {
          "valueName": "roundabout_180_idx"
        },
        "16": {
          "valueName": "roundabout_225_idx"
        },
        "17": {
          "valueName": "roundabout_270_idx"
        },
        "18": {
          "valueName": "roundabout_315_idx"
        },
        "19": {
          "valueName": "roundabout_360_idx"
        },
        "20": {
          "valueName": "roundabout_neg_45_idx"
        },
        "21": {
          "valueName": "roundabout_neg_90_idx"
        },
        "22": {
          "valueName": "roundabout_neg_135_idx"
        },
        "23": {
          "valueName": "roundabout_neg_180_idx"
        },
        "24": {
          "valueName": "roundabout_neg_225_idx"
        },
        "25": {
          "valueName": "roundabout_neg_270_idx"
        },
        "26": {
          "valueName": "roundabout_neg_315_idx"
        },
        "27": {
          "valueName": "roundabout_neg_360_idx"
        },
        "28": {
          "valueName": "roundabout_generic_idx"
        },
        "29": {
          "valueName": "roundabout_neg_generic_idx"
        },
        "30": {
          "valueName": "sharp_turn_left_idx"
        },
        "31": {
          "valueName": "sharp_turn_right_idx"
        },
        "32": {
          "valueName": "turn_left_idx"
        },
        "33": {
          "valueName": "turn_right_idx"
        },
        "34": {
          "valueName": "uturn_left_idx"
        },
        "35": {
          "valueName": "uturn_right_idx"
        },
        "36": {
          "valueName": "icon_inv_idx"
        },
        "37": {
          "valueName": "icon_idx_cnt"
        }
      }
    },
    "bike_light_beam_angle_mode": {
      "baseType": "uint8",
      "values": {
        "0": {
          "valueName": "manual"
        },
        "1": {
          "valueName": "auto"
        }
      }
    },
    "fit_base_unit": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "other"
        },
        "1": {
          "valueName": "kilogram"
        },
        "2": {
          "valueName": "pound"
        }
      }
    },
    "set_type": {
      "baseType": "uint8",
      "values": {
        "0": {
          "valueName": "rest"
        },
        "1": {
          "valueName": "active"
        }
      }
    },
    "exercise_category": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "bench_press"
        },
        "1": {
          "valueName": "calf_raise"
        },
        "2": {
          "valueName": "cardio"
        },
        "3": {
          "valueName": "carry"
        },
        "4": {
          "valueName": "chop"
        },
        "5": {
          "valueName": "core"
        },
        "6": {
          "valueName": "crunch"
        },
        "7": {
          "valueName": "curl"
        },
        "8": {
          "valueName": "deadlift"
        },
        "9": {
          "valueName": "flye"
        },
        "10": {
          "valueName": "hip_raise"
        },
        "11": {
          "valueName": "hip_stability"
        },
        "12": {
          "valueName": "hip_swing"
        },
        "13": {
          "valueName": "hyperextension"
        },
        "14": {
          "valueName": "lateral_raise"
        },
        "15": {
          "valueName": "leg_curl"
        },
        "16": {
          "valueName": "leg_raise"
        },
        "17": {
          "valueName": "lunge"
        },
        "18": {
          "valueName": "olympic_lift"
        },
        "19": {
          "valueName": "plank"
        },
        "20": {
          "valueName": "plyo"
        },
        "21": {
          "valueName": "pull_up"
        },
        "22": {
          "valueName": "push_up"
        },
        "23": {
          "valueName": "row"
        },
        "24": {
          "valueName": "shoulder_press"
        },
        "25": {
          "valueName": "shoulder_stability"
        },
        "26": {
          "valueName": "shrug"
        },
        "27": {
          "valueName": "sit_up"
        },
        "28": {
          "valueName": "squat"
        },
        "29": {
          "valueName": "total_body"
        },
        "30": {
          "valueName": "triceps_extension"
        },
        "31": {
          "valueName": "warm_up"
        },
        "32": {
          "valueName": "run"
        },
        "65534": {
          "valueName": "unknown"
        }
      }
    },
    "bench_press_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "alternating_dumbbell_chest_press_on_swiss_ball"
        },
        "1": {
          "valueName": "barbell_bench_press"
        },
        "2": {
          "valueName": "barbell_board_bench_press"
        },
        "3": {
          "valueName": "barbell_floor_press"
        },
        "4": {
          "valueName": "close_grip_barbell_bench_press"
        },
        "5": {
          "valueName": "decline_dumbbell_bench_press"
        },
        "6": {
          "valueName": "dumbbell_bench_press"
        },
        "7": {
          "valueName": "dumbbell_floor_press"
        },
        "8": {
          "valueName": "incline_barbell_bench_press"
        },
        "9": {
          "valueName": "incline_dumbbell_bench_press"
        },
        "10": {
          "valueName": "incline_smith_machine_bench_press"
        },
        "11": {
          "valueName": "isometric_barbell_bench_press"
        },
        "12": {
          "valueName": "kettlebell_chest_press"
        },
        "13": {
          "valueName": "neutral_grip_dumbbell_bench_press"
        },
        "14": {
          "valueName": "neutral_grip_dumbbell_incline_bench_press"
        },
        "15": {
          "valueName": "one_arm_floor_press"
        },
        "16": {
          "valueName": "weighted_one_arm_floor_press"
        },
        "17": {
          "valueName": "partial_lockout"
        },
        "18": {
          "valueName": "reverse_grip_barbell_bench_press"
        },
        "19": {
          "valueName": "reverse_grip_incline_bench_press"
        },
        "20": {
          "valueName": "single_arm_cable_chest_press"
        },
        "21": {
          "valueName": "single_arm_dumbbell_bench_press"
        },
        "22": {
          "valueName": "smith_machine_bench_press"
        },
        "23": {
          "valueName": "swiss_ball_dumbbell_chest_press"
        },
        "24": {
          "valueName": "triple_stop_barbell_bench_press"
        },
        "25": {
          "valueName": "wide_grip_barbell_bench_press"
        },
        "26": {
          "valueName": "alternating_dumbbell_chest_press"
        }
      }
    },
    "calf_raise_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "3_way_calf_raise"
        },
        "1": {
          "valueName": "3_way_weighted_calf_raise"
        },
        "2": {
          "valueName": "3_way_single_leg_calf_raise"
        },
        "3": {
          "valueName": "3_way_weighted_single_leg_calf_raise"
        },
        "4": {
          "valueName": "donkey_calf_raise"
        },
        "5": {
          "valueName": "weighted_donkey_calf_raise"
        },
        "6": {
          "valueName": "seated_calf_raise"
        },
        "7": {
          "valueName": "weighted_seated_calf_raise"
        },
        "8": {
          "valueName": "seated_dumbbell_toe_raise"
        },
        "9": {
          "valueName": "single_leg_bent_knee_calf_raise"
        },
        "10": {
          "valueName": "weighted_single_leg_bent_knee_calf_raise"
        },
        "11": {
          "valueName": "single_leg_decline_push_up"
        },
        "12": {
          "valueName": "single_leg_donkey_calf_raise"
        },
        "13": {
          "valueName": "weighted_single_leg_donkey_calf_raise"
        },
        "14": {
          "valueName": "single_leg_hip_raise_with_knee_hold"
        },
        "15": {
          "valueName": "single_leg_standing_calf_raise"
        },
        "16": {
          "valueName": "single_leg_standing_dumbbell_calf_raise"
        },
        "17": {
          "valueName": "standing_barbell_calf_raise"
        },
        "18": {
          "valueName": "standing_calf_raise"
        },
        "19": {
          "valueName": "weighted_standing_calf_raise"
        },
        "20": {
          "valueName": "standing_dumbbell_calf_raise"
        }
      }
    },
    "cardio_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "bob_and_weave_circle"
        },
        "1": {
          "valueName": "weighted_bob_and_weave_circle"
        },
        "2": {
          "valueName": "cardio_core_crawl"
        },
        "3": {
          "valueName": "weighted_cardio_core_crawl"
        },
        "4": {
          "valueName": "double_under"
        },
        "5": {
          "valueName": "weighted_double_under"
        },
        "6": {
          "valueName": "jump_rope"
        },
        "7": {
          "valueName": "weighted_jump_rope"
        },
        "8": {
          "valueName": "jump_rope_crossover"
        },
        "9": {
          "valueName": "weighted_jump_rope_crossover"
        },
        "10": {
          "valueName": "jump_rope_jog"
        },
        "11": {
          "valueName": "weighted_jump_rope_jog"
        },
        "12": {
          "valueName": "jumping_jacks"
        },
        "13": {
          "valueName": "weighted_jumping_jacks"
        },
        "14": {
          "valueName": "ski_moguls"
        },
        "15": {
          "valueName": "weighted_ski_moguls"
        },
        "16": {
          "valueName": "split_jacks"
        },
        "17": {
          "valueName": "weighted_split_jacks"
        },
        "18": {
          "valueName": "squat_jacks"
        },
        "19": {
          "valueName": "weighted_squat_jacks"
        },
        "20": {
          "valueName": "triple_under"
        },
        "21": {
          "valueName": "weighted_triple_under"
        }
      }
    },
    "carry_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "bar_holds"
        },
        "1": {
          "valueName": "farmers_walk"
        },
        "2": {
          "valueName": "farmers_walk_on_toes"
        },
        "3": {
          "valueName": "hex_dumbbell_hold"
        },
        "4": {
          "valueName": "overhead_carry"
        }
      }
    },
    "chop_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "cable_pull_through"
        },
        "1": {
          "valueName": "cable_rotational_lift"
        },
        "2": {
          "valueName": "cable_woodchop"
        },
        "3": {
          "valueName": "cross_chop_to_knee"
        },
        "4": {
          "valueName": "weighted_cross_chop_to_knee"
        },
        "5": {
          "valueName": "dumbbell_chop"
        },
        "6": {
          "valueName": "half_kneeling_rotation"
        },
        "7": {
          "valueName": "weighted_half_kneeling_rotation"
        },
        "8": {
          "valueName": "half_kneeling_rotational_chop"
        },
        "9": {
          "valueName": "half_kneeling_rotational_reverse_chop"
        },
        "10": {
          "valueName": "half_kneeling_stability_chop"
        },
        "11": {
          "valueName": "half_kneeling_stability_reverse_chop"
        },
        "12": {
          "valueName": "kneeling_rotational_chop"
        },
        "13": {
          "valueName": "kneeling_rotational_reverse_chop"
        },
        "14": {
          "valueName": "kneeling_stability_chop"
        },
        "15": {
          "valueName": "kneeling_woodchopper"
        },
        "16": {
          "valueName": "medicine_ball_wood_chops"
        },
        "17": {
          "valueName": "power_squat_chops"
        },
        "18": {
          "valueName": "weighted_power_squat_chops"
        },
        "19": {
          "valueName": "standing_rotational_chop"
        },
        "20": {
          "valueName": "standing_split_rotational_chop"
        },
        "21": {
          "valueName": "standing_split_rotational_reverse_chop"
        },
        "22": {
          "valueName": "standing_stability_reverse_chop"
        }
      }
    },
    "core_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "abs_jabs"
        },
        "1": {
          "valueName": "weighted_abs_jabs"
        },
        "2": {
          "valueName": "alternating_plate_reach"
        },
        "3": {
          "valueName": "barbell_rollout"
        },
        "4": {
          "valueName": "weighted_barbell_rollout"
        },
        "5": {
          "valueName": "body_bar_oblique_twist"
        },
        "6": {
          "valueName": "cable_core_press"
        },
        "7": {
          "valueName": "cable_side_bend"
        },
        "8": {
          "valueName": "side_bend"
        },
        "9": {
          "valueName": "weighted_side_bend"
        },
        "10": {
          "valueName": "crescent_circle"
        },
        "11": {
          "valueName": "weighted_crescent_circle"
        },
        "12": {
          "valueName": "cycling_russian_twist"
        },
        "13": {
          "valueName": "weighted_cycling_russian_twist"
        },
        "14": {
          "valueName": "elevated_feet_russian_twist"
        },
        "15": {
          "valueName": "weighted_elevated_feet_russian_twist"
        },
        "16": {
          "valueName": "half_turkish_get_up"
        },
        "17": {
          "valueName": "kettlebell_windmill"
        },
        "18": {
          "valueName": "kneeling_ab_wheel"
        },
        "19": {
          "valueName": "weighted_kneeling_ab_wheel"
        },
        "20": {
          "valueName": "modified_front_lever"
        },
        "21": {
          "valueName": "open_knee_tucks"
        },
        "22": {
          "valueName": "weighted_open_knee_tucks"
        },
        "23": {
          "valueName": "side_abs_leg_lift"
        },
        "24": {
          "valueName": "weighted_side_abs_leg_lift"
        },
        "25": {
          "valueName": "swiss_ball_jackknife"
        },
        "26": {
          "valueName": "weighted_swiss_ball_jackknife"
        },
        "27": {
          "valueName": "swiss_ball_pike"
        },
        "28": {
          "valueName": "weighted_swiss_ball_pike"
        },
        "29": {
          "valueName": "swiss_ball_rollout"
        },
        "30": {
          "valueName": "weighted_swiss_ball_rollout"
        },
        "31": {
          "valueName": "triangle_hip_press"
        },
        "32": {
          "valueName": "weighted_triangle_hip_press"
        },
        "33": {
          "valueName": "trx_suspended_jackknife"
        },
        "34": {
          "valueName": "weighted_trx_suspended_jackknife"
        },
        "35": {
          "valueName": "u_boat"
        },
        "36": {
          "valueName": "weighted_u_boat"
        },
        "37": {
          "valueName": "windmill_switches"
        },
        "38": {
          "valueName": "weighted_windmill_switches"
        },
        "39": {
          "valueName": "alternating_slide_out"
        },
        "40": {
          "valueName": "weighted_alternating_slide_out"
        },
        "41": {
          "valueName": "ghd_back_extensions"
        },
        "42": {
          "valueName": "weighted_ghd_back_extensions"
        },
        "43": {
          "valueName": "overhead_walk"
        },
        "44": {
          "valueName": "inchworm"
        },
        "45": {
          "valueName": "weighted_modified_front_lever"
        },
        "46": {
          "valueName": "russian_twist"
        },
        "47": {
          "valueName": "abdominal_leg_rotations"
        },
        "48": {
          "valueName": "arm_and_leg_extension_on_knees"
        },
        "49": {
          "valueName": "bicycle"
        },
        "50": {
          "valueName": "bicep_curl_with_leg_extension"
        },
        "51": {
          "valueName": "cat_cow"
        },
        "52": {
          "valueName": "corkscrew"
        },
        "53": {
          "valueName": "criss_cross"
        },
        "54": {
          "valueName": "criss_cross_with_ball"
        },
        "55": {
          "valueName": "double_leg_stretch"
        },
        "56": {
          "valueName": "knee_folds"
        },
        "57": {
          "valueName": "lower_lift"
        },
        "58": {
          "valueName": "neck_pull"
        },
        "59": {
          "valueName": "pelvic_clocks"
        },
        "60": {
          "valueName": "roll_over"
        },
        "61": {
          "valueName": "roll_up"
        },
        "62": {
          "valueName": "rolling"
        },
        "63": {
          "valueName": "rowing_1"
        },
        "64": {
          "valueName": "rowing_2"
        },
        "65": {
          "valueName": "scissors"
        },
        "66": {
          "valueName": "single_leg_circles"
        },
        "67": {
          "valueName": "single_leg_stretch"
        },
        "68": {
          "valueName": "snake_twist_1_and_2"
        },
        "69": {
          "valueName": "swan"
        },
        "70": {
          "valueName": "swimming"
        },
        "71": {
          "valueName": "teaser"
        },
        "72": {
          "valueName": "the_hundred"
        }
      }
    },
    "crunch_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "bicycle_crunch"
        },
        "1": {
          "valueName": "cable_crunch"
        },
        "2": {
          "valueName": "circular_arm_crunch"
        },
        "3": {
          "valueName": "crossed_arms_crunch"
        },
        "4": {
          "valueName": "weighted_crossed_arms_crunch"
        },
        "5": {
          "valueName": "cross_leg_reverse_crunch"
        },
        "6": {
          "valueName": "weighted_cross_leg_reverse_crunch"
        },
        "7": {
          "valueName": "crunch_chop"
        },
        "8": {
          "valueName": "weighted_crunch_chop"
        },
        "9": {
          "valueName": "double_crunch"
        },
        "10": {
          "valueName": "weighted_double_crunch"
        },
        "11": {
          "valueName": "elbow_to_knee_crunch"
        },
        "12": {
          "valueName": "weighted_elbow_to_knee_crunch"
        },
        "13": {
          "valueName": "flutter_kicks"
        },
        "14": {
          "valueName": "weighted_flutter_kicks"
        },
        "15": {
          "valueName": "foam_roller_reverse_crunch_on_bench"
        },
        "16": {
          "valueName": "weighted_foam_roller_reverse_crunch_on_bench"
        },
        "17": {
          "valueName": "foam_roller_reverse_crunch_with_dumbbell"
        },
        "18": {
          "valueName": "foam_roller_reverse_crunch_with_medicine_ball"
        },
        "19": {
          "valueName": "frog_press"
        },
        "20": {
          "valueName": "hanging_knee_raise_oblique_crunch"
        },
        "21": {
          "valueName": "weighted_hanging_knee_raise_oblique_crunch"
        },
        "22": {
          "valueName": "hip_crossover"
        },
        "23": {
          "valueName": "weighted_hip_crossover"
        },
        "24": {
          "valueName": "hollow_rock"
        },
        "25": {
          "valueName": "weighted_hollow_rock"
        },
        "26": {
          "valueName": "incline_reverse_crunch"
        },
        "27": {
          "valueName": "weighted_incline_reverse_crunch"
        },
        "28": {
          "valueName": "kneeling_cable_crunch"
        },
        "29": {
          "valueName": "kneeling_cross_crunch"
        },
        "30": {
          "valueName": "weighted_kneeling_cross_crunch"
        },
        "31": {
          "valueName": "kneeling_oblique_cable_crunch"
        },
        "32": {
          "valueName": "knees_to_elbow"
        },
        "33": {
          "valueName": "leg_extensions"
        },
        "34": {
          "valueName": "weighted_leg_extensions"
        },
        "35": {
          "valueName": "leg_levers"
        },
        "36": {
          "valueName": "mcgill_curl_up"
        },
        "37": {
          "valueName": "weighted_mcgill_curl_up"
        },
        "38": {
          "valueName": "modified_pilates_roll_up_with_ball"
        },
        "39": {
          "valueName": "weighted_modified_pilates_roll_up_with_ball"
        },
        "40": {
          "valueName": "pilates_crunch"
        },
        "41": {
          "valueName": "weighted_pilates_crunch"
        },
        "42": {
          "valueName": "pilates_roll_up_with_ball"
        },
        "43": {
          "valueName": "weighted_pilates_roll_up_with_ball"
        },
        "44": {
          "valueName": "raised_legs_crunch"
        },
        "45": {
          "valueName": "weighted_raised_legs_crunch"
        },
        "46": {
          "valueName": "reverse_crunch"
        },
        "47": {
          "valueName": "weighted_reverse_crunch"
        },
        "48": {
          "valueName": "reverse_crunch_on_a_bench"
        },
        "49": {
          "valueName": "weighted_reverse_crunch_on_a_bench"
        },
        "50": {
          "valueName": "reverse_curl_and_lift"
        },
        "51": {
          "valueName": "weighted_reverse_curl_and_lift"
        },
        "52": {
          "valueName": "rotational_lift"
        },
        "53": {
          "valueName": "weighted_rotational_lift"
        },
        "54": {
          "valueName": "seated_alternating_reverse_crunch"
        },
        "55": {
          "valueName": "weighted_seated_alternating_reverse_crunch"
        },
        "56": {
          "valueName": "seated_leg_u"
        },
        "57": {
          "valueName": "weighted_seated_leg_u"
        },
        "58": {
          "valueName": "side_to_side_crunch_and_weave"
        },
        "59": {
          "valueName": "weighted_side_to_side_crunch_and_weave"
        },
        "60": {
          "valueName": "single_leg_reverse_crunch"
        },
        "61": {
          "valueName": "weighted_single_leg_reverse_crunch"
        },
        "62": {
          "valueName": "skater_crunch_cross"
        },
        "63": {
          "valueName": "weighted_skater_crunch_cross"
        },
        "64": {
          "valueName": "standing_cable_crunch"
        },
        "65": {
          "valueName": "standing_side_crunch"
        },
        "66": {
          "valueName": "step_climb"
        },
        "67": {
          "valueName": "weighted_step_climb"
        },
        "68": {
          "valueName": "swiss_ball_crunch"
        },
        "69": {
          "valueName": "swiss_ball_reverse_crunch"
        },
        "70": {
          "valueName": "weighted_swiss_ball_reverse_crunch"
        },
        "71": {
          "valueName": "swiss_ball_russian_twist"
        },
        "72": {
          "valueName": "weighted_swiss_ball_russian_twist"
        },
        "73": {
          "valueName": "swiss_ball_side_crunch"
        },
        "74": {
          "valueName": "weighted_swiss_ball_side_crunch"
        },
        "75": {
          "valueName": "thoracic_crunches_on_foam_roller"
        },
        "76": {
          "valueName": "weighted_thoracic_crunches_on_foam_roller"
        },
        "77": {
          "valueName": "triceps_crunch"
        },
        "78": {
          "valueName": "weighted_bicycle_crunch"
        },
        "79": {
          "valueName": "weighted_crunch"
        },
        "80": {
          "valueName": "weighted_swiss_ball_crunch"
        },
        "81": {
          "valueName": "toes_to_bar"
        },
        "82": {
          "valueName": "weighted_toes_to_bar"
        },
        "83": {
          "valueName": "crunch"
        },
        "84": {
          "valueName": "straight_leg_crunch_with_ball"
        }
      }
    },
    "curl_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "alternating_dumbbell_biceps_curl"
        },
        "1": {
          "valueName": "alternating_dumbbell_biceps_curl_on_swiss_ball"
        },
        "2": {
          "valueName": "alternating_incline_dumbbell_biceps_curl"
        },
        "3": {
          "valueName": "barbell_biceps_curl"
        },
        "4": {
          "valueName": "barbell_reverse_wrist_curl"
        },
        "5": {
          "valueName": "barbell_wrist_curl"
        },
        "6": {
          "valueName": "behind_the_back_barbell_reverse_wrist_curl"
        },
        "7": {
          "valueName": "behind_the_back_one_arm_cable_curl"
        },
        "8": {
          "valueName": "cable_biceps_curl"
        },
        "9": {
          "valueName": "cable_hammer_curl"
        },
        "10": {
          "valueName": "cheating_barbell_biceps_curl"
        },
        "11": {
          "valueName": "close_grip_ez_bar_biceps_curl"
        },
        "12": {
          "valueName": "cross_body_dumbbell_hammer_curl"
        },
        "13": {
          "valueName": "dead_hang_biceps_curl"
        },
        "14": {
          "valueName": "decline_hammer_curl"
        },
        "15": {
          "valueName": "dumbbell_biceps_curl_with_static_hold"
        },
        "16": {
          "valueName": "dumbbell_hammer_curl"
        },
        "17": {
          "valueName": "dumbbell_reverse_wrist_curl"
        },
        "18": {
          "valueName": "dumbbell_wrist_curl"
        },
        "19": {
          "valueName": "ez_bar_preacher_curl"
        },
        "20": {
          "valueName": "forward_bend_biceps_curl"
        },
        "21": {
          "valueName": "hammer_curl_to_press"
        },
        "22": {
          "valueName": "incline_dumbbell_biceps_curl"
        },
        "23": {
          "valueName": "incline_offset_thumb_dumbbell_curl"
        },
        "24": {
          "valueName": "kettlebell_biceps_curl"
        },
        "25": {
          "valueName": "lying_concentration_cable_curl"
        },
        "26": {
          "valueName": "one_arm_preacher_curl"
        },
        "27": {
          "valueName": "plate_pinch_curl"
        },
        "28": {
          "valueName": "preacher_curl_with_cable"
        },
        "29": {
          "valueName": "reverse_ez_bar_curl"
        },
        "30": {
          "valueName": "reverse_grip_wrist_curl"
        },
        "31": {
          "valueName": "reverse_grip_barbell_biceps_curl"
        },
        "32": {
          "valueName": "seated_alternating_dumbbell_biceps_curl"
        },
        "33": {
          "valueName": "seated_dumbbell_biceps_curl"
        },
        "34": {
          "valueName": "seated_reverse_dumbbell_curl"
        },
        "35": {
          "valueName": "split_stance_offset_pinky_dumbbell_curl"
        },
        "36": {
          "valueName": "standing_alternating_dumbbell_curls"
        },
        "37": {
          "valueName": "standing_dumbbell_biceps_curl"
        },
        "38": {
          "valueName": "standing_ez_bar_biceps_curl"
        },
        "39": {
          "valueName": "static_curl"
        },
        "40": {
          "valueName": "swiss_ball_dumbbell_overhead_triceps_extension"
        },
        "41": {
          "valueName": "swiss_ball_ez_bar_preacher_curl"
        },
        "42": {
          "valueName": "twisting_standing_dumbbell_biceps_curl"
        },
        "43": {
          "valueName": "wide_grip_ez_bar_biceps_curl"
        }
      }
    },
    "deadlift_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "barbell_deadlift"
        },
        "1": {
          "valueName": "barbell_straight_leg_deadlift"
        },
        "2": {
          "valueName": "dumbbell_deadlift"
        },
        "3": {
          "valueName": "dumbbell_single_leg_deadlift_to_row"
        },
        "4": {
          "valueName": "dumbbell_straight_leg_deadlift"
        },
        "5": {
          "valueName": "kettlebell_floor_to_shelf"
        },
        "6": {
          "valueName": "one_arm_one_leg_deadlift"
        },
        "7": {
          "valueName": "rack_pull"
        },
        "8": {
          "valueName": "rotational_dumbbell_straight_leg_deadlift"
        },
        "9": {
          "valueName": "single_arm_deadlift"
        },
        "10": {
          "valueName": "single_leg_barbell_deadlift"
        },
        "11": {
          "valueName": "single_leg_barbell_straight_leg_deadlift"
        },
        "12": {
          "valueName": "single_leg_deadlift_with_barbell"
        },
        "13": {
          "valueName": "single_leg_rdl_circuit"
        },
        "14": {
          "valueName": "single_leg_romanian_deadlift_with_dumbbell"
        },
        "15": {
          "valueName": "sumo_deadlift"
        },
        "16": {
          "valueName": "sumo_deadlift_high_pull"
        },
        "17": {
          "valueName": "trap_bar_deadlift"
        },
        "18": {
          "valueName": "wide_grip_barbell_deadlift"
        }
      }
    },
    "flye_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "cable_crossover"
        },
        "1": {
          "valueName": "decline_dumbbell_flye"
        },
        "2": {
          "valueName": "dumbbell_flye"
        },
        "3": {
          "valueName": "incline_dumbbell_flye"
        },
        "4": {
          "valueName": "kettlebell_flye"
        },
        "5": {
          "valueName": "kneeling_rear_flye"
        },
        "6": {
          "valueName": "single_arm_standing_cable_reverse_flye"
        },
        "7": {
          "valueName": "swiss_ball_dumbbell_flye"
        },
        "8": {
          "valueName": "arm_rotations"
        },
        "9": {
          "valueName": "hug_a_tree"
        }
      }
    },
    "hip_raise_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "barbell_hip_thrust_on_floor"
        },
        "1": {
          "valueName": "barbell_hip_thrust_with_bench"
        },
        "2": {
          "valueName": "bent_knee_swiss_ball_reverse_hip_raise"
        },
        "3": {
          "valueName": "weighted_bent_knee_swiss_ball_reverse_hip_raise"
        },
        "4": {
          "valueName": "bridge_with_leg_extension"
        },
        "5": {
          "valueName": "weighted_bridge_with_leg_extension"
        },
        "6": {
          "valueName": "clam_bridge"
        },
        "7": {
          "valueName": "front_kick_tabletop"
        },
        "8": {
          "valueName": "weighted_front_kick_tabletop"
        },
        "9": {
          "valueName": "hip_extension_and_cross"
        },
        "10": {
          "valueName": "weighted_hip_extension_and_cross"
        },
        "11": {
          "valueName": "hip_raise"
        },
        "12": {
          "valueName": "weighted_hip_raise"
        },
        "13": {
          "valueName": "hip_raise_with_feet_on_swiss_ball"
        },
        "14": {
          "valueName": "weighted_hip_raise_with_feet_on_swiss_ball"
        },
        "15": {
          "valueName": "hip_raise_with_head_on_bosu_ball"
        },
        "16": {
          "valueName": "weighted_hip_raise_with_head_on_bosu_ball"
        },
        "17": {
          "valueName": "hip_raise_with_head_on_swiss_ball"
        },
        "18": {
          "valueName": "weighted_hip_raise_with_head_on_swiss_ball"
        },
        "19": {
          "valueName": "hip_raise_with_knee_squeeze"
        },
        "20": {
          "valueName": "weighted_hip_raise_with_knee_squeeze"
        },
        "21": {
          "valueName": "incline_rear_leg_extension"
        },
        "22": {
          "valueName": "weighted_incline_rear_leg_extension"
        },
        "23": {
          "valueName": "kettlebell_swing"
        },
        "24": {
          "valueName": "marching_hip_raise"
        },
        "25": {
          "valueName": "weighted_marching_hip_raise"
        },
        "26": {
          "valueName": "marching_hip_raise_with_feet_on_a_swiss_ball"
        },
        "27": {
          "valueName": "weighted_marching_hip_raise_with_feet_on_a_swiss_ball"
        },
        "28": {
          "valueName": "reverse_hip_raise"
        },
        "29": {
          "valueName": "weighted_reverse_hip_raise"
        },
        "30": {
          "valueName": "single_leg_hip_raise"
        },
        "31": {
          "valueName": "weighted_single_leg_hip_raise"
        },
        "32": {
          "valueName": "single_leg_hip_raise_with_foot_on_bench"
        },
        "33": {
          "valueName": "weighted_single_leg_hip_raise_with_foot_on_bench"
        },
        "34": {
          "valueName": "single_leg_hip_raise_with_foot_on_bosu_ball"
        },
        "35": {
          "valueName": "weighted_single_leg_hip_raise_with_foot_on_bosu_ball"
        },
        "36": {
          "valueName": "single_leg_hip_raise_with_foot_on_foam_roller"
        },
        "37": {
          "valueName": "weighted_single_leg_hip_raise_with_foot_on_foam_roller"
        },
        "38": {
          "valueName": "single_leg_hip_raise_with_foot_on_medicine_ball"
        },
        "39": {
          "valueName": "weighted_single_leg_hip_raise_with_foot_on_medicine_ball"
        },
        "40": {
          "valueName": "single_leg_hip_raise_with_head_on_bosu_ball"
        },
        "41": {
          "valueName": "weighted_single_leg_hip_raise_with_head_on_bosu_ball"
        },
        "42": {
          "valueName": "weighted_clam_bridge"
        },
        "43": {
          "valueName": "single_leg_swiss_ball_hip_raise_and_leg_curl"
        },
        "44": {
          "valueName": "clams"
        },
        "45": {
          "valueName": "inner_thigh_circles"
        },
        "46": {
          "valueName": "inner_thigh_side_lift"
        },
        "47": {
          "valueName": "leg_circles"
        },
        "48": {
          "valueName": "leg_lift"
        },
        "49": {
          "valueName": "leg_lift_in_external_rotation"
        }
      }
    },
    "hip_stability_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "band_side_lying_leg_raise"
        },
        "1": {
          "valueName": "dead_bug"
        },
        "2": {
          "valueName": "weighted_dead_bug"
        },
        "3": {
          "valueName": "external_hip_raise"
        },
        "4": {
          "valueName": "weighted_external_hip_raise"
        },
        "5": {
          "valueName": "fire_hydrant_kicks"
        },
        "6": {
          "valueName": "weighted_fire_hydrant_kicks"
        },
        "7": {
          "valueName": "hip_circles"
        },
        "8": {
          "valueName": "weighted_hip_circles"
        },
        "9": {
          "valueName": "inner_thigh_lift"
        },
        "10": {
          "valueName": "weighted_inner_thigh_lift"
        },
        "11": {
          "valueName": "lateral_walks_with_band_at_ankles"
        },
        "12": {
          "valueName": "pretzel_side_kick"
        },
        "13": {
          "valueName": "weighted_pretzel_side_kick"
        },
        "14": {
          "valueName": "prone_hip_internal_rotation"
        },
        "15": {
          "valueName": "weighted_prone_hip_internal_rotation"
        },
        "16": {
          "valueName": "quadruped"
        },
        "17": {
          "valueName": "quadruped_hip_extension"
        },
        "18": {
          "valueName": "weighted_quadruped_hip_extension"
        },
        "19": {
          "valueName": "quadruped_with_leg_lift"
        },
        "20": {
          "valueName": "weighted_quadruped_with_leg_lift"
        },
        "21": {
          "valueName": "side_lying_leg_raise"
        },
        "22": {
          "valueName": "weighted_side_lying_leg_raise"
        },
        "23": {
          "valueName": "sliding_hip_adduction"
        },
        "24": {
          "valueName": "weighted_sliding_hip_adduction"
        },
        "25": {
          "valueName": "standing_adduction"
        },
        "26": {
          "valueName": "weighted_standing_adduction"
        },
        "27": {
          "valueName": "standing_cable_hip_abduction"
        },
        "28": {
          "valueName": "standing_hip_abduction"
        },
        "29": {
          "valueName": "weighted_standing_hip_abduction"
        },
        "30": {
          "valueName": "standing_rear_leg_raise"
        },
        "31": {
          "valueName": "weighted_standing_rear_leg_raise"
        },
        "32": {
          "valueName": "supine_hip_internal_rotation"
        },
        "33": {
          "valueName": "weighted_supine_hip_internal_rotation"
        }
      }
    },
    "hip_swing_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "single_arm_kettlebell_swing"
        },
        "1": {
          "valueName": "single_arm_dumbbell_swing"
        },
        "2": {
          "valueName": "step_out_swing"
        }
      }
    },
    "hyperextension_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "back_extension_with_opposite_arm_and_leg_reach"
        },
        "1": {
          "valueName": "weighted_back_extension_with_opposite_arm_and_leg_reach"
        },
        "2": {
          "valueName": "base_rotations"
        },
        "3": {
          "valueName": "weighted_base_rotations"
        },
        "4": {
          "valueName": "bent_knee_reverse_hyperextension"
        },
        "5": {
          "valueName": "weighted_bent_knee_reverse_hyperextension"
        },
        "6": {
          "valueName": "hollow_hold_and_roll"
        },
        "7": {
          "valueName": "weighted_hollow_hold_and_roll"
        },
        "8": {
          "valueName": "kicks"
        },
        "9": {
          "valueName": "weighted_kicks"
        },
        "10": {
          "valueName": "knee_raises"
        },
        "11": {
          "valueName": "weighted_knee_raises"
        },
        "12": {
          "valueName": "kneeling_superman"
        },
        "13": {
          "valueName": "weighted_kneeling_superman"
        },
        "14": {
          "valueName": "lat_pull_down_with_row"
        },
        "15": {
          "valueName": "medicine_ball_deadlift_to_reach"
        },
        "16": {
          "valueName": "one_arm_one_leg_row"
        },
        "17": {
          "valueName": "one_arm_row_with_band"
        },
        "18": {
          "valueName": "overhead_lunge_with_medicine_ball"
        },
        "19": {
          "valueName": "plank_knee_tucks"
        },
        "20": {
          "valueName": "weighted_plank_knee_tucks"
        },
        "21": {
          "valueName": "side_step"
        },
        "22": {
          "valueName": "weighted_side_step"
        },
        "23": {
          "valueName": "single_leg_back_extension"
        },
        "24": {
          "valueName": "weighted_single_leg_back_extension"
        },
        "25": {
          "valueName": "spine_extension"
        },
        "26": {
          "valueName": "weighted_spine_extension"
        },
        "27": {
          "valueName": "static_back_extension"
        },
        "28": {
          "valueName": "weighted_static_back_extension"
        },
        "29": {
          "valueName": "superman_from_floor"
        },
        "30": {
          "valueName": "weighted_superman_from_floor"
        },
        "31": {
          "valueName": "swiss_ball_back_extension"
        },
        "32": {
          "valueName": "weighted_swiss_ball_back_extension"
        },
        "33": {
          "valueName": "swiss_ball_hyperextension"
        },
        "34": {
          "valueName": "weighted_swiss_ball_hyperextension"
        },
        "35": {
          "valueName": "swiss_ball_opposite_arm_and_leg_lift"
        },
        "36": {
          "valueName": "weighted_swiss_ball_opposite_arm_and_leg_lift"
        },
        "37": {
          "valueName": "superman_on_swiss_ball"
        },
        "38": {
          "valueName": "cobra"
        },
        "39": {
          "valueName": "supine_floor_barre"
        }
      }
    },
    "lateral_raise_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "45_degree_cable_external_rotation"
        },
        "1": {
          "valueName": "alternating_lateral_raise_with_static_hold"
        },
        "2": {
          "valueName": "bar_muscle_up"
        },
        "3": {
          "valueName": "bent_over_lateral_raise"
        },
        "4": {
          "valueName": "cable_diagonal_raise"
        },
        "5": {
          "valueName": "cable_front_raise"
        },
        "6": {
          "valueName": "calorie_row"
        },
        "7": {
          "valueName": "combo_shoulder_raise"
        },
        "8": {
          "valueName": "dumbbell_diagonal_raise"
        },
        "9": {
          "valueName": "dumbbell_v_raise"
        },
        "10": {
          "valueName": "front_raise"
        },
        "11": {
          "valueName": "leaning_dumbbell_lateral_raise"
        },
        "12": {
          "valueName": "lying_dumbbell_raise"
        },
        "13": {
          "valueName": "muscle_up"
        },
        "14": {
          "valueName": "one_arm_cable_lateral_raise"
        },
        "15": {
          "valueName": "overhand_grip_rear_lateral_raise"
        },
        "16": {
          "valueName": "plate_raises"
        },
        "17": {
          "valueName": "ring_dip"
        },
        "18": {
          "valueName": "weighted_ring_dip"
        },
        "19": {
          "valueName": "ring_muscle_up"
        },
        "20": {
          "valueName": "weighted_ring_muscle_up"
        },
        "21": {
          "valueName": "rope_climb"
        },
        "22": {
          "valueName": "weighted_rope_climb"
        },
        "23": {
          "valueName": "scaption"
        },
        "24": {
          "valueName": "seated_lateral_raise"
        },
        "25": {
          "valueName": "seated_rear_lateral_raise"
        },
        "26": {
          "valueName": "side_lying_lateral_raise"
        },
        "27": {
          "valueName": "standing_lift"
        },
        "28": {
          "valueName": "suspended_row"
        },
        "29": {
          "valueName": "underhand_grip_rear_lateral_raise"
        },
        "30": {
          "valueName": "wall_slide"
        },
        "31": {
          "valueName": "weighted_wall_slide"
        },
        "32": {
          "valueName": "arm_circles"
        },
        "33": {
          "valueName": "shaving_the_head"
        }
      }
    },
    "leg_curl_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "leg_curl"
        },
        "1": {
          "valueName": "weighted_leg_curl"
        },
        "2": {
          "valueName": "good_morning"
        },
        "3": {
          "valueName": "seated_barbell_good_morning"
        },
        "4": {
          "valueName": "single_leg_barbell_good_morning"
        },
        "5": {
          "valueName": "single_leg_sliding_leg_curl"
        },
        "6": {
          "valueName": "sliding_leg_curl"
        },
        "7": {
          "valueName": "split_barbell_good_morning"
        },
        "8": {
          "valueName": "split_stance_extension"
        },
        "9": {
          "valueName": "staggered_stance_good_morning"
        },
        "10": {
          "valueName": "swiss_ball_hip_raise_and_leg_curl"
        },
        "11": {
          "valueName": "zercher_good_morning"
        }
      }
    },
    "leg_raise_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "hanging_knee_raise"
        },
        "1": {
          "valueName": "hanging_leg_raise"
        },
        "2": {
          "valueName": "weighted_hanging_leg_raise"
        },
        "3": {
          "valueName": "hanging_single_leg_raise"
        },
        "4": {
          "valueName": "weighted_hanging_single_leg_raise"
        },
        "5": {
          "valueName": "kettlebell_leg_raises"
        },
        "6": {
          "valueName": "leg_lowering_drill"
        },
        "7": {
          "valueName": "weighted_leg_lowering_drill"
        },
        "8": {
          "valueName": "lying_straight_leg_raise"
        },
        "9": {
          "valueName": "weighted_lying_straight_leg_raise"
        },
        "10": {
          "valueName": "medicine_ball_leg_drops"
        },
        "11": {
          "valueName": "quadruped_leg_raise"
        },
        "12": {
          "valueName": "weighted_quadruped_leg_raise"
        },
        "13": {
          "valueName": "reverse_leg_raise"
        },
        "14": {
          "valueName": "weighted_reverse_leg_raise"
        },
        "15": {
          "valueName": "reverse_leg_raise_on_swiss_ball"
        },
        "16": {
          "valueName": "weighted_reverse_leg_raise_on_swiss_ball"
        },
        "17": {
          "valueName": "single_leg_lowering_drill"
        },
        "18": {
          "valueName": "weighted_single_leg_lowering_drill"
        },
        "19": {
          "valueName": "weighted_hanging_knee_raise"
        },
        "20": {
          "valueName": "lateral_stepover"
        },
        "21": {
          "valueName": "weighted_lateral_stepover"
        }
      }
    },
    "lunge_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "overhead_lunge"
        },
        "1": {
          "valueName": "lunge_matrix"
        },
        "2": {
          "valueName": "weighted_lunge_matrix"
        },
        "3": {
          "valueName": "alternating_barbell_forward_lunge"
        },
        "4": {
          "valueName": "alternating_dumbbell_lunge_with_reach"
        },
        "5": {
          "valueName": "back_foot_elevated_dumbbell_split_squat"
        },
        "6": {
          "valueName": "barbell_box_lunge"
        },
        "7": {
          "valueName": "barbell_bulgarian_split_squat"
        },
        "8": {
          "valueName": "barbell_crossover_lunge"
        },
        "9": {
          "valueName": "barbell_front_split_squat"
        },
        "10": {
          "valueName": "barbell_lunge"
        },
        "11": {
          "valueName": "barbell_reverse_lunge"
        },
        "12": {
          "valueName": "barbell_side_lunge"
        },
        "13": {
          "valueName": "barbell_split_squat"
        },
        "14": {
          "valueName": "core_control_rear_lunge"
        },
        "15": {
          "valueName": "diagonal_lunge"
        },
        "16": {
          "valueName": "drop_lunge"
        },
        "17": {
          "valueName": "dumbbell_box_lunge"
        },
        "18": {
          "valueName": "dumbbell_bulgarian_split_squat"
        },
        "19": {
          "valueName": "dumbbell_crossover_lunge"
        },
        "20": {
          "valueName": "dumbbell_diagonal_lunge"
        },
        "21": {
          "valueName": "dumbbell_lunge"
        },
        "22": {
          "valueName": "dumbbell_lunge_and_rotation"
        },
        "23": {
          "valueName": "dumbbell_overhead_bulgarian_split_squat"
        },
        "24": {
          "valueName": "dumbbell_reverse_lunge_to_high_knee_and_press"
        },
        "25": {
          "valueName": "dumbbell_side_lunge"
        },
        "26": {
          "valueName": "elevated_front_foot_barbell_split_squat"
        },
        "27": {
          "valueName": "front_foot_elevated_dumbbell_split_squat"
        },
        "28": {
          "valueName": "gunslinger_lunge"
        },
        "29": {
          "valueName": "lawnmower_lunge"
        },
        "30": {
          "valueName": "low_lunge_with_isometric_adduction"
        },
        "31": {
          "valueName": "low_side_to_side_lunge"
        },
        "32": {
          "valueName": "lunge"
        },
        "33": {
          "valueName": "weighted_lunge"
        },
        "34": {
          "valueName": "lunge_with_arm_reach"
        },
        "35": {
          "valueName": "lunge_with_diagonal_reach"
        },
        "36": {
          "valueName": "lunge_with_side_bend"
        },
        "37": {
          "valueName": "offset_dumbbell_lunge"
        },
        "38": {
          "valueName": "offset_dumbbell_reverse_lunge"
        },
        "39": {
          "valueName": "overhead_bulgarian_split_squat"
        },
        "40": {
          "valueName": "overhead_dumbbell_reverse_lunge"
        },
        "41": {
          "valueName": "overhead_dumbbell_split_squat"
        },
        "42": {
          "valueName": "overhead_lunge_with_rotation"
        },
        "43": {
          "valueName": "reverse_barbell_box_lunge"
        },
        "44": {
          "valueName": "reverse_box_lunge"
        },
        "45": {
          "valueName": "reverse_dumbbell_box_lunge"
        },
        "46": {
          "valueName": "reverse_dumbbell_crossover_lunge"
        },
        "47": {
          "valueName": "reverse_dumbbell_diagonal_lunge"
        },
        "48": {
          "valueName": "reverse_lunge_with_reach_back"
        },
        "49": {
          "valueName": "weighted_reverse_lunge_with_reach_back"
        },
        "50": {
          "valueName": "reverse_lunge_with_twist_and_overhead_reach"
        },
        "51": {
          "valueName": "weighted_reverse_lunge_with_twist_and_overhead_reach"
        },
        "52": {
          "valueName": "reverse_sliding_box_lunge"
        },
        "53": {
          "valueName": "weighted_reverse_sliding_box_lunge"
        },
        "54": {
          "valueName": "reverse_sliding_lunge"
        },
        "55": {
          "valueName": "weighted_reverse_sliding_lunge"
        },
        "56": {
          "valueName": "runners_lunge_to_balance"
        },
        "57": {
          "valueName": "weighted_runners_lunge_to_balance"
        },
        "58": {
          "valueName": "shifting_side_lunge"
        },
        "59": {
          "valueName": "side_and_crossover_lunge"
        },
        "60": {
          "valueName": "weighted_side_and_crossover_lunge"
        },
        "61": {
          "valueName": "side_lunge"
        },
        "62": {
          "valueName": "weighted_side_lunge"
        },
        "63": {
          "valueName": "side_lunge_and_press"
        },
        "64": {
          "valueName": "side_lunge_jump_off"
        },
        "65": {
          "valueName": "side_lunge_sweep"
        },
        "66": {
          "valueName": "weighted_side_lunge_sweep"
        },
        "67": {
          "valueName": "side_lunge_to_crossover_tap"
        },
        "68": {
          "valueName": "weighted_side_lunge_to_crossover_tap"
        },
        "69": {
          "valueName": "side_to_side_lunge_chops"
        },
        "70": {
          "valueName": "weighted_side_to_side_lunge_chops"
        },
        "71": {
          "valueName": "siff_jump_lunge"
        },
        "72": {
          "valueName": "weighted_siff_jump_lunge"
        },
        "73": {
          "valueName": "single_arm_reverse_lunge_and_press"
        },
        "74": {
          "valueName": "sliding_lateral_lunge"
        },
        "75": {
          "valueName": "weighted_sliding_lateral_lunge"
        },
        "76": {
          "valueName": "walking_barbell_lunge"
        },
        "77": {
          "valueName": "walking_dumbbell_lunge"
        },
        "78": {
          "valueName": "walking_lunge"
        },
        "79": {
          "valueName": "weighted_walking_lunge"
        },
        "80": {
          "valueName": "wide_grip_overhead_barbell_split_squat"
        }
      }
    },
    "olympic_lift_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "barbell_hang_power_clean"
        },
        "1": {
          "valueName": "barbell_hang_squat_clean"
        },
        "2": {
          "valueName": "barbell_power_clean"
        },
        "3": {
          "valueName": "barbell_power_snatch"
        },
        "4": {
          "valueName": "barbell_squat_clean"
        },
        "5": {
          "valueName": "clean_and_jerk"
        },
        "6": {
          "valueName": "barbell_hang_power_snatch"
        },
        "7": {
          "valueName": "barbell_hang_pull"
        },
        "8": {
          "valueName": "barbell_high_pull"
        },
        "9": {
          "valueName": "barbell_snatch"
        },
        "10": {
          "valueName": "barbell_split_jerk"
        },
        "11": {
          "valueName": "clean"
        },
        "12": {
          "valueName": "dumbbell_clean"
        },
        "13": {
          "valueName": "dumbbell_hang_pull"
        },
        "14": {
          "valueName": "one_hand_dumbbell_split_snatch"
        },
        "15": {
          "valueName": "push_jerk"
        },
        "16": {
          "valueName": "single_arm_dumbbell_snatch"
        },
        "17": {
          "valueName": "single_arm_hang_snatch"
        },
        "18": {
          "valueName": "single_arm_kettlebell_snatch"
        },
        "19": {
          "valueName": "split_jerk"
        },
        "20": {
          "valueName": "squat_clean_and_jerk"
        }
      }
    },
    "plank_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "45_degree_plank"
        },
        "1": {
          "valueName": "weighted_45_degree_plank"
        },
        "2": {
          "valueName": "90_degree_static_hold"
        },
        "3": {
          "valueName": "weighted_90_degree_static_hold"
        },
        "4": {
          "valueName": "bear_crawl"
        },
        "5": {
          "valueName": "weighted_bear_crawl"
        },
        "6": {
          "valueName": "cross_body_mountain_climber"
        },
        "7": {
          "valueName": "weighted_cross_body_mountain_climber"
        },
        "8": {
          "valueName": "elbow_plank_pike_jacks"
        },
        "9": {
          "valueName": "weighted_elbow_plank_pike_jacks"
        },
        "10": {
          "valueName": "elevated_feet_plank"
        },
        "11": {
          "valueName": "weighted_elevated_feet_plank"
        },
        "12": {
          "valueName": "elevator_abs"
        },
        "13": {
          "valueName": "weighted_elevator_abs"
        },
        "14": {
          "valueName": "extended_plank"
        },
        "15": {
          "valueName": "weighted_extended_plank"
        },
        "16": {
          "valueName": "full_plank_passe_twist"
        },
        "17": {
          "valueName": "weighted_full_plank_passe_twist"
        },
        "18": {
          "valueName": "inching_elbow_plank"
        },
        "19": {
          "valueName": "weighted_inching_elbow_plank"
        },
        "20": {
          "valueName": "inchworm_to_side_plank"
        },
        "21": {
          "valueName": "weighted_inchworm_to_side_plank"
        },
        "22": {
          "valueName": "kneeling_plank"
        },
        "23": {
          "valueName": "weighted_kneeling_plank"
        },
        "24": {
          "valueName": "kneeling_side_plank_with_leg_lift"
        },
        "25": {
          "valueName": "weighted_kneeling_side_plank_with_leg_lift"
        },
        "26": {
          "valueName": "lateral_roll"
        },
        "27": {
          "valueName": "weighted_lateral_roll"
        },
        "28": {
          "valueName": "lying_reverse_plank"
        },
        "29": {
          "valueName": "weighted_lying_reverse_plank"
        },
        "30": {
          "valueName": "medicine_ball_mountain_climber"
        },
        "31": {
          "valueName": "weighted_medicine_ball_mountain_climber"
        },
        "32": {
          "valueName": "modified_mountain_climber_and_extension"
        },
        "33": {
          "valueName": "weighted_modified_mountain_climber_and_extension"
        },
        "34": {
          "valueName": "mountain_climber"
        },
        "35": {
          "valueName": "weighted_mountain_climber"
        },
        "36": {
          "valueName": "mountain_climber_on_sliding_discs"
        },
        "37": {
          "valueName": "weighted_mountain_climber_on_sliding_discs"
        },
        "38": {
          "valueName": "mountain_climber_with_feet_on_bosu_ball"
        },
        "39": {
          "valueName": "weighted_mountain_climber_with_feet_on_bosu_ball"
        },
        "40": {
          "valueName": "mountain_climber_with_hands_on_bench"
        },
        "41": {
          "valueName": "mountain_climber_with_hands_on_swiss_ball"
        },
        "42": {
          "valueName": "weighted_mountain_climber_with_hands_on_swiss_ball"
        },
        "43": {
          "valueName": "plank"
        },
        "44": {
          "valueName": "plank_jacks_with_feet_on_sliding_discs"
        },
        "45": {
          "valueName": "weighted_plank_jacks_with_feet_on_sliding_discs"
        },
        "46": {
          "valueName": "plank_knee_twist"
        },
        "47": {
          "valueName": "weighted_plank_knee_twist"
        },
        "48": {
          "valueName": "plank_pike_jumps"
        },
        "49": {
          "valueName": "weighted_plank_pike_jumps"
        },
        "50": {
          "valueName": "plank_pikes"
        },
        "51": {
          "valueName": "weighted_plank_pikes"
        },
        "52": {
          "valueName": "plank_to_stand_up"
        },
        "53": {
          "valueName": "weighted_plank_to_stand_up"
        },
        "54": {
          "valueName": "plank_with_arm_raise"
        },
        "55": {
          "valueName": "weighted_plank_with_arm_raise"
        },
        "56": {
          "valueName": "plank_with_knee_to_elbow"
        },
        "57": {
          "valueName": "weighted_plank_with_knee_to_elbow"
        },
        "58": {
          "valueName": "plank_with_oblique_crunch"
        },
        "59": {
          "valueName": "weighted_plank_with_oblique_crunch"
        },
        "60": {
          "valueName": "plyometric_side_plank"
        },
        "61": {
          "valueName": "weighted_plyometric_side_plank"
        },
        "62": {
          "valueName": "rolling_side_plank"
        },
        "63": {
          "valueName": "weighted_rolling_side_plank"
        },
        "64": {
          "valueName": "side_kick_plank"
        },
        "65": {
          "valueName": "weighted_side_kick_plank"
        },
        "66": {
          "valueName": "side_plank"
        },
        "67": {
          "valueName": "weighted_side_plank"
        },
        "68": {
          "valueName": "side_plank_and_row"
        },
        "69": {
          "valueName": "weighted_side_plank_and_row"
        },
        "70": {
          "valueName": "side_plank_lift"
        },
        "71": {
          "valueName": "weighted_side_plank_lift"
        },
        "72": {
          "valueName": "side_plank_with_elbow_on_bosu_ball"
        },
        "73": {
          "valueName": "weighted_side_plank_with_elbow_on_bosu_ball"
        },
        "74": {
          "valueName": "side_plank_with_feet_on_bench"
        },
        "75": {
          "valueName": "weighted_side_plank_with_feet_on_bench"
        },
        "76": {
          "valueName": "side_plank_with_knee_circle"
        },
        "77": {
          "valueName": "weighted_side_plank_with_knee_circle"
        },
        "78": {
          "valueName": "side_plank_with_knee_tuck"
        },
        "79": {
          "valueName": "weighted_side_plank_with_knee_tuck"
        },
        "80": {
          "valueName": "side_plank_with_leg_lift"
        },
        "81": {
          "valueName": "weighted_side_plank_with_leg_lift"
        },
        "82": {
          "valueName": "side_plank_with_reach_under"
        },
        "83": {
          "valueName": "weighted_side_plank_with_reach_under"
        },
        "84": {
          "valueName": "single_leg_elevated_feet_plank"
        },
        "85": {
          "valueName": "weighted_single_leg_elevated_feet_plank"
        },
        "86": {
          "valueName": "single_leg_flex_and_extend"
        },
        "87": {
          "valueName": "weighted_single_leg_flex_and_extend"
        },
        "88": {
          "valueName": "single_leg_side_plank"
        },
        "89": {
          "valueName": "weighted_single_leg_side_plank"
        },
        "90": {
          "valueName": "spiderman_plank"
        },
        "91": {
          "valueName": "weighted_spiderman_plank"
        },
        "92": {
          "valueName": "straight_arm_plank"
        },
        "93": {
          "valueName": "weighted_straight_arm_plank"
        },
        "94": {
          "valueName": "straight_arm_plank_with_shoulder_touch"
        },
        "95": {
          "valueName": "weighted_straight_arm_plank_with_shoulder_touch"
        },
        "96": {
          "valueName": "swiss_ball_plank"
        },
        "97": {
          "valueName": "weighted_swiss_ball_plank"
        },
        "98": {
          "valueName": "swiss_ball_plank_leg_lift"
        },
        "99": {
          "valueName": "weighted_swiss_ball_plank_leg_lift"
        },
        "100": {
          "valueName": "swiss_ball_plank_leg_lift_and_hold"
        },
        "101": {
          "valueName": "swiss_ball_plank_with_feet_on_bench"
        },
        "102": {
          "valueName": "weighted_swiss_ball_plank_with_feet_on_bench"
        },
        "103": {
          "valueName": "swiss_ball_prone_jackknife"
        },
        "104": {
          "valueName": "weighted_swiss_ball_prone_jackknife"
        },
        "105": {
          "valueName": "swiss_ball_side_plank"
        },
        "106": {
          "valueName": "weighted_swiss_ball_side_plank"
        },
        "107": {
          "valueName": "three_way_plank"
        },
        "108": {
          "valueName": "weighted_three_way_plank"
        },
        "109": {
          "valueName": "towel_plank_and_knee_in"
        },
        "110": {
          "valueName": "weighted_towel_plank_and_knee_in"
        },
        "111": {
          "valueName": "t_stabilization"
        },
        "112": {
          "valueName": "weighted_t_stabilization"
        },
        "113": {
          "valueName": "turkish_get_up_to_side_plank"
        },
        "114": {
          "valueName": "weighted_turkish_get_up_to_side_plank"
        },
        "115": {
          "valueName": "two_point_plank"
        },
        "116": {
          "valueName": "weighted_two_point_plank"
        },
        "117": {
          "valueName": "weighted_plank"
        },
        "118": {
          "valueName": "wide_stance_plank_with_diagonal_arm_lift"
        },
        "119": {
          "valueName": "weighted_wide_stance_plank_with_diagonal_arm_lift"
        },
        "120": {
          "valueName": "wide_stance_plank_with_diagonal_leg_lift"
        },
        "121": {
          "valueName": "weighted_wide_stance_plank_with_diagonal_leg_lift"
        },
        "122": {
          "valueName": "wide_stance_plank_with_leg_lift"
        },
        "123": {
          "valueName": "weighted_wide_stance_plank_with_leg_lift"
        },
        "124": {
          "valueName": "wide_stance_plank_with_opposite_arm_and_leg_lift"
        },
        "125": {
          "valueName": "weighted_mountain_climber_with_hands_on_bench"
        },
        "126": {
          "valueName": "weighted_swiss_ball_plank_leg_lift_and_hold"
        },
        "127": {
          "valueName": "weighted_wide_stance_plank_with_opposite_arm_and_leg_lift"
        },
        "128": {
          "valueName": "plank_with_feet_on_swiss_ball"
        },
        "129": {
          "valueName": "side_plank_to_plank_with_reach_under"
        },
        "130": {
          "valueName": "bridge_with_glute_lower_lift"
        },
        "131": {
          "valueName": "bridge_one_leg_bridge"
        },
        "132": {
          "valueName": "plank_with_arm_variations"
        },
        "133": {
          "valueName": "plank_with_leg_lift"
        },
        "134": {
          "valueName": "reverse_plank_with_leg_pull"
        }
      }
    },
    "plyo_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "alternating_jump_lunge"
        },
        "1": {
          "valueName": "weighted_alternating_jump_lunge"
        },
        "2": {
          "valueName": "barbell_jump_squat"
        },
        "3": {
          "valueName": "body_weight_jump_squat"
        },
        "4": {
          "valueName": "weighted_jump_squat"
        },
        "5": {
          "valueName": "cross_knee_strike"
        },
        "6": {
          "valueName": "weighted_cross_knee_strike"
        },
        "7": {
          "valueName": "depth_jump"
        },
        "8": {
          "valueName": "weighted_depth_jump"
        },
        "9": {
          "valueName": "dumbbell_jump_squat"
        },
        "10": {
          "valueName": "dumbbell_split_jump"
        },
        "11": {
          "valueName": "front_knee_strike"
        },
        "12": {
          "valueName": "weighted_front_knee_strike"
        },
        "13": {
          "valueName": "high_box_jump"
        },
        "14": {
          "valueName": "weighted_high_box_jump"
        },
        "15": {
          "valueName": "isometric_explosive_body_weight_jump_squat"
        },
        "16": {
          "valueName": "weighted_isometric_explosive_jump_squat"
        },
        "17": {
          "valueName": "lateral_leap_and_hop"
        },
        "18": {
          "valueName": "weighted_lateral_leap_and_hop"
        },
        "19": {
          "valueName": "lateral_plyo_squats"
        },
        "20": {
          "valueName": "weighted_lateral_plyo_squats"
        },
        "21": {
          "valueName": "lateral_slide"
        },
        "22": {
          "valueName": "weighted_lateral_slide"
        },
        "23": {
          "valueName": "medicine_ball_overhead_throws"
        },
        "24": {
          "valueName": "medicine_ball_side_throw"
        },
        "25": {
          "valueName": "medicine_ball_slam"
        },
        "26": {
          "valueName": "side_to_side_medicine_ball_throws"
        },
        "27": {
          "valueName": "side_to_side_shuffle_jump"
        },
        "28": {
          "valueName": "weighted_side_to_side_shuffle_jump"
        },
        "29": {
          "valueName": "squat_jump_onto_box"
        },
        "30": {
          "valueName": "weighted_squat_jump_onto_box"
        },
        "31": {
          "valueName": "squat_jumps_in_and_out"
        },
        "32": {
          "valueName": "weighted_squat_jumps_in_and_out"
        }
      }
    },
    "pull_up_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "banded_pull_ups"
        },
        "1": {
          "valueName": "30_degree_lat_pulldown"
        },
        "2": {
          "valueName": "band_assisted_chin_up"
        },
        "3": {
          "valueName": "close_grip_chin_up"
        },
        "4": {
          "valueName": "weighted_close_grip_chin_up"
        },
        "5": {
          "valueName": "close_grip_lat_pulldown"
        },
        "6": {
          "valueName": "crossover_chin_up"
        },
        "7": {
          "valueName": "weighted_crossover_chin_up"
        },
        "8": {
          "valueName": "ez_bar_pullover"
        },
        "9": {
          "valueName": "hanging_hurdle"
        },
        "10": {
          "valueName": "weighted_hanging_hurdle"
        },
        "11": {
          "valueName": "kneeling_lat_pulldown"
        },
        "12": {
          "valueName": "kneeling_underhand_grip_lat_pulldown"
        },
        "13": {
          "valueName": "lat_pulldown"
        },
        "14": {
          "valueName": "mixed_grip_chin_up"
        },
        "15": {
          "valueName": "weighted_mixed_grip_chin_up"
        },
        "16": {
          "valueName": "mixed_grip_pull_up"
        },
        "17": {
          "valueName": "weighted_mixed_grip_pull_up"
        },
        "18": {
          "valueName": "reverse_grip_pulldown"
        },
        "19": {
          "valueName": "standing_cable_pullover"
        },
        "20": {
          "valueName": "straight_arm_pulldown"
        },
        "21": {
          "valueName": "swiss_ball_ez_bar_pullover"
        },
        "22": {
          "valueName": "towel_pull_up"
        },
        "23": {
          "valueName": "weighted_towel_pull_up"
        },
        "24": {
          "valueName": "weighted_pull_up"
        },
        "25": {
          "valueName": "wide_grip_lat_pulldown"
        },
        "26": {
          "valueName": "wide_grip_pull_up"
        },
        "27": {
          "valueName": "weighted_wide_grip_pull_up"
        },
        "28": {
          "valueName": "burpee_pull_up"
        },
        "29": {
          "valueName": "weighted_burpee_pull_up"
        },
        "30": {
          "valueName": "jumping_pull_ups"
        },
        "31": {
          "valueName": "weighted_jumping_pull_ups"
        },
        "32": {
          "valueName": "kipping_pull_up"
        },
        "33": {
          "valueName": "weighted_kipping_pull_up"
        },
        "34": {
          "valueName": "l_pull_up"
        },
        "35": {
          "valueName": "weighted_l_pull_up"
        },
        "36": {
          "valueName": "suspended_chin_up"
        },
        "37": {
          "valueName": "weighted_suspended_chin_up"
        },
        "38": {
          "valueName": "pull_up"
        }
      }
    },
    "push_up_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "chest_press_with_band"
        },
        "1": {
          "valueName": "alternating_staggered_push_up"
        },
        "2": {
          "valueName": "weighted_alternating_staggered_push_up"
        },
        "3": {
          "valueName": "alternating_hands_medicine_ball_push_up"
        },
        "4": {
          "valueName": "weighted_alternating_hands_medicine_ball_push_up"
        },
        "5": {
          "valueName": "bosu_ball_push_up"
        },
        "6": {
          "valueName": "weighted_bosu_ball_push_up"
        },
        "7": {
          "valueName": "clapping_push_up"
        },
        "8": {
          "valueName": "weighted_clapping_push_up"
        },
        "9": {
          "valueName": "close_grip_medicine_ball_push_up"
        },
        "10": {
          "valueName": "weighted_close_grip_medicine_ball_push_up"
        },
        "11": {
          "valueName": "close_hands_push_up"
        },
        "12": {
          "valueName": "weighted_close_hands_push_up"
        },
        "13": {
          "valueName": "decline_push_up"
        },
        "14": {
          "valueName": "weighted_decline_push_up"
        },
        "15": {
          "valueName": "diamond_push_up"
        },
        "16": {
          "valueName": "weighted_diamond_push_up"
        },
        "17": {
          "valueName": "explosive_crossover_push_up"
        },
        "18": {
          "valueName": "weighted_explosive_crossover_push_up"
        },
        "19": {
          "valueName": "explosive_push_up"
        },
        "20": {
          "valueName": "weighted_explosive_push_up"
        },
        "21": {
          "valueName": "feet_elevated_side_to_side_push_up"
        },
        "22": {
          "valueName": "weighted_feet_elevated_side_to_side_push_up"
        },
        "23": {
          "valueName": "hand_release_push_up"
        },
        "24": {
          "valueName": "weighted_hand_release_push_up"
        },
        "25": {
          "valueName": "handstand_push_up"
        },
        "26": {
          "valueName": "weighted_handstand_push_up"
        },
        "27": {
          "valueName": "incline_push_up"
        },
        "28": {
          "valueName": "weighted_incline_push_up"
        },
        "29": {
          "valueName": "isometric_explosive_push_up"
        },
        "30": {
          "valueName": "weighted_isometric_explosive_push_up"
        },
        "31": {
          "valueName": "judo_push_up"
        },
        "32": {
          "valueName": "weighted_judo_push_up"
        },
        "33": {
          "valueName": "kneeling_push_up"
        },
        "34": {
          "valueName": "weighted_kneeling_push_up"
        },
        "35": {
          "valueName": "medicine_ball_chest_pass"
        },
        "36": {
          "valueName": "medicine_ball_push_up"
        },
        "37": {
          "valueName": "weighted_medicine_ball_push_up"
        },
        "38": {
          "valueName": "one_arm_push_up"
        },
        "39": {
          "valueName": "weighted_one_arm_push_up"
        },
        "40": {
          "valueName": "weighted_push_up"
        },
        "41": {
          "valueName": "push_up_and_row"
        },
        "42": {
          "valueName": "weighted_push_up_and_row"
        },
        "43": {
          "valueName": "push_up_plus"
        },
        "44": {
          "valueName": "weighted_push_up_plus"
        },
        "45": {
          "valueName": "push_up_with_feet_on_swiss_ball"
        },
        "46": {
          "valueName": "weighted_push_up_with_feet_on_swiss_ball"
        },
        "47": {
          "valueName": "push_up_with_one_hand_on_medicine_ball"
        },
        "48": {
          "valueName": "weighted_push_up_with_one_hand_on_medicine_ball"
        },
        "49": {
          "valueName": "shoulder_push_up"
        },
        "50": {
          "valueName": "weighted_shoulder_push_up"
        },
        "51": {
          "valueName": "single_arm_medicine_ball_push_up"
        },
        "52": {
          "valueName": "weighted_single_arm_medicine_ball_push_up"
        },
        "53": {
          "valueName": "spiderman_push_up"
        },
        "54": {
          "valueName": "weighted_spiderman_push_up"
        },
        "55": {
          "valueName": "stacked_feet_push_up"
        },
        "56": {
          "valueName": "weighted_stacked_feet_push_up"
        },
        "57": {
          "valueName": "staggered_hands_push_up"
        },
        "58": {
          "valueName": "weighted_staggered_hands_push_up"
        },
        "59": {
          "valueName": "suspended_push_up"
        },
        "60": {
          "valueName": "weighted_suspended_push_up"
        },
        "61": {
          "valueName": "swiss_ball_push_up"
        },
        "62": {
          "valueName": "weighted_swiss_ball_push_up"
        },
        "63": {
          "valueName": "swiss_ball_push_up_plus"
        },
        "64": {
          "valueName": "weighted_swiss_ball_push_up_plus"
        },
        "65": {
          "valueName": "t_push_up"
        },
        "66": {
          "valueName": "weighted_t_push_up"
        },
        "67": {
          "valueName": "triple_stop_push_up"
        },
        "68": {
          "valueName": "weighted_triple_stop_push_up"
        },
        "69": {
          "valueName": "wide_hands_push_up"
        },
        "70": {
          "valueName": "weighted_wide_hands_push_up"
        },
        "71": {
          "valueName": "parallette_handstand_push_up"
        },
        "72": {
          "valueName": "weighted_parallette_handstand_push_up"
        },
        "73": {
          "valueName": "ring_handstand_push_up"
        },
        "74": {
          "valueName": "weighted_ring_handstand_push_up"
        },
        "75": {
          "valueName": "ring_push_up"
        },
        "76": {
          "valueName": "weighted_ring_push_up"
        },
        "77": {
          "valueName": "push_up"
        },
        "78": {
          "valueName": "pilates_pushup"
        }
      }
    },
    "row_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "barbell_straight_leg_deadlift_to_row"
        },
        "1": {
          "valueName": "cable_row_standing"
        },
        "2": {
          "valueName": "dumbbell_row"
        },
        "3": {
          "valueName": "elevated_feet_inverted_row"
        },
        "4": {
          "valueName": "weighted_elevated_feet_inverted_row"
        },
        "5": {
          "valueName": "face_pull"
        },
        "6": {
          "valueName": "face_pull_with_external_rotation"
        },
        "7": {
          "valueName": "inverted_row_with_feet_on_swiss_ball"
        },
        "8": {
          "valueName": "weighted_inverted_row_with_feet_on_swiss_ball"
        },
        "9": {
          "valueName": "kettlebell_row"
        },
        "10": {
          "valueName": "modified_inverted_row"
        },
        "11": {
          "valueName": "weighted_modified_inverted_row"
        },
        "12": {
          "valueName": "neutral_grip_alternating_dumbbell_row"
        },
        "13": {
          "valueName": "one_arm_bent_over_row"
        },
        "14": {
          "valueName": "one_legged_dumbbell_row"
        },
        "15": {
          "valueName": "renegade_row"
        },
        "16": {
          "valueName": "reverse_grip_barbell_row"
        },
        "17": {
          "valueName": "rope_handle_cable_row"
        },
        "18": {
          "valueName": "seated_cable_row"
        },
        "19": {
          "valueName": "seated_dumbbell_row"
        },
        "20": {
          "valueName": "single_arm_cable_row"
        },
        "21": {
          "valueName": "single_arm_cable_row_and_rotation"
        },
        "22": {
          "valueName": "single_arm_inverted_row"
        },
        "23": {
          "valueName": "weighted_single_arm_inverted_row"
        },
        "24": {
          "valueName": "single_arm_neutral_grip_dumbbell_row"
        },
        "25": {
          "valueName": "single_arm_neutral_grip_dumbbell_row_and_rotation"
        },
        "26": {
          "valueName": "suspended_inverted_row"
        },
        "27": {
          "valueName": "weighted_suspended_inverted_row"
        },
        "28": {
          "valueName": "t_bar_row"
        },
        "29": {
          "valueName": "towel_grip_inverted_row"
        },
        "30": {
          "valueName": "weighted_towel_grip_inverted_row"
        },
        "31": {
          "valueName": "underhand_grip_cable_row"
        },
        "32": {
          "valueName": "v_grip_cable_row"
        },
        "33": {
          "valueName": "wide_grip_seated_cable_row"
        }
      }
    },
    "shoulder_press_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "alternating_dumbbell_shoulder_press"
        },
        "1": {
          "valueName": "arnold_press"
        },
        "2": {
          "valueName": "barbell_front_squat_to_push_press"
        },
        "3": {
          "valueName": "barbell_push_press"
        },
        "4": {
          "valueName": "barbell_shoulder_press"
        },
        "5": {
          "valueName": "dead_curl_press"
        },
        "6": {
          "valueName": "dumbbell_alternating_shoulder_press_and_twist"
        },
        "7": {
          "valueName": "dumbbell_hammer_curl_to_lunge_to_press"
        },
        "8": {
          "valueName": "dumbbell_push_press"
        },
        "9": {
          "valueName": "floor_inverted_shoulder_press"
        },
        "10": {
          "valueName": "weighted_floor_inverted_shoulder_press"
        },
        "11": {
          "valueName": "inverted_shoulder_press"
        },
        "12": {
          "valueName": "weighted_inverted_shoulder_press"
        },
        "13": {
          "valueName": "one_arm_push_press"
        },
        "14": {
          "valueName": "overhead_barbell_press"
        },
        "15": {
          "valueName": "overhead_dumbbell_press"
        },
        "16": {
          "valueName": "seated_barbell_shoulder_press"
        },
        "17": {
          "valueName": "seated_dumbbell_shoulder_press"
        },
        "18": {
          "valueName": "single_arm_dumbbell_shoulder_press"
        },
        "19": {
          "valueName": "single_arm_step_up_and_press"
        },
        "20": {
          "valueName": "smith_machine_overhead_press"
        },
        "21": {
          "valueName": "split_stance_hammer_curl_to_press"
        },
        "22": {
          "valueName": "swiss_ball_dumbbell_shoulder_press"
        },
        "23": {
          "valueName": "weight_plate_front_raise"
        }
      }
    },
    "shoulder_stability_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "90_degree_cable_external_rotation"
        },
        "1": {
          "valueName": "band_external_rotation"
        },
        "2": {
          "valueName": "band_internal_rotation"
        },
        "3": {
          "valueName": "bent_arm_lateral_raise_and_external_rotation"
        },
        "4": {
          "valueName": "cable_external_rotation"
        },
        "5": {
          "valueName": "dumbbell_face_pull_with_external_rotation"
        },
        "6": {
          "valueName": "floor_i_raise"
        },
        "7": {
          "valueName": "weighted_floor_i_raise"
        },
        "8": {
          "valueName": "floor_t_raise"
        },
        "9": {
          "valueName": "weighted_floor_t_raise"
        },
        "10": {
          "valueName": "floor_y_raise"
        },
        "11": {
          "valueName": "weighted_floor_y_raise"
        },
        "12": {
          "valueName": "incline_i_raise"
        },
        "13": {
          "valueName": "weighted_incline_i_raise"
        },
        "14": {
          "valueName": "incline_l_raise"
        },
        "15": {
          "valueName": "weighted_incline_l_raise"
        },
        "16": {
          "valueName": "incline_t_raise"
        },
        "17": {
          "valueName": "weighted_incline_t_raise"
        },
        "18": {
          "valueName": "incline_w_raise"
        },
        "19": {
          "valueName": "weighted_incline_w_raise"
        },
        "20": {
          "valueName": "incline_y_raise"
        },
        "21": {
          "valueName": "weighted_incline_y_raise"
        },
        "22": {
          "valueName": "lying_external_rotation"
        },
        "23": {
          "valueName": "seated_dumbbell_external_rotation"
        },
        "24": {
          "valueName": "standing_l_raise"
        },
        "25": {
          "valueName": "swiss_ball_i_raise"
        },
        "26": {
          "valueName": "weighted_swiss_ball_i_raise"
        },
        "27": {
          "valueName": "swiss_ball_t_raise"
        },
        "28": {
          "valueName": "weighted_swiss_ball_t_raise"
        },
        "29": {
          "valueName": "swiss_ball_w_raise"
        },
        "30": {
          "valueName": "weighted_swiss_ball_w_raise"
        },
        "31": {
          "valueName": "swiss_ball_y_raise"
        },
        "32": {
          "valueName": "weighted_swiss_ball_y_raise"
        }
      }
    },
    "shrug_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "barbell_jump_shrug"
        },
        "1": {
          "valueName": "barbell_shrug"
        },
        "2": {
          "valueName": "barbell_upright_row"
        },
        "3": {
          "valueName": "behind_the_back_smith_machine_shrug"
        },
        "4": {
          "valueName": "dumbbell_jump_shrug"
        },
        "5": {
          "valueName": "dumbbell_shrug"
        },
        "6": {
          "valueName": "dumbbell_upright_row"
        },
        "7": {
          "valueName": "incline_dumbbell_shrug"
        },
        "8": {
          "valueName": "overhead_barbell_shrug"
        },
        "9": {
          "valueName": "overhead_dumbbell_shrug"
        },
        "10": {
          "valueName": "scaption_and_shrug"
        },
        "11": {
          "valueName": "scapular_retraction"
        },
        "12": {
          "valueName": "serratus_chair_shrug"
        },
        "13": {
          "valueName": "weighted_serratus_chair_shrug"
        },
        "14": {
          "valueName": "serratus_shrug"
        },
        "15": {
          "valueName": "weighted_serratus_shrug"
        },
        "16": {
          "valueName": "wide_grip_jump_shrug"
        }
      }
    },
    "sit_up_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "alternating_sit_up"
        },
        "1": {
          "valueName": "weighted_alternating_sit_up"
        },
        "2": {
          "valueName": "bent_knee_v_up"
        },
        "3": {
          "valueName": "weighted_bent_knee_v_up"
        },
        "4": {
          "valueName": "butterfly_sit_up"
        },
        "5": {
          "valueName": "weighted_butterfly_situp"
        },
        "6": {
          "valueName": "cross_punch_roll_up"
        },
        "7": {
          "valueName": "weighted_cross_punch_roll_up"
        },
        "8": {
          "valueName": "crossed_arms_sit_up"
        },
        "9": {
          "valueName": "weighted_crossed_arms_sit_up"
        },
        "10": {
          "valueName": "get_up_sit_up"
        },
        "11": {
          "valueName": "weighted_get_up_sit_up"
        },
        "12": {
          "valueName": "hovering_sit_up"
        },
        "13": {
          "valueName": "weighted_hovering_sit_up"
        },
        "14": {
          "valueName": "kettlebell_sit_up"
        },
        "15": {
          "valueName": "medicine_ball_alternating_v_up"
        },
        "16": {
          "valueName": "medicine_ball_sit_up"
        },
        "17": {
          "valueName": "medicine_ball_v_up"
        },
        "18": {
          "valueName": "modified_sit_up"
        },
        "19": {
          "valueName": "negative_sit_up"
        },
        "20": {
          "valueName": "one_arm_full_sit_up"
        },
        "21": {
          "valueName": "reclining_circle"
        },
        "22": {
          "valueName": "weighted_reclining_circle"
        },
        "23": {
          "valueName": "reverse_curl_up"
        },
        "24": {
          "valueName": "weighted_reverse_curl_up"
        },
        "25": {
          "valueName": "single_leg_swiss_ball_jackknife"
        },
        "26": {
          "valueName": "weighted_single_leg_swiss_ball_jackknife"
        },
        "27": {
          "valueName": "the_teaser"
        },
        "28": {
          "valueName": "the_teaser_weighted"
        },
        "29": {
          "valueName": "three_part_roll_down"
        },
        "30": {
          "valueName": "weighted_three_part_roll_down"
        },
        "31": {
          "valueName": "v_up"
        },
        "32": {
          "valueName": "weighted_v_up"
        },
        "33": {
          "valueName": "weighted_russian_twist_on_swiss_ball"
        },
        "34": {
          "valueName": "weighted_sit_up"
        },
        "35": {
          "valueName": "x_abs"
        },
        "36": {
          "valueName": "weighted_x_abs"
        },
        "37": {
          "valueName": "sit_up"
        }
      }
    },
    "squat_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "leg_press"
        },
        "1": {
          "valueName": "back_squat_with_body_bar"
        },
        "2": {
          "valueName": "back_squats"
        },
        "3": {
          "valueName": "weighted_back_squats"
        },
        "4": {
          "valueName": "balancing_squat"
        },
        "5": {
          "valueName": "weighted_balancing_squat"
        },
        "6": {
          "valueName": "barbell_back_squat"
        },
        "7": {
          "valueName": "barbell_box_squat"
        },
        "8": {
          "valueName": "barbell_front_squat"
        },
        "9": {
          "valueName": "barbell_hack_squat"
        },
        "10": {
          "valueName": "barbell_hang_squat_snatch"
        },
        "11": {
          "valueName": "barbell_lateral_step_up"
        },
        "12": {
          "valueName": "barbell_quarter_squat"
        },
        "13": {
          "valueName": "barbell_siff_squat"
        },
        "14": {
          "valueName": "barbell_squat_snatch"
        },
        "15": {
          "valueName": "barbell_squat_with_heels_raised"
        },
        "16": {
          "valueName": "barbell_stepover"
        },
        "17": {
          "valueName": "barbell_step_up"
        },
        "18": {
          "valueName": "bench_squat_with_rotational_chop"
        },
        "19": {
          "valueName": "weighted_bench_squat_with_rotational_chop"
        },
        "20": {
          "valueName": "body_weight_wall_squat"
        },
        "21": {
          "valueName": "weighted_wall_squat"
        },
        "22": {
          "valueName": "box_step_squat"
        },
        "23": {
          "valueName": "weighted_box_step_squat"
        },
        "24": {
          "valueName": "braced_squat"
        },
        "25": {
          "valueName": "crossed_arm_barbell_front_squat"
        },
        "26": {
          "valueName": "crossover_dumbbell_step_up"
        },
        "27": {
          "valueName": "dumbbell_front_squat"
        },
        "28": {
          "valueName": "dumbbell_split_squat"
        },
        "29": {
          "valueName": "dumbbell_squat"
        },
        "30": {
          "valueName": "dumbbell_squat_clean"
        },
        "31": {
          "valueName": "dumbbell_stepover"
        },
        "32": {
          "valueName": "dumbbell_step_up"
        },
        "33": {
          "valueName": "elevated_single_leg_squat"
        },
        "34": {
          "valueName": "weighted_elevated_single_leg_squat"
        },
        "35": {
          "valueName": "figure_four_squats"
        },
        "36": {
          "valueName": "weighted_figure_four_squats"
        },
        "37": {
          "valueName": "goblet_squat"
        },
        "38": {
          "valueName": "kettlebell_squat"
        },
        "39": {
          "valueName": "kettlebell_swing_overhead"
        },
        "40": {
          "valueName": "kettlebell_swing_with_flip_to_squat"
        },
        "41": {
          "valueName": "lateral_dumbbell_step_up"
        },
        "42": {
          "valueName": "one_legged_squat"
        },
        "43": {
          "valueName": "overhead_dumbbell_squat"
        },
        "44": {
          "valueName": "overhead_squat"
        },
        "45": {
          "valueName": "partial_single_leg_squat"
        },
        "46": {
          "valueName": "weighted_partial_single_leg_squat"
        },
        "47": {
          "valueName": "pistol_squat"
        },
        "48": {
          "valueName": "weighted_pistol_squat"
        },
        "49": {
          "valueName": "plie_slides"
        },
        "50": {
          "valueName": "weighted_plie_slides"
        },
        "51": {
          "valueName": "plie_squat"
        },
        "52": {
          "valueName": "weighted_plie_squat"
        },
        "53": {
          "valueName": "prisoner_squat"
        },
        "54": {
          "valueName": "weighted_prisoner_squat"
        },
        "55": {
          "valueName": "single_leg_bench_get_up"
        },
        "56": {
          "valueName": "weighted_single_leg_bench_get_up"
        },
        "57": {
          "valueName": "single_leg_bench_squat"
        },
        "58": {
          "valueName": "weighted_single_leg_bench_squat"
        },
        "59": {
          "valueName": "single_leg_squat_on_swiss_ball"
        },
        "60": {
          "valueName": "weighted_single_leg_squat_on_swiss_ball"
        },
        "61": {
          "valueName": "squat"
        },
        "62": {
          "valueName": "weighted_squat"
        },
        "63": {
          "valueName": "squats_with_band"
        },
        "64": {
          "valueName": "staggered_squat"
        },
        "65": {
          "valueName": "weighted_staggered_squat"
        },
        "66": {
          "valueName": "step_up"
        },
        "67": {
          "valueName": "weighted_step_up"
        },
        "68": {
          "valueName": "suitcase_squats"
        },
        "69": {
          "valueName": "sumo_squat"
        },
        "70": {
          "valueName": "sumo_squat_slide_in"
        },
        "71": {
          "valueName": "weighted_sumo_squat_slide_in"
        },
        "72": {
          "valueName": "sumo_squat_to_high_pull"
        },
        "73": {
          "valueName": "sumo_squat_to_stand"
        },
        "74": {
          "valueName": "weighted_sumo_squat_to_stand"
        },
        "75": {
          "valueName": "sumo_squat_with_rotation"
        },
        "76": {
          "valueName": "weighted_sumo_squat_with_rotation"
        },
        "77": {
          "valueName": "swiss_ball_body_weight_wall_squat"
        },
        "78": {
          "valueName": "weighted_swiss_ball_wall_squat"
        },
        "79": {
          "valueName": "thrusters"
        },
        "80": {
          "valueName": "uneven_squat"
        },
        "81": {
          "valueName": "weighted_uneven_squat"
        },
        "82": {
          "valueName": "waist_slimming_squat"
        },
        "83": {
          "valueName": "wall_ball"
        },
        "84": {
          "valueName": "wide_stance_barbell_squat"
        },
        "85": {
          "valueName": "wide_stance_goblet_squat"
        },
        "86": {
          "valueName": "zercher_squat"
        },
        "87": {
          "valueName": "kbs_overhead"
        },
        "88": {
          "valueName": "squat_and_side_kick"
        },
        "89": {
          "valueName": "squat_jumps_in_n_out"
        },
        "90": {
          "valueName": "pilates_plie_squats_parallel_turned_out_flat_and_heels"
        },
        "91": {
          "valueName": "releve_straight_leg_and_knee_bent_with_one_leg_variation"
        }
      }
    },
    "total_body_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "burpee"
        },
        "1": {
          "valueName": "weighted_burpee"
        },
        "2": {
          "valueName": "burpee_box_jump"
        },
        "3": {
          "valueName": "weighted_burpee_box_jump"
        },
        "4": {
          "valueName": "high_pull_burpee"
        },
        "5": {
          "valueName": "man_makers"
        },
        "6": {
          "valueName": "one_arm_burpee"
        },
        "7": {
          "valueName": "squat_thrusts"
        },
        "8": {
          "valueName": "weighted_squat_thrusts"
        },
        "9": {
          "valueName": "squat_plank_push_up"
        },
        "10": {
          "valueName": "weighted_squat_plank_push_up"
        },
        "11": {
          "valueName": "standing_t_rotation_balance"
        },
        "12": {
          "valueName": "weighted_standing_t_rotation_balance"
        }
      }
    },
    "triceps_extension_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "bench_dip"
        },
        "1": {
          "valueName": "weighted_bench_dip"
        },
        "2": {
          "valueName": "body_weight_dip"
        },
        "3": {
          "valueName": "cable_kickback"
        },
        "4": {
          "valueName": "cable_lying_triceps_extension"
        },
        "5": {
          "valueName": "cable_overhead_triceps_extension"
        },
        "6": {
          "valueName": "dumbbell_kickback"
        },
        "7": {
          "valueName": "dumbbell_lying_triceps_extension"
        },
        "8": {
          "valueName": "ez_bar_overhead_triceps_extension"
        },
        "9": {
          "valueName": "incline_dip"
        },
        "10": {
          "valueName": "weighted_incline_dip"
        },
        "11": {
          "valueName": "incline_ez_bar_lying_triceps_extension"
        },
        "12": {
          "valueName": "lying_dumbbell_pullover_to_extension"
        },
        "13": {
          "valueName": "lying_ez_bar_triceps_extension"
        },
        "14": {
          "valueName": "lying_triceps_extension_to_close_grip_bench_press"
        },
        "15": {
          "valueName": "overhead_dumbbell_triceps_extension"
        },
        "16": {
          "valueName": "reclining_triceps_press"
        },
        "17": {
          "valueName": "reverse_grip_pressdown"
        },
        "18": {
          "valueName": "reverse_grip_triceps_pressdown"
        },
        "19": {
          "valueName": "rope_pressdown"
        },
        "20": {
          "valueName": "seated_barbell_overhead_triceps_extension"
        },
        "21": {
          "valueName": "seated_dumbbell_overhead_triceps_extension"
        },
        "22": {
          "valueName": "seated_ez_bar_overhead_triceps_extension"
        },
        "23": {
          "valueName": "seated_single_arm_overhead_dumbbell_extension"
        },
        "24": {
          "valueName": "single_arm_dumbbell_overhead_triceps_extension"
        },
        "25": {
          "valueName": "single_dumbbell_seated_overhead_triceps_extension"
        },
        "26": {
          "valueName": "single_leg_bench_dip_and_kick"
        },
        "27": {
          "valueName": "weighted_single_leg_bench_dip_and_kick"
        },
        "28": {
          "valueName": "single_leg_dip"
        },
        "29": {
          "valueName": "weighted_single_leg_dip"
        },
        "30": {
          "valueName": "static_lying_triceps_extension"
        },
        "31": {
          "valueName": "suspended_dip"
        },
        "32": {
          "valueName": "weighted_suspended_dip"
        },
        "33": {
          "valueName": "swiss_ball_dumbbell_lying_triceps_extension"
        },
        "34": {
          "valueName": "swiss_ball_ez_bar_lying_triceps_extension"
        },
        "35": {
          "valueName": "swiss_ball_ez_bar_overhead_triceps_extension"
        },
        "36": {
          "valueName": "tabletop_dip"
        },
        "37": {
          "valueName": "weighted_tabletop_dip"
        },
        "38": {
          "valueName": "triceps_extension_on_floor"
        },
        "39": {
          "valueName": "triceps_pressdown"
        },
        "40": {
          "valueName": "weighted_dip"
        }
      }
    },
    "warm_up_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "quadruped_rocking"
        },
        "1": {
          "valueName": "neck_tilts"
        },
        "2": {
          "valueName": "ankle_circles"
        },
        "3": {
          "valueName": "ankle_dorsiflexion_with_band"
        },
        "4": {
          "valueName": "ankle_internal_rotation"
        },
        "5": {
          "valueName": "arm_circles"
        },
        "6": {
          "valueName": "bent_over_reach_to_sky"
        },
        "7": {
          "valueName": "cat_camel"
        },
        "8": {
          "valueName": "elbow_to_foot_lunge"
        },
        "9": {
          "valueName": "forward_and_backward_leg_swings"
        },
        "10": {
          "valueName": "groiners"
        },
        "11": {
          "valueName": "inverted_hamstring_stretch"
        },
        "12": {
          "valueName": "lateral_duck_under"
        },
        "13": {
          "valueName": "neck_rotations"
        },
        "14": {
          "valueName": "opposite_arm_and_leg_balance"
        },
        "15": {
          "valueName": "reach_roll_and_lift"
        },
        "16": {
          "valueName": "scorpion"
        },
        "17": {
          "valueName": "shoulder_circles"
        },
        "18": {
          "valueName": "side_to_side_leg_swings"
        },
        "19": {
          "valueName": "sleeper_stretch"
        },
        "20": {
          "valueName": "slide_out"
        },
        "21": {
          "valueName": "swiss_ball_hip_crossover"
        },
        "22": {
          "valueName": "swiss_ball_reach_roll_and_lift"
        },
        "23": {
          "valueName": "swiss_ball_windshield_wipers"
        },
        "24": {
          "valueName": "thoracic_rotation"
        },
        "25": {
          "valueName": "walking_high_kicks"
        },
        "26": {
          "valueName": "walking_high_knees"
        },
        "27": {
          "valueName": "walking_knee_hugs"
        },
        "28": {
          "valueName": "walking_leg_cradles"
        },
        "29": {
          "valueName": "walkout"
        },
        "30": {
          "valueName": "walkout_from_push_up_position"
        }
      }
    },
    "run_exercise_name": {
      "baseType": "uint16",
      "values": {
        "0": {
          "valueName": "run"
        },
        "1": {
          "valueName": "walk"
        },
        "2": {
          "valueName": "jog"
        },
        "3": {
          "valueName": "sprint"
        }
      }
    },
    "water_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "fresh"
        },
        "1": {
          "valueName": "salt"
        },
        "2": {
          "valueName": "en13319"
        },
        "3": {
          "valueName": "custom"
        }
      }
    },
    "tissue_model_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "zhl_16c",
          "comment": "Buhlmann's decompression algorithm, version C"
        }
      }
    },
    "dive_gas_status": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "disabled"
        },
        "1": {
          "valueName": "enabled"
        },
        "2": {
          "valueName": "backup_only"
        }
      }
    },
    "dive_alarm_type": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "depth"
        },
        "1": {
          "valueName": "time"
        }
      }
    },
    "dive_backlight_mode": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "at_depth"
        },
        "1": {
          "valueName": "always_on"
        }
      }
    },
    "favero_product": {
      "baseType": "uint16",
      "values": {
        "10": {
          "valueName": "assioma_uno"
        },
        "12": {
          "valueName": "assioma_duo"
        }
      }
    },
    "climb_pro_event": {
      "baseType": "enum",
      "values": {
        "0": {
          "valueName": "approach"
        },
        "1": {
          "valueName": "start"
        },
        "2": {
          "valueName": "complete"
        }
      }
    }
  },
  "messages": {
    "file_id": {
      "comment": "Must be first message in file.",
      "fields": {
        "0": {
          "fieldName": "type",
          "fieldType": "file",
          "example": 1
        },
        "1": {
          "fieldName": "manufacturer",
          "fieldType": "manufacturer",
          "example": 1
        },
        "2": {
          "fieldName": "product",
          "fieldType": "uint16",
          "example": 1,
          "options": [
            {
              "fieldName": "favero_product",
              "fieldType": "favero_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "favero_electronics"
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "garmin",
              "example": 1
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "dynastream",
              "example": 1
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "dynastream_oem",
              "example": 1
            }
          ]
        },
        "3": {
          "fieldName": "serial_number",
          "fieldType": "uint32z",
          "example": 1
        },
        "4": {
          "fieldName": "time_created",
          "fieldType": "date_time",
          "comment": "Only set for files that are can be created/erased.",
          "example": 1
        },
        "5": {
          "fieldName": "number",
          "fieldType": "uint16",
          "comment": "Only set for files that are not created/erased.",
          "example": 1
        },
        "8": {
          "fieldName": "product_name",
          "fieldType": "string",
          "comment": "Optional free form string to indicate the devices name or model",
          "example": 20
        }
      }
    },
    "file_creator": {
      "fields": {
        "0": {
          "fieldName": "software_version",
          "fieldType": "uint16",
          "example": 1
        },
        "1": {
          "fieldName": "hardware_version",
          "fieldType": "uint8",
          "example": 1
        }
      }
    },
    "timestamp_correlation": {
      "fields": {
        "0": {
          "fieldName": "fractional_timestamp",
          "fieldType": "uint16",
          "scale": 32768,
          "units": "s",
          "comment": "Fractional part of the UTC timestamp at the time the system timestamp was recorded."
        },
        "1": {
          "fieldName": "system_timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Whole second part of the system timestamp"
        },
        "2": {
          "fieldName": "fractional_system_timestamp",
          "fieldType": "uint16",
          "scale": 32768,
          "units": "s",
          "comment": "Fractional part of the system timestamp"
        },
        "3": {
          "fieldName": "local_timestamp",
          "fieldType": "local_date_time",
          "units": "s",
          "comment": "timestamp epoch expressed in local time used to convert timestamps to local time"
        },
        "4": {
          "fieldName": "timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Millisecond part of the UTC timestamp at the time the system timestamp was recorded."
        },
        "5": {
          "fieldName": "system_timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Millisecond part of the system timestamp"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Whole second part of UTC timestamp at the time the system timestamp was recorded."
        }
      }
    },
    "software": {
      "fields": {
        "3": {
          "fieldName": "version",
          "fieldType": "uint16",
          "scale": 100,
          "example": 1
        },
        "5": {
          "fieldName": "part_number",
          "fieldType": "string",
          "example": 16
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "slave_device": {
      "fields": {
        "0": {
          "fieldName": "manufacturer",
          "fieldType": "manufacturer",
          "example": 1
        },
        "1": {
          "fieldName": "product",
          "fieldType": "uint16",
          "example": 1,
          "options": [
            {
              "fieldName": "favero_product",
              "fieldType": "favero_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "favero_electronics"
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "garmin",
              "example": 1
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "dynastream",
              "example": 1
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "dynastream_oem",
              "example": 1
            }
          ]
        }
      }
    },
    "capabilities": {
      "fields": {
        "0": {
          "fieldName": "languages",
          "fieldType": "uint8z",
          "array": "[N]",
          "comment": "Use language_bits_x types where x is index of array.",
          "example": 4
        },
        "1": {
          "fieldName": "sports",
          "fieldType": "sport_bits_0",
          "array": "[N]",
          "comment": "Use sport_bits_x types where x is index of array.",
          "example": 1
        },
        "21": {
          "fieldName": "workouts_supported",
          "fieldType": "workout_capabilities",
          "example": 1
        },
        "23": {
          "fieldName": "connectivity_supported",
          "fieldType": "connectivity_capabilities",
          "example": 1
        }
      }
    },
    "file_capabilities": {
      "fields": {
        "0": {
          "fieldName": "type",
          "fieldType": "file",
          "example": 1
        },
        "1": {
          "fieldName": "flags",
          "fieldType": "file_flags",
          "example": 1
        },
        "2": {
          "fieldName": "directory",
          "fieldType": "string",
          "example": 16
        },
        "3": {
          "fieldName": "max_count",
          "fieldType": "uint16",
          "example": 1
        },
        "4": {
          "fieldName": "max_size",
          "fieldType": "uint32",
          "units": "bytes",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "mesg_capabilities": {
      "fields": {
        "0": {
          "fieldName": "file",
          "fieldType": "file",
          "example": 1
        },
        "1": {
          "fieldName": "mesg_num",
          "fieldType": "mesg_num",
          "example": 1
        },
        "2": {
          "fieldName": "count_type",
          "fieldType": "mesg_count",
          "example": 1
        },
        "3": {
          "fieldName": "count",
          "fieldType": "uint16",
          "example": 1,
          "options": [
            {
              "fieldName": "num_per_file",
              "fieldType": "uint16",
              "refFieldName": "count_type",
              "refFieldValue": "num_per_file",
              "example": 1
            },
            {
              "fieldName": "max_per_file",
              "fieldType": "uint16",
              "refFieldName": "count_type",
              "refFieldValue": "max_per_file",
              "example": 1
            },
            {
              "fieldName": "max_per_file_type",
              "fieldType": "uint16",
              "refFieldName": "count_type",
              "refFieldValue": "max_per_file_type",
              "example": 1
            }
          ]
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "field_capabilities": {
      "fields": {
        "0": {
          "fieldName": "file",
          "fieldType": "file",
          "example": 1
        },
        "1": {
          "fieldName": "mesg_num",
          "fieldType": "mesg_num",
          "example": 1
        },
        "2": {
          "fieldName": "field_num",
          "fieldType": "uint8",
          "example": 1
        },
        "3": {
          "fieldName": "count",
          "fieldType": "uint16",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "device_settings": {
      "fields": {
        "0": {
          "fieldName": "active_time_zone",
          "fieldType": "uint8",
          "comment": "Index into time zone arrays.",
          "example": 1
        },
        "1": {
          "fieldName": "utc_offset",
          "fieldType": "uint32",
          "comment": "Offset from system time. Required to convert timestamp from system time to UTC.",
          "example": 1
        },
        "2": {
          "fieldName": "time_offset",
          "fieldType": "uint32",
          "array": "[N]",
          "units": "s",
          "comment": "Offset from system time.",
          "example": 2
        },
        "4": {
          "fieldName": "time_mode",
          "fieldType": "time_mode",
          "array": "[N]",
          "comment": "Display mode for the time",
          "example": 2
        },
        "5": {
          "fieldName": "time_zone_offset",
          "fieldType": "sint8",
          "array": "[N]",
          "scale": 4,
          "units": "hr",
          "comment": "timezone offset in 1/4 hour increments",
          "example": 2
        },
        "12": {
          "fieldName": "backlight_mode",
          "fieldType": "backlight_mode",
          "comment": "Mode for backlight",
          "example": 1
        },
        "36": {
          "fieldName": "activity_tracker_enabled",
          "fieldType": "bool",
          "comment": "Enabled state of the activity tracker functionality",
          "example": 1
        },
        "39": {
          "fieldName": "clock_time",
          "fieldType": "date_time",
          "comment": "UTC timestamp used to set the devices clock and date",
          "example": 1
        },
        "40": {
          "fieldName": "pages_enabled",
          "fieldType": "uint16",
          "array": "[N]",
          "comment": "Bitfield  to configure enabled screens for each supported loop",
          "example": 1
        },
        "46": {
          "fieldName": "move_alert_enabled",
          "fieldType": "bool",
          "comment": "Enabled state of the move alert",
          "example": 1
        },
        "47": {
          "fieldName": "date_mode",
          "fieldType": "date_mode",
          "comment": "Display mode for the date",
          "example": 1
        },
        "55": {
          "fieldName": "display_orientation",
          "fieldType": "display_orientation",
          "example": 1
        },
        "56": {
          "fieldName": "mounting_side",
          "fieldType": "side",
          "example": 1
        },
        "57": {
          "fieldName": "default_page",
          "fieldType": "uint16",
          "array": "[N]",
          "comment": "Bitfield to indicate one page as default for each supported loop",
          "example": 1
        },
        "58": {
          "fieldName": "autosync_min_steps",
          "fieldType": "uint16",
          "units": "steps",
          "comment": "Minimum steps before an autosync can occur",
          "example": 1
        },
        "59": {
          "fieldName": "autosync_min_time",
          "fieldType": "uint16",
          "units": "minutes",
          "comment": "Minimum minutes before an autosync can occur",
          "example": 1
        },
        "80": {
          "fieldName": "lactate_threshold_autodetect_enabled",
          "fieldType": "bool",
          "comment": "Enable auto-detect setting for the lactate threshold feature."
        },
        "86": {
          "fieldName": "ble_auto_upload_enabled",
          "fieldType": "bool",
          "comment": "Automatically upload using BLE"
        },
        "89": {
          "fieldName": "auto_sync_frequency",
          "fieldType": "auto_sync_frequency",
          "comment": "Helps to conserve battery by changing modes"
        },
        "90": {
          "fieldName": "auto_activity_detect",
          "fieldType": "auto_activity_detect",
          "comment": "Allows setting specific activities auto-activity detect enabled/disabled settings"
        },
        "94": {
          "fieldName": "number_of_screens",
          "fieldType": "uint8",
          "comment": "Number of screens configured to display"
        },
        "95": {
          "fieldName": "smart_notification_display_orientation",
          "fieldType": "display_orientation",
          "comment": "Smart Notification display orientation"
        },
        "134": {
          "fieldName": "tap_interface",
          "fieldType": "switch"
        }
      }
    },
    "user_profile": {
      "fields": {
        "0": {
          "fieldName": "friendly_name",
          "fieldType": "string",
          "example": 16
        },
        "1": {
          "fieldName": "gender",
          "fieldType": "gender",
          "example": 1
        },
        "2": {
          "fieldName": "age",
          "fieldType": "uint8",
          "units": "years",
          "example": 1
        },
        "3": {
          "fieldName": "height",
          "fieldType": "uint8",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "4": {
          "fieldName": "weight",
          "fieldType": "uint16",
          "scale": 10,
          "units": "kg",
          "example": 1
        },
        "5": {
          "fieldName": "language",
          "fieldType": "language",
          "example": 1
        },
        "6": {
          "fieldName": "elev_setting",
          "fieldType": "display_measure",
          "example": 1
        },
        "7": {
          "fieldName": "weight_setting",
          "fieldType": "display_measure",
          "example": 1
        },
        "8": {
          "fieldName": "resting_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "9": {
          "fieldName": "default_max_running_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "10": {
          "fieldName": "default_max_biking_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "11": {
          "fieldName": "default_max_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "12": {
          "fieldName": "hr_setting",
          "fieldType": "display_heart",
          "example": 1
        },
        "13": {
          "fieldName": "speed_setting",
          "fieldType": "display_measure",
          "example": 1
        },
        "14": {
          "fieldName": "dist_setting",
          "fieldType": "display_measure",
          "example": 1
        },
        "16": {
          "fieldName": "power_setting",
          "fieldType": "display_power",
          "example": 1
        },
        "17": {
          "fieldName": "activity_class",
          "fieldType": "activity_class",
          "example": 1
        },
        "18": {
          "fieldName": "position_setting",
          "fieldType": "display_position",
          "example": 1
        },
        "21": {
          "fieldName": "temperature_setting",
          "fieldType": "display_measure",
          "example": 1
        },
        "22": {
          "fieldName": "local_id",
          "fieldType": "user_local_id",
          "example": 1
        },
        "23": {
          "fieldName": "global_id",
          "fieldType": "byte",
          "array": "[6]",
          "example": 1
        },
        "28": {
          "fieldName": "wake_time",
          "fieldType": "localtime_into_day",
          "comment": "Typical wake time"
        },
        "29": {
          "fieldName": "sleep_time",
          "fieldType": "localtime_into_day",
          "comment": "Typical bed time"
        },
        "30": {
          "fieldName": "height_setting",
          "fieldType": "display_measure",
          "example": 1
        },
        "31": {
          "fieldName": "user_running_step_length",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "m",
          "comment": "User defined running step length set to 0 for auto length",
          "example": 1
        },
        "32": {
          "fieldName": "user_walking_step_length",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "m",
          "comment": "User defined walking step length set to 0 for auto length",
          "example": 1
        },
        "47": {
          "fieldName": "depth_setting",
          "fieldType": "display_measure"
        },
        "49": {
          "fieldName": "dive_count",
          "fieldType": "uint32"
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "hrm_profile": {
      "fields": {
        "0": {
          "fieldName": "enabled",
          "fieldType": "bool",
          "example": 1
        },
        "1": {
          "fieldName": "hrm_ant_id",
          "fieldType": "uint16z",
          "example": 1
        },
        "2": {
          "fieldName": "log_hrv",
          "fieldType": "bool",
          "example": 1
        },
        "3": {
          "fieldName": "hrm_ant_id_trans_type",
          "fieldType": "uint8z",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "sdm_profile": {
      "fields": {
        "0": {
          "fieldName": "enabled",
          "fieldType": "bool",
          "example": 1
        },
        "1": {
          "fieldName": "sdm_ant_id",
          "fieldType": "uint16z",
          "example": 1
        },
        "2": {
          "fieldName": "sdm_cal_factor",
          "fieldType": "uint16",
          "scale": 10,
          "units": "%",
          "example": 1
        },
        "3": {
          "fieldName": "odometer",
          "fieldType": "uint32",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "4": {
          "fieldName": "speed_source",
          "fieldType": "bool",
          "comment": "Use footpod for speed source instead of GPS",
          "example": 1
        },
        "5": {
          "fieldName": "sdm_ant_id_trans_type",
          "fieldType": "uint8z",
          "example": 1
        },
        "7": {
          "fieldName": "odometer_rollover",
          "fieldType": "uint8",
          "comment": "Rollover counter that can be used to extend the odometer",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "bike_profile": {
      "fields": {
        "0": {
          "fieldName": "name",
          "fieldType": "string",
          "example": 16
        },
        "1": {
          "fieldName": "sport",
          "fieldType": "sport",
          "example": 1
        },
        "2": {
          "fieldName": "sub_sport",
          "fieldType": "sub_sport",
          "example": 1
        },
        "3": {
          "fieldName": "odometer",
          "fieldType": "uint32",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "4": {
          "fieldName": "bike_spd_ant_id",
          "fieldType": "uint16z",
          "example": 1
        },
        "5": {
          "fieldName": "bike_cad_ant_id",
          "fieldType": "uint16z",
          "example": 1
        },
        "6": {
          "fieldName": "bike_spdcad_ant_id",
          "fieldType": "uint16z",
          "example": 1
        },
        "7": {
          "fieldName": "bike_power_ant_id",
          "fieldType": "uint16z",
          "example": 1
        },
        "8": {
          "fieldName": "custom_wheelsize",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "m",
          "example": 1
        },
        "9": {
          "fieldName": "auto_wheelsize",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "m",
          "example": 1
        },
        "10": {
          "fieldName": "bike_weight",
          "fieldType": "uint16",
          "scale": 10,
          "units": "kg",
          "example": 1
        },
        "11": {
          "fieldName": "power_cal_factor",
          "fieldType": "uint16",
          "scale": 10,
          "units": "%",
          "example": 1
        },
        "12": {
          "fieldName": "auto_wheel_cal",
          "fieldType": "bool",
          "example": 1
        },
        "13": {
          "fieldName": "auto_power_zero",
          "fieldType": "bool",
          "example": 1
        },
        "14": {
          "fieldName": "id",
          "fieldType": "uint8",
          "example": 1
        },
        "15": {
          "fieldName": "spd_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "16": {
          "fieldName": "cad_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "17": {
          "fieldName": "spdcad_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "18": {
          "fieldName": "power_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "19": {
          "fieldName": "crank_length",
          "fieldType": "uint8",
          "scale": 2,
          "offset": "-110",
          "units": "mm",
          "example": 1
        },
        "20": {
          "fieldName": "enabled",
          "fieldType": "bool",
          "example": 1
        },
        "21": {
          "fieldName": "bike_spd_ant_id_trans_type",
          "fieldType": "uint8z",
          "example": 1
        },
        "22": {
          "fieldName": "bike_cad_ant_id_trans_type",
          "fieldType": "uint8z",
          "example": 1
        },
        "23": {
          "fieldName": "bike_spdcad_ant_id_trans_type",
          "fieldType": "uint8z",
          "example": 1
        },
        "24": {
          "fieldName": "bike_power_ant_id_trans_type",
          "fieldType": "uint8z",
          "example": 1
        },
        "37": {
          "fieldName": "odometer_rollover",
          "fieldType": "uint8",
          "comment": "Rollover counter that can be used to extend the odometer",
          "example": 1
        },
        "38": {
          "fieldName": "front_gear_num",
          "fieldType": "uint8z",
          "comment": "Number of front gears",
          "example": 1
        },
        "39": {
          "fieldName": "front_gear",
          "fieldType": "uint8z",
          "array": "[N]",
          "comment": "Number of teeth on each gear 0 is innermost",
          "example": 1
        },
        "40": {
          "fieldName": "rear_gear_num",
          "fieldType": "uint8z",
          "comment": "Number of rear gears",
          "example": 1
        },
        "41": {
          "fieldName": "rear_gear",
          "fieldType": "uint8z",
          "array": "[N]",
          "comment": "Number of teeth on each gear 0 is innermost",
          "example": 1
        },
        "44": {
          "fieldName": "shimano_di2_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "connectivity": {
      "fields": {
        "0": {
          "fieldName": "bluetooth_enabled",
          "fieldType": "bool",
          "comment": "Use Bluetooth for connectivity features",
          "example": 1
        },
        "1": {
          "fieldName": "bluetooth_le_enabled",
          "fieldType": "bool",
          "comment": "Use Bluetooth Low Energy for connectivity features",
          "example": 1
        },
        "2": {
          "fieldName": "ant_enabled",
          "fieldType": "bool",
          "comment": "Use ANT for connectivity features",
          "example": 1
        },
        "3": {
          "fieldName": "name",
          "fieldType": "string",
          "example": 24
        },
        "4": {
          "fieldName": "live_tracking_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "5": {
          "fieldName": "weather_conditions_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "6": {
          "fieldName": "weather_alerts_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "7": {
          "fieldName": "auto_activity_upload_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "8": {
          "fieldName": "course_download_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "9": {
          "fieldName": "workout_download_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "10": {
          "fieldName": "gps_ephemeris_download_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "11": {
          "fieldName": "incident_detection_enabled",
          "fieldType": "bool",
          "example": 1
        },
        "12": {
          "fieldName": "grouptrack_enabled",
          "fieldType": "bool",
          "example": 1
        }
      }
    },
    "watchface_settings": {
      "fields": {
        "0": {
          "fieldName": "mode",
          "fieldType": "watchface_mode"
        },
        "1": {
          "fieldName": "layout",
          "fieldType": "byte",
          "options": [
            {
              "fieldName": "digital_layout",
              "fieldType": "digital_watchface_layout",
              "refFieldName": "mode",
              "refFieldValue": "digital"
            },
            {
              "fieldName": "analog_layout",
              "fieldType": "analog_watchface_layout",
              "refFieldName": "mode",
              "refFieldValue": "analog"
            }
          ]
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index"
        }
      }
    },
    "ohr_settings": {
      "fields": {
        "0": {
          "fieldName": "enabled",
          "fieldType": "switch"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s"
        }
      }
    },
    "zones_target": {
      "fields": {
        "1": {
          "fieldName": "max_heart_rate",
          "fieldType": "uint8",
          "example": 1
        },
        "2": {
          "fieldName": "threshold_heart_rate",
          "fieldType": "uint8",
          "example": 1
        },
        "3": {
          "fieldName": "functional_threshold_power",
          "fieldType": "uint16",
          "example": 1
        },
        "5": {
          "fieldName": "hr_calc_type",
          "fieldType": "hr_zone_calc",
          "example": 1
        },
        "7": {
          "fieldName": "pwr_calc_type",
          "fieldType": "pwr_zone_calc",
          "example": 1
        }
      }
    },
    "sport": {
      "fields": {
        "0": {
          "fieldName": "sport",
          "fieldType": "sport",
          "example": 1
        },
        "1": {
          "fieldName": "sub_sport",
          "fieldType": "sub_sport",
          "example": 1
        },
        "3": {
          "fieldName": "name",
          "fieldType": "string",
          "example": 16
        }
      }
    },
    "hr_zone": {
      "fields": {
        "1": {
          "fieldName": "high_bpm",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "2": {
          "fieldName": "name",
          "fieldType": "string",
          "example": 16
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "speed_zone": {
      "fields": {
        "0": {
          "fieldName": "high_value",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "1": {
          "fieldName": "name",
          "fieldType": "string",
          "example": 16
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "cadence_zone": {
      "fields": {
        "0": {
          "fieldName": "high_value",
          "fieldType": "uint8",
          "units": "rpm",
          "example": 1
        },
        "1": {
          "fieldName": "name",
          "fieldType": "string",
          "example": 16
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "power_zone": {
      "fields": {
        "1": {
          "fieldName": "high_value",
          "fieldType": "uint16",
          "units": "watts",
          "example": 1
        },
        "2": {
          "fieldName": "name",
          "fieldType": "string",
          "example": 16
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "met_zone": {
      "fields": {
        "1": {
          "fieldName": "high_bpm",
          "fieldType": "uint8",
          "example": 1
        },
        "2": {
          "fieldName": "calories",
          "fieldType": "uint16",
          "scale": 10,
          "units": "kcal / min",
          "example": 1
        },
        "3": {
          "fieldName": "fat_calories",
          "fieldType": "uint8",
          "scale": 10,
          "units": "kcal / min",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "dive_settings": {
      "fields": {
        "0": {
          "fieldName": "name",
          "fieldType": "string",
          "example": 16
        },
        "1": {
          "fieldName": "model",
          "fieldType": "tissue_model_type"
        },
        "2": {
          "fieldName": "gf_low",
          "fieldType": "uint8",
          "units": "percent"
        },
        "3": {
          "fieldName": "gf_high",
          "fieldType": "uint8",
          "units": "percent"
        },
        "4": {
          "fieldName": "water_type",
          "fieldType": "water_type"
        },
        "5": {
          "fieldName": "water_density",
          "fieldType": "float32",
          "units": "kg/m^3",
          "comment": "Fresh water is usually 1000; salt water is usually 1025"
        },
        "6": {
          "fieldName": "po2_warn",
          "fieldType": "uint8",
          "scale": 100,
          "units": "percent",
          "comment": "Typically 1.40"
        },
        "7": {
          "fieldName": "po2_critical",
          "fieldType": "uint8",
          "scale": 100,
          "units": "percent",
          "comment": "Typically 1.60"
        },
        "8": {
          "fieldName": "po2_deco",
          "fieldType": "uint8",
          "scale": 100,
          "units": "percent"
        },
        "9": {
          "fieldName": "safety_stop_enabled",
          "fieldType": "bool"
        },
        "10": {
          "fieldName": "bottom_depth",
          "fieldType": "float32"
        },
        "11": {
          "fieldName": "bottom_time",
          "fieldType": "uint32"
        },
        "12": {
          "fieldName": "apnea_countdown_enabled",
          "fieldType": "bool"
        },
        "13": {
          "fieldName": "apnea_countdown_time",
          "fieldType": "uint32"
        },
        "14": {
          "fieldName": "backlight_mode",
          "fieldType": "dive_backlight_mode"
        },
        "15": {
          "fieldName": "backlight_brightness",
          "fieldType": "uint8"
        },
        "16": {
          "fieldName": "backlight_timeout",
          "fieldType": "backlight_timeout"
        },
        "17": {
          "fieldName": "repeat_dive_interval",
          "fieldType": "uint16",
          "scale": 1,
          "units": "s",
          "comment": "Time between surfacing and ending the activity"
        },
        "18": {
          "fieldName": "safety_stop_time",
          "fieldType": "uint16",
          "scale": 1,
          "units": "s",
          "comment": "Time at safety stop (if enabled)"
        },
        "19": {
          "fieldName": "heart_rate_source_type",
          "fieldType": "source_type"
        },
        "20": {
          "fieldName": "heart_rate_source",
          "fieldType": "uint8",
          "example": 1,
          "options": [
            {
              "fieldName": "heart_rate_antplus_device_type",
              "fieldType": "antplus_device_type",
              "refFieldName": "heart_rate_source_type",
              "refFieldValue": "antplus",
              "example": 1
            },
            {
              "fieldName": "heart_rate_local_device_type",
              "fieldType": "local_device_type",
              "refFieldName": "heart_rate_source_type",
              "refFieldValue": "local",
              "example": 1
            }
          ]
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index"
        }
      }
    },
    "dive_alarm": {
      "fields": {
        "0": {
          "fieldName": "depth",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m"
        },
        "1": {
          "fieldName": "time",
          "fieldType": "sint32",
          "scale": 1,
          "units": "s"
        },
        "2": {
          "fieldName": "enabled",
          "fieldType": "bool"
        },
        "3": {
          "fieldName": "alarm_type",
          "fieldType": "dive_alarm_type"
        },
        "4": {
          "fieldName": "sound",
          "fieldType": "tone"
        },
        "5": {
          "fieldName": "dive_types",
          "fieldType": "sub_sport",
          "array": "[N]"
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "comment": "Index of the alarm"
        }
      }
    },
    "dive_gas": {
      "fields": {
        "0": {
          "fieldName": "helium_content",
          "fieldType": "uint8",
          "units": "percent"
        },
        "1": {
          "fieldName": "oxygen_content",
          "fieldType": "uint8",
          "units": "percent"
        },
        "2": {
          "fieldName": "status",
          "fieldType": "dive_gas_status"
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index"
        }
      }
    },
    "goal": {
      "fields": {
        "0": {
          "fieldName": "sport",
          "fieldType": "sport",
          "example": 1
        },
        "1": {
          "fieldName": "sub_sport",
          "fieldType": "sub_sport",
          "example": 1
        },
        "2": {
          "fieldName": "start_date",
          "fieldType": "date_time",
          "example": 1
        },
        "3": {
          "fieldName": "end_date",
          "fieldType": "date_time",
          "example": 1
        },
        "4": {
          "fieldName": "type",
          "fieldType": "goal",
          "example": 1
        },
        "5": {
          "fieldName": "value",
          "fieldType": "uint32",
          "example": 1
        },
        "6": {
          "fieldName": "repeat",
          "fieldType": "bool",
          "example": 1
        },
        "7": {
          "fieldName": "target_value",
          "fieldType": "uint32",
          "example": 1
        },
        "8": {
          "fieldName": "recurrence",
          "fieldType": "goal_recurrence",
          "example": 1
        },
        "9": {
          "fieldName": "recurrence_value",
          "fieldType": "uint16",
          "example": 1
        },
        "10": {
          "fieldName": "enabled",
          "fieldType": "bool",
          "example": 1
        },
        "11": {
          "fieldName": "source",
          "fieldType": "goal_source",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "activity": {
      "fields": {
        "0": {
          "fieldName": "total_timer_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "comment": "Exclude pauses",
          "example": 1
        },
        "1": {
          "fieldName": "num_sessions",
          "fieldType": "uint16",
          "example": 1
        },
        "2": {
          "fieldName": "type",
          "fieldType": "activity",
          "example": 1
        },
        "3": {
          "fieldName": "event",
          "fieldType": "event",
          "example": 1
        },
        "4": {
          "fieldName": "event_type",
          "fieldType": "event_type",
          "example": 1
        },
        "5": {
          "fieldName": "local_timestamp",
          "fieldType": "local_date_time",
          "comment": "timestamp epoch expressed in local time, used to convert activity timestamps to local time ",
          "example": 1
        },
        "6": {
          "fieldName": "event_group",
          "fieldType": "uint8",
          "example": 1
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "example": 1
        }
      }
    },
    "session": {
      "fields": {
        "0": {
          "fieldName": "event",
          "fieldType": "event",
          "comment": "session",
          "example": 1
        },
        "1": {
          "fieldName": "event_type",
          "fieldType": "event_type",
          "comment": "stop",
          "example": 1
        },
        "2": {
          "fieldName": "start_time",
          "fieldType": "date_time",
          "example": 1
        },
        "3": {
          "fieldName": "start_position_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "4": {
          "fieldName": "start_position_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "5": {
          "fieldName": "sport",
          "fieldType": "sport",
          "example": 1
        },
        "6": {
          "fieldName": "sub_sport",
          "fieldType": "sub_sport",
          "example": 1
        },
        "7": {
          "fieldName": "total_elapsed_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "comment": "Time (includes pauses)",
          "example": 1
        },
        "8": {
          "fieldName": "total_timer_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "comment": "Timer Time (excludes pauses)",
          "example": 1
        },
        "9": {
          "fieldName": "total_distance",
          "fieldType": "uint32",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "10": {
          "fieldName": "total_cycles",
          "fieldType": "uint32",
          "units": "cycles",
          "example": 1,
          "options": [
            {
              "fieldName": "total_strides",
              "fieldType": "uint32",
              "units": "strides",
              "refFieldName": "sport",
              "refFieldValue": "running",
              "example": 1
            },
            {
              "fieldName": "total_strides",
              "fieldType": "uint32",
              "units": "strides",
              "refFieldName": "sport",
              "refFieldValue": "walking",
              "example": 1
            }
          ]
        },
        "11": {
          "fieldName": "total_calories",
          "fieldType": "uint16",
          "units": "kcal",
          "example": 1
        },
        "13": {
          "fieldName": "total_fat_calories",
          "fieldType": "uint16",
          "units": "kcal",
          "example": 1
        },
        "14": {
          "fieldName": "avg_speed",
          "fieldType": "uint16",
          "components": "enhanced_avg_speed",
          "scale": 1000,
          "units": "m/s",
          "bits": 16,
          "comment": "total_distance / total_timer_time",
          "example": 1
        },
        "15": {
          "fieldName": "max_speed",
          "fieldType": "uint16",
          "components": "enhanced_max_speed",
          "scale": 1000,
          "units": "m/s",
          "bits": 16,
          "example": 1
        },
        "16": {
          "fieldName": "avg_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "comment": "average heart rate (excludes pause time)",
          "example": 1
        },
        "17": {
          "fieldName": "max_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "18": {
          "fieldName": "avg_cadence",
          "fieldType": "uint8",
          "units": "rpm",
          "comment": "total_cycles / total_timer_time if non_zero_avg_cadence otherwise total_cycles / total_elapsed_time",
          "example": 1,
          "options": [
            {
              "fieldName": "avg_running_cadence",
              "fieldType": "uint8",
              "units": "strides/min",
              "refFieldName": "sport",
              "refFieldValue": "running",
              "example": 1
            }
          ]
        },
        "19": {
          "fieldName": "max_cadence",
          "fieldType": "uint8",
          "units": "rpm",
          "example": 1,
          "options": [
            {
              "fieldName": "max_running_cadence",
              "fieldType": "uint8",
              "units": "strides/min",
              "refFieldName": "sport",
              "refFieldValue": "running",
              "example": 1
            }
          ]
        },
        "20": {
          "fieldName": "avg_power",
          "fieldType": "uint16",
          "units": "watts",
          "comment": "total_power / total_timer_time if non_zero_avg_power otherwise total_power / total_elapsed_time",
          "example": 1
        },
        "21": {
          "fieldName": "max_power",
          "fieldType": "uint16",
          "units": "watts",
          "example": 1
        },
        "22": {
          "fieldName": "total_ascent",
          "fieldType": "uint16",
          "units": "m",
          "example": 1
        },
        "23": {
          "fieldName": "total_descent",
          "fieldType": "uint16",
          "units": "m",
          "example": 1
        },
        "24": {
          "fieldName": "total_training_effect",
          "fieldType": "uint8",
          "scale": 10,
          "example": 1
        },
        "25": {
          "fieldName": "first_lap_index",
          "fieldType": "uint16",
          "example": 1
        },
        "26": {
          "fieldName": "num_laps",
          "fieldType": "uint16",
          "example": 1
        },
        "27": {
          "fieldName": "event_group",
          "fieldType": "uint8",
          "example": 1
        },
        "28": {
          "fieldName": "trigger",
          "fieldType": "session_trigger",
          "example": 1
        },
        "29": {
          "fieldName": "nec_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "30": {
          "fieldName": "nec_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "31": {
          "fieldName": "swc_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "32": {
          "fieldName": "swc_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "34": {
          "fieldName": "normalized_power",
          "fieldType": "uint16",
          "units": "watts",
          "example": 1
        },
        "35": {
          "fieldName": "training_stress_score",
          "fieldType": "uint16",
          "scale": 10,
          "units": "tss",
          "example": 1
        },
        "36": {
          "fieldName": "intensity_factor",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "if",
          "example": 1
        },
        "37": {
          "fieldName": "left_right_balance",
          "fieldType": "left_right_balance_100",
          "example": 1
        },
        "41": {
          "fieldName": "avg_stroke_count",
          "fieldType": "uint32",
          "scale": 10,
          "units": "strokes/lap",
          "example": 1
        },
        "42": {
          "fieldName": "avg_stroke_distance",
          "fieldType": "uint16",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "43": {
          "fieldName": "swim_stroke",
          "fieldType": "swim_stroke",
          "units": "swim_stroke",
          "example": 1
        },
        "44": {
          "fieldName": "pool_length",
          "fieldType": "uint16",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "45": {
          "fieldName": "threshold_power",
          "fieldType": "uint16",
          "units": "watts",
          "example": 1
        },
        "46": {
          "fieldName": "pool_length_unit",
          "fieldType": "display_measure",
          "example": 1
        },
        "47": {
          "fieldName": "num_active_lengths",
          "fieldType": "uint16",
          "units": "lengths",
          "comment": "# of active lengths of swim pool",
          "example": 1
        },
        "48": {
          "fieldName": "total_work",
          "fieldType": "uint32",
          "units": "J",
          "example": 1
        },
        "49": {
          "fieldName": "avg_altitude",
          "fieldType": "uint16",
          "components": "enhanced_avg_altitude",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "bits": 16,
          "example": 1
        },
        "50": {
          "fieldName": "max_altitude",
          "fieldType": "uint16",
          "components": "enhanced_max_altitude",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "bits": 16,
          "example": 1
        },
        "51": {
          "fieldName": "gps_accuracy",
          "fieldType": "uint8",
          "units": "m",
          "example": 1
        },
        "52": {
          "fieldName": "avg_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "53": {
          "fieldName": "avg_pos_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "54": {
          "fieldName": "avg_neg_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "55": {
          "fieldName": "max_pos_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "56": {
          "fieldName": "max_neg_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "57": {
          "fieldName": "avg_temperature",
          "fieldType": "sint8",
          "units": "C",
          "example": 1
        },
        "58": {
          "fieldName": "max_temperature",
          "fieldType": "sint8",
          "units": "C",
          "example": 1
        },
        "59": {
          "fieldName": "total_moving_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "60": {
          "fieldName": "avg_pos_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "61": {
          "fieldName": "avg_neg_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "62": {
          "fieldName": "max_pos_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "63": {
          "fieldName": "max_neg_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "64": {
          "fieldName": "min_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "65": {
          "fieldName": "time_in_hr_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "66": {
          "fieldName": "time_in_speed_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "67": {
          "fieldName": "time_in_cadence_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "68": {
          "fieldName": "time_in_power_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "69": {
          "fieldName": "avg_lap_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "70": {
          "fieldName": "best_lap_index",
          "fieldType": "uint16",
          "example": 1
        },
        "71": {
          "fieldName": "min_altitude",
          "fieldType": "uint16",
          "components": "enhanced_min_altitude",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "bits": 16,
          "example": 1
        },
        "82": {
          "fieldName": "player_score",
          "fieldType": "uint16",
          "example": 1
        },
        "83": {
          "fieldName": "opponent_score",
          "fieldType": "uint16",
          "example": 1
        },
        "84": {
          "fieldName": "opponent_name",
          "fieldType": "string",
          "example": 1
        },
        "85": {
          "fieldName": "stroke_count",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "stroke_type enum used as the index",
          "example": 1
        },
        "86": {
          "fieldName": "zone_count",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "zone number used as the index",
          "example": 1
        },
        "87": {
          "fieldName": "max_ball_speed",
          "fieldType": "uint16",
          "scale": 100,
          "units": "m/s",
          "example": 1
        },
        "88": {
          "fieldName": "avg_ball_speed",
          "fieldType": "uint16",
          "scale": 100,
          "units": "m/s",
          "example": 1
        },
        "89": {
          "fieldName": "avg_vertical_oscillation",
          "fieldType": "uint16",
          "scale": 10,
          "units": "mm",
          "example": 1
        },
        "90": {
          "fieldName": "avg_stance_time_percent",
          "fieldType": "uint16",
          "scale": 100,
          "units": "percent",
          "example": 1
        },
        "91": {
          "fieldName": "avg_stance_time",
          "fieldType": "uint16",
          "scale": 10,
          "units": "ms",
          "example": 1
        },
        "92": {
          "fieldName": "avg_fractional_cadence",
          "fieldType": "uint8",
          "scale": 128,
          "units": "rpm",
          "comment": "fractional part of the avg_cadence",
          "example": 1
        },
        "93": {
          "fieldName": "max_fractional_cadence",
          "fieldType": "uint8",
          "scale": 128,
          "units": "rpm",
          "comment": "fractional part of the max_cadence",
          "example": 1
        },
        "94": {
          "fieldName": "total_fractional_cycles",
          "fieldType": "uint8",
          "scale": 128,
          "units": "cycles",
          "comment": "fractional part of the total_cycles",
          "example": 1
        },
        "95": {
          "fieldName": "avg_total_hemoglobin_conc",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 100,
          "units": "g/dL",
          "comment": "Avg saturated and unsaturated hemoglobin"
        },
        "96": {
          "fieldName": "min_total_hemoglobin_conc",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 100,
          "units": "g/dL",
          "comment": "Min saturated and unsaturated hemoglobin"
        },
        "97": {
          "fieldName": "max_total_hemoglobin_conc",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 100,
          "units": "g/dL",
          "comment": "Max saturated and unsaturated hemoglobin"
        },
        "98": {
          "fieldName": "avg_saturated_hemoglobin_percent",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 10,
          "units": "%",
          "comment": "Avg percentage of hemoglobin saturated with oxygen"
        },
        "99": {
          "fieldName": "min_saturated_hemoglobin_percent",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 10,
          "units": "%",
          "comment": "Min percentage of hemoglobin saturated with oxygen"
        },
        "100": {
          "fieldName": "max_saturated_hemoglobin_percent",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 10,
          "units": "%",
          "comment": "Max percentage of hemoglobin saturated with oxygen"
        },
        "101": {
          "fieldName": "avg_left_torque_effectiveness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent"
        },
        "102": {
          "fieldName": "avg_right_torque_effectiveness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent"
        },
        "103": {
          "fieldName": "avg_left_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent"
        },
        "104": {
          "fieldName": "avg_right_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent"
        },
        "105": {
          "fieldName": "avg_combined_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent"
        },
        "111": {
          "fieldName": "sport_index",
          "fieldType": "uint8",
          "example": 1
        },
        "112": {
          "fieldName": "time_standing",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "comment": "Total time spend in the standing position"
        },
        "113": {
          "fieldName": "stand_count",
          "fieldType": "uint16",
          "comment": "Number of transitions to the standing state"
        },
        "114": {
          "fieldName": "avg_left_pco",
          "fieldType": "sint8",
          "units": "mm",
          "comment": "Average platform center offset Left"
        },
        "115": {
          "fieldName": "avg_right_pco",
          "fieldType": "sint8",
          "units": "mm",
          "comment": "Average platform center offset Right"
        },
        "116": {
          "fieldName": "avg_left_power_phase",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average left power phase angles. Indexes defined by power_phase_type."
        },
        "117": {
          "fieldName": "avg_left_power_phase_peak",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average left power phase peak angles. Data value indexes defined by power_phase_type."
        },
        "118": {
          "fieldName": "avg_right_power_phase",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average right power phase angles. Data value indexes defined by power_phase_type."
        },
        "119": {
          "fieldName": "avg_right_power_phase_peak",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average right power phase peak angles data value indexes  defined by power_phase_type."
        },
        "120": {
          "fieldName": "avg_power_position",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "watts",
          "comment": "Average power by position. Data value indexes defined by rider_position_type."
        },
        "121": {
          "fieldName": "max_power_position",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "watts",
          "comment": "Maximum power by position. Data value indexes defined by rider_position_type."
        },
        "122": {
          "fieldName": "avg_cadence_position",
          "fieldType": "uint8",
          "array": "[N]",
          "units": "rpm",
          "comment": "Average cadence by position. Data value indexes defined by rider_position_type."
        },
        "123": {
          "fieldName": "max_cadence_position",
          "fieldType": "uint8",
          "array": "[N]",
          "units": "rpm",
          "comment": "Maximum cadence by position. Data value indexes defined by rider_position_type."
        },
        "124": {
          "fieldName": "enhanced_avg_speed",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m/s",
          "comment": "total_distance / total_timer_time",
          "example": 1
        },
        "125": {
          "fieldName": "enhanced_max_speed",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "126": {
          "fieldName": "enhanced_avg_altitude",
          "fieldType": "uint32",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "example": 1
        },
        "127": {
          "fieldName": "enhanced_min_altitude",
          "fieldType": "uint32",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "example": 1
        },
        "128": {
          "fieldName": "enhanced_max_altitude",
          "fieldType": "uint32",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "example": 1
        },
        "129": {
          "fieldName": "avg_lev_motor_power",
          "fieldType": "uint16",
          "units": "watts",
          "comment": "lev average motor power during session"
        },
        "130": {
          "fieldName": "max_lev_motor_power",
          "fieldType": "uint16",
          "units": "watts",
          "comment": "lev maximum motor power during session"
        },
        "131": {
          "fieldName": "lev_battery_consumption",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "comment": "lev battery consumption during session"
        },
        "132": {
          "fieldName": "avg_vertical_ratio",
          "fieldType": "uint16",
          "scale": 100,
          "units": "percent"
        },
        "133": {
          "fieldName": "avg_stance_time_balance",
          "fieldType": "uint16",
          "scale": 100,
          "units": "percent"
        },
        "134": {
          "fieldName": "avg_step_length",
          "fieldType": "uint16",
          "scale": 10,
          "units": "mm"
        },
        "137": {
          "fieldName": "total_anaerobic_training_effect",
          "fieldType": "uint8",
          "scale": 10,
          "example": 1
        },
        "139": {
          "fieldName": "avg_vam",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "m/s",
          "bits": 16,
          "example": 1
        },
        "181": {
          "fieldName": "total_grit",
          "fieldType": "float32",
          "units": "kGrit",
          "comment": "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes."
        },
        "182": {
          "fieldName": "total_flow",
          "fieldType": "float32",
          "units": "Flow",
          "comment": "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals."
        },
        "183": {
          "fieldName": "jump_count",
          "fieldType": "uint16"
        },
        "186": {
          "fieldName": "avg_grit",
          "fieldType": "float32",
          "units": "kGrit",
          "comment": "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes."
        },
        "187": {
          "fieldName": "avg_flow",
          "fieldType": "float32",
          "units": "Flow",
          "comment": "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals."
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Sesson end time.",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "comment": "Selected bit is set for the current session.",
          "example": 1
        }
      }
    },
    "lap": {
      "fields": {
        "0": {
          "fieldName": "event",
          "fieldType": "event",
          "example": 1
        },
        "1": {
          "fieldName": "event_type",
          "fieldType": "event_type",
          "example": 1
        },
        "2": {
          "fieldName": "start_time",
          "fieldType": "date_time",
          "example": 1
        },
        "3": {
          "fieldName": "start_position_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "4": {
          "fieldName": "start_position_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "5": {
          "fieldName": "end_position_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "6": {
          "fieldName": "end_position_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "7": {
          "fieldName": "total_elapsed_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "comment": "Time (includes pauses)",
          "example": 1
        },
        "8": {
          "fieldName": "total_timer_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "comment": "Timer Time (excludes pauses)",
          "example": 1
        },
        "9": {
          "fieldName": "total_distance",
          "fieldType": "uint32",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "10": {
          "fieldName": "total_cycles",
          "fieldType": "uint32",
          "units": "cycles",
          "example": 1,
          "options": [
            {
              "fieldName": "total_strides",
              "fieldType": "uint32",
              "units": "strides",
              "refFieldName": "sport",
              "refFieldValue": "running",
              "example": 1
            },
            {
              "fieldName": "total_strides",
              "fieldType": "uint32",
              "units": "strides",
              "refFieldName": "sport",
              "refFieldValue": "walking",
              "example": 1
            }
          ]
        },
        "11": {
          "fieldName": "total_calories",
          "fieldType": "uint16",
          "units": "kcal",
          "example": 1
        },
        "12": {
          "fieldName": "total_fat_calories",
          "fieldType": "uint16",
          "units": "kcal",
          "comment": "If New Leaf",
          "example": 1
        },
        "13": {
          "fieldName": "avg_speed",
          "fieldType": "uint16",
          "components": "enhanced_avg_speed",
          "scale": 1000,
          "units": "m/s",
          "bits": 16,
          "example": 1
        },
        "14": {
          "fieldName": "max_speed",
          "fieldType": "uint16",
          "components": "enhanced_max_speed",
          "scale": 1000,
          "units": "m/s",
          "bits": 16,
          "example": 1
        },
        "15": {
          "fieldName": "avg_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "16": {
          "fieldName": "max_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "17": {
          "fieldName": "avg_cadence",
          "fieldType": "uint8",
          "units": "rpm",
          "comment": "total_cycles / total_timer_time if non_zero_avg_cadence otherwise total_cycles / total_elapsed_time",
          "example": 1,
          "options": [
            {
              "fieldName": "avg_running_cadence",
              "fieldType": "uint8",
              "units": "strides/min",
              "refFieldName": "sport",
              "refFieldValue": "running",
              "example": 1
            }
          ]
        },
        "18": {
          "fieldName": "max_cadence",
          "fieldType": "uint8",
          "units": "rpm",
          "example": 1,
          "options": [
            {
              "fieldName": "max_running_cadence",
              "fieldType": "uint8",
              "units": "strides/min",
              "refFieldName": "sport",
              "refFieldValue": "running",
              "example": 1
            }
          ]
        },
        "19": {
          "fieldName": "avg_power",
          "fieldType": "uint16",
          "units": "watts",
          "comment": "total_power / total_timer_time if non_zero_avg_power otherwise total_power / total_elapsed_time",
          "example": 1
        },
        "20": {
          "fieldName": "max_power",
          "fieldType": "uint16",
          "units": "watts",
          "example": 1
        },
        "21": {
          "fieldName": "total_ascent",
          "fieldType": "uint16",
          "units": "m",
          "example": 1
        },
        "22": {
          "fieldName": "total_descent",
          "fieldType": "uint16",
          "units": "m",
          "example": 1
        },
        "23": {
          "fieldName": "intensity",
          "fieldType": "intensity",
          "example": 1
        },
        "24": {
          "fieldName": "lap_trigger",
          "fieldType": "lap_trigger",
          "example": 1
        },
        "25": {
          "fieldName": "sport",
          "fieldType": "sport",
          "example": 1
        },
        "26": {
          "fieldName": "event_group",
          "fieldType": "uint8",
          "example": 1
        },
        "32": {
          "fieldName": "num_lengths",
          "fieldType": "uint16",
          "units": "lengths",
          "comment": "# of lengths of swim pool",
          "example": 1
        },
        "33": {
          "fieldName": "normalized_power",
          "fieldType": "uint16",
          "units": "watts",
          "example": 1
        },
        "34": {
          "fieldName": "left_right_balance",
          "fieldType": "left_right_balance_100",
          "example": 1
        },
        "35": {
          "fieldName": "first_length_index",
          "fieldType": "uint16",
          "example": 1
        },
        "37": {
          "fieldName": "avg_stroke_distance",
          "fieldType": "uint16",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "38": {
          "fieldName": "swim_stroke",
          "fieldType": "swim_stroke",
          "example": 1
        },
        "39": {
          "fieldName": "sub_sport",
          "fieldType": "sub_sport",
          "example": 1
        },
        "40": {
          "fieldName": "num_active_lengths",
          "fieldType": "uint16",
          "units": "lengths",
          "comment": "# of active lengths of swim pool",
          "example": 1
        },
        "41": {
          "fieldName": "total_work",
          "fieldType": "uint32",
          "units": "J",
          "example": 1
        },
        "42": {
          "fieldName": "avg_altitude",
          "fieldType": "uint16",
          "components": "enhanced_avg_altitude",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "bits": 16,
          "example": 1
        },
        "43": {
          "fieldName": "max_altitude",
          "fieldType": "uint16",
          "components": "enhanced_max_altitude",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "bits": 16,
          "example": 1
        },
        "44": {
          "fieldName": "gps_accuracy",
          "fieldType": "uint8",
          "units": "m",
          "example": 1
        },
        "45": {
          "fieldName": "avg_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "46": {
          "fieldName": "avg_pos_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "47": {
          "fieldName": "avg_neg_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "48": {
          "fieldName": "max_pos_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "49": {
          "fieldName": "max_neg_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "50": {
          "fieldName": "avg_temperature",
          "fieldType": "sint8",
          "units": "C",
          "example": 1
        },
        "51": {
          "fieldName": "max_temperature",
          "fieldType": "sint8",
          "units": "C",
          "example": 1
        },
        "52": {
          "fieldName": "total_moving_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "53": {
          "fieldName": "avg_pos_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "54": {
          "fieldName": "avg_neg_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "55": {
          "fieldName": "max_pos_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "56": {
          "fieldName": "max_neg_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "57": {
          "fieldName": "time_in_hr_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "58": {
          "fieldName": "time_in_speed_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "59": {
          "fieldName": "time_in_cadence_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "60": {
          "fieldName": "time_in_power_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "61": {
          "fieldName": "repetition_num",
          "fieldType": "uint16",
          "example": 1
        },
        "62": {
          "fieldName": "min_altitude",
          "fieldType": "uint16",
          "components": "enhanced_min_altitude",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "bits": 16,
          "example": 1
        },
        "63": {
          "fieldName": "min_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "71": {
          "fieldName": "wkt_step_index",
          "fieldType": "message_index",
          "example": 1
        },
        "74": {
          "fieldName": "opponent_score",
          "fieldType": "uint16",
          "example": 1
        },
        "75": {
          "fieldName": "stroke_count",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "stroke_type enum used as the index",
          "example": 1
        },
        "76": {
          "fieldName": "zone_count",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "zone number used as the index",
          "example": 1
        },
        "77": {
          "fieldName": "avg_vertical_oscillation",
          "fieldType": "uint16",
          "scale": 10,
          "units": "mm",
          "example": 1
        },
        "78": {
          "fieldName": "avg_stance_time_percent",
          "fieldType": "uint16",
          "scale": 100,
          "units": "percent",
          "example": 1
        },
        "79": {
          "fieldName": "avg_stance_time",
          "fieldType": "uint16",
          "scale": 10,
          "units": "ms",
          "example": 1
        },
        "80": {
          "fieldName": "avg_fractional_cadence",
          "fieldType": "uint8",
          "scale": 128,
          "units": "rpm",
          "comment": "fractional part of the avg_cadence",
          "example": 1
        },
        "81": {
          "fieldName": "max_fractional_cadence",
          "fieldType": "uint8",
          "scale": 128,
          "units": "rpm",
          "comment": "fractional part of the max_cadence",
          "example": 1
        },
        "82": {
          "fieldName": "total_fractional_cycles",
          "fieldType": "uint8",
          "scale": 128,
          "units": "cycles",
          "comment": "fractional part of the total_cycles",
          "example": 1
        },
        "83": {
          "fieldName": "player_score",
          "fieldType": "uint16",
          "example": 1
        },
        "84": {
          "fieldName": "avg_total_hemoglobin_conc",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 100,
          "units": "g/dL",
          "comment": "Avg saturated and unsaturated hemoglobin",
          "example": 1
        },
        "85": {
          "fieldName": "min_total_hemoglobin_conc",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 100,
          "units": "g/dL",
          "comment": "Min saturated and unsaturated hemoglobin",
          "example": 1
        },
        "86": {
          "fieldName": "max_total_hemoglobin_conc",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 100,
          "units": "g/dL",
          "comment": "Max saturated and unsaturated hemoglobin",
          "example": 1
        },
        "87": {
          "fieldName": "avg_saturated_hemoglobin_percent",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 10,
          "units": "%",
          "comment": "Avg percentage of hemoglobin saturated with oxygen",
          "example": 1
        },
        "88": {
          "fieldName": "min_saturated_hemoglobin_percent",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 10,
          "units": "%",
          "comment": "Min percentage of hemoglobin saturated with oxygen",
          "example": 1
        },
        "89": {
          "fieldName": "max_saturated_hemoglobin_percent",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 10,
          "units": "%",
          "comment": "Max percentage of hemoglobin saturated with oxygen",
          "example": 1
        },
        "91": {
          "fieldName": "avg_left_torque_effectiveness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent"
        },
        "92": {
          "fieldName": "avg_right_torque_effectiveness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent"
        },
        "93": {
          "fieldName": "avg_left_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent"
        },
        "94": {
          "fieldName": "avg_right_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent"
        },
        "95": {
          "fieldName": "avg_combined_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent"
        },
        "98": {
          "fieldName": "time_standing",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "comment": "Total time spent in the standing position"
        },
        "99": {
          "fieldName": "stand_count",
          "fieldType": "uint16",
          "comment": "Number of transitions to the standing state"
        },
        "100": {
          "fieldName": "avg_left_pco",
          "fieldType": "sint8",
          "units": "mm",
          "comment": "Average left platform center offset"
        },
        "101": {
          "fieldName": "avg_right_pco",
          "fieldType": "sint8",
          "units": "mm",
          "comment": "Average right platform center offset"
        },
        "102": {
          "fieldName": "avg_left_power_phase",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average left power phase angles. Data value indexes defined by power_phase_type."
        },
        "103": {
          "fieldName": "avg_left_power_phase_peak",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average left power phase peak angles. Data value indexes  defined by power_phase_type."
        },
        "104": {
          "fieldName": "avg_right_power_phase",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average right power phase angles. Data value indexes defined by power_phase_type."
        },
        "105": {
          "fieldName": "avg_right_power_phase_peak",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average right power phase peak angles. Data value indexes  defined by power_phase_type."
        },
        "106": {
          "fieldName": "avg_power_position",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "watts",
          "comment": "Average power by position. Data value indexes defined by rider_position_type."
        },
        "107": {
          "fieldName": "max_power_position",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "watts",
          "comment": "Maximum power by position. Data value indexes defined by rider_position_type."
        },
        "108": {
          "fieldName": "avg_cadence_position",
          "fieldType": "uint8",
          "array": "[N]",
          "units": "rpm",
          "comment": "Average cadence by position. Data value indexes defined by rider_position_type."
        },
        "109": {
          "fieldName": "max_cadence_position",
          "fieldType": "uint8",
          "array": "[N]",
          "units": "rpm",
          "comment": "Maximum cadence by position. Data value indexes defined by rider_position_type."
        },
        "110": {
          "fieldName": "enhanced_avg_speed",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "111": {
          "fieldName": "enhanced_max_speed",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "112": {
          "fieldName": "enhanced_avg_altitude",
          "fieldType": "uint32",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "example": 1
        },
        "113": {
          "fieldName": "enhanced_min_altitude",
          "fieldType": "uint32",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "example": 1
        },
        "114": {
          "fieldName": "enhanced_max_altitude",
          "fieldType": "uint32",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "example": 1
        },
        "115": {
          "fieldName": "avg_lev_motor_power",
          "fieldType": "uint16",
          "units": "watts",
          "comment": "lev average motor power during lap"
        },
        "116": {
          "fieldName": "max_lev_motor_power",
          "fieldType": "uint16",
          "units": "watts",
          "comment": "lev maximum motor power during lap"
        },
        "117": {
          "fieldName": "lev_battery_consumption",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "comment": "lev battery consumption during lap"
        },
        "118": {
          "fieldName": "avg_vertical_ratio",
          "fieldType": "uint16",
          "scale": 100,
          "units": "percent"
        },
        "119": {
          "fieldName": "avg_stance_time_balance",
          "fieldType": "uint16",
          "scale": 100,
          "units": "percent"
        },
        "120": {
          "fieldName": "avg_step_length",
          "fieldType": "uint16",
          "scale": 10,
          "units": "mm"
        },
        "121": {
          "fieldName": "avg_vam",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "m/s",
          "bits": 16,
          "example": 1
        },
        "149": {
          "fieldName": "total_grit",
          "fieldType": "float32",
          "units": "kGrit",
          "comment": "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes."
        },
        "150": {
          "fieldName": "total_flow",
          "fieldType": "float32",
          "units": "Flow",
          "comment": "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals."
        },
        "151": {
          "fieldName": "jump_count",
          "fieldType": "uint16"
        },
        "153": {
          "fieldName": "avg_grit",
          "fieldType": "float32",
          "units": "kGrit",
          "comment": "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes."
        },
        "154": {
          "fieldName": "avg_flow",
          "fieldType": "float32",
          "units": "Flow",
          "comment": "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals."
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Lap end time.",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "length": {
      "fields": {
        "0": {
          "fieldName": "event",
          "fieldType": "event",
          "example": 1
        },
        "1": {
          "fieldName": "event_type",
          "fieldType": "event_type",
          "example": 1
        },
        "2": {
          "fieldName": "start_time",
          "fieldType": "date_time",
          "example": 1
        },
        "3": {
          "fieldName": "total_elapsed_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "4": {
          "fieldName": "total_timer_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "5": {
          "fieldName": "total_strokes",
          "fieldType": "uint16",
          "units": "strokes",
          "example": 1
        },
        "6": {
          "fieldName": "avg_speed",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "7": {
          "fieldName": "swim_stroke",
          "fieldType": "swim_stroke",
          "units": "swim_stroke",
          "example": 1
        },
        "9": {
          "fieldName": "avg_swimming_cadence",
          "fieldType": "uint8",
          "units": "strokes/min",
          "example": 1
        },
        "10": {
          "fieldName": "event_group",
          "fieldType": "uint8",
          "example": 1
        },
        "11": {
          "fieldName": "total_calories",
          "fieldType": "uint16",
          "units": "kcal",
          "example": 1
        },
        "12": {
          "fieldName": "length_type",
          "fieldType": "length_type",
          "example": 1
        },
        "18": {
          "fieldName": "player_score",
          "fieldType": "uint16",
          "example": 1
        },
        "19": {
          "fieldName": "opponent_score",
          "fieldType": "uint16",
          "example": 1
        },
        "20": {
          "fieldName": "stroke_count",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "stroke_type enum used as the index",
          "example": 1
        },
        "21": {
          "fieldName": "zone_count",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "zone number used as the index",
          "example": 1
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "record": {
      "fields": {
        "0": {
          "fieldName": "position_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "1": {
          "fieldName": "position_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "2": {
          "fieldName": "altitude",
          "fieldType": "uint16",
          "components": "enhanced_altitude",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "bits": 16,
          "example": 1
        },
        "3": {
          "fieldName": "heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "4": {
          "fieldName": "cadence",
          "fieldType": "uint8",
          "units": "rpm",
          "example": 1
        },
        "5": {
          "fieldName": "distance",
          "fieldType": "uint32",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "6": {
          "fieldName": "speed",
          "fieldType": "uint16",
          "components": "enhanced_speed",
          "scale": 1000,
          "units": "m/s",
          "bits": 16,
          "example": 1
        },
        "7": {
          "fieldName": "power",
          "fieldType": "uint16",
          "units": "watts",
          "example": 1
        },
        "8": {
          "fieldName": "compressed_speed_distance",
          "fieldType": "byte",
          "array": "[3]",
          "components": "speed,\r\ndistance",
          "scale": "100,\r\n16",
          "units": "m/s,\r\nm",
          "bits": "12,\r\n12",
          "accumulate": "0,\r\n1",
          "example": 1
        },
        "9": {
          "fieldName": "grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "10": {
          "fieldName": "resistance",
          "fieldType": "uint8",
          "comment": "Relative. 0 is none  254 is Max.",
          "example": 1
        },
        "11": {
          "fieldName": "time_from_course",
          "fieldType": "sint32",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "12": {
          "fieldName": "cycle_length",
          "fieldType": "uint8",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "13": {
          "fieldName": "temperature",
          "fieldType": "sint8",
          "units": "C",
          "example": 1
        },
        "17": {
          "fieldName": "speed_1s",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 16,
          "units": "m/s",
          "comment": "Speed at 1s intervals.  Timestamp field indicates time of last array element.",
          "example": 5
        },
        "18": {
          "fieldName": "cycles",
          "fieldType": "uint8",
          "components": "total_cycles",
          "units": "cycles",
          "bits": 8,
          "accumulate": 1,
          "example": 1
        },
        "19": {
          "fieldName": "total_cycles",
          "fieldType": "uint32",
          "units": "cycles",
          "example": 1
        },
        "28": {
          "fieldName": "compressed_accumulated_power",
          "fieldType": "uint16",
          "components": "accumulated_power",
          "units": "watts",
          "bits": 16,
          "accumulate": 1,
          "example": 1
        },
        "29": {
          "fieldName": "accumulated_power",
          "fieldType": "uint32",
          "units": "watts",
          "example": 1
        },
        "30": {
          "fieldName": "left_right_balance",
          "fieldType": "left_right_balance",
          "example": 1
        },
        "31": {
          "fieldName": "gps_accuracy",
          "fieldType": "uint8",
          "units": "m",
          "example": 1
        },
        "32": {
          "fieldName": "vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "33": {
          "fieldName": "calories",
          "fieldType": "uint16",
          "units": "kcal",
          "example": 1
        },
        "39": {
          "fieldName": "vertical_oscillation",
          "fieldType": "uint16",
          "scale": 10,
          "units": "mm",
          "example": 1
        },
        "40": {
          "fieldName": "stance_time_percent",
          "fieldType": "uint16",
          "scale": 100,
          "units": "percent",
          "example": 1
        },
        "41": {
          "fieldName": "stance_time",
          "fieldType": "uint16",
          "scale": 10,
          "units": "ms",
          "example": 1
        },
        "42": {
          "fieldName": "activity_type",
          "fieldType": "activity_type",
          "example": 1
        },
        "43": {
          "fieldName": "left_torque_effectiveness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "example": 1
        },
        "44": {
          "fieldName": "right_torque_effectiveness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "example": 1
        },
        "45": {
          "fieldName": "left_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "example": 1
        },
        "46": {
          "fieldName": "right_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "example": 1
        },
        "47": {
          "fieldName": "combined_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "example": 1
        },
        "48": {
          "fieldName": "time128",
          "fieldType": "uint8",
          "scale": 128,
          "units": "s",
          "example": 1
        },
        "49": {
          "fieldName": "stroke_type",
          "fieldType": "stroke_type",
          "example": 1
        },
        "50": {
          "fieldName": "zone",
          "fieldType": "uint8",
          "example": 1
        },
        "51": {
          "fieldName": "ball_speed",
          "fieldType": "uint16",
          "scale": 100,
          "units": "m/s",
          "example": 1
        },
        "52": {
          "fieldName": "cadence256",
          "fieldType": "uint16",
          "scale": 256,
          "units": "rpm",
          "comment": "Log cadence and fractional cadence for backwards compatability",
          "example": 1
        },
        "53": {
          "fieldName": "fractional_cadence",
          "fieldType": "uint8",
          "scale": 128,
          "units": "rpm",
          "example": 1
        },
        "54": {
          "fieldName": "total_hemoglobin_conc",
          "fieldType": "uint16",
          "scale": 100,
          "units": "g/dL",
          "comment": "Total saturated and unsaturated hemoglobin",
          "example": 1
        },
        "55": {
          "fieldName": "total_hemoglobin_conc_min",
          "fieldType": "uint16",
          "scale": 100,
          "units": "g/dL",
          "comment": "Min saturated and unsaturated hemoglobin",
          "example": 1
        },
        "56": {
          "fieldName": "total_hemoglobin_conc_max",
          "fieldType": "uint16",
          "scale": 100,
          "units": "g/dL",
          "comment": "Max saturated and unsaturated hemoglobin",
          "example": 1
        },
        "57": {
          "fieldName": "saturated_hemoglobin_percent",
          "fieldType": "uint16",
          "scale": 10,
          "units": "%",
          "comment": "Percentage of hemoglobin saturated with oxygen",
          "example": 1
        },
        "58": {
          "fieldName": "saturated_hemoglobin_percent_min",
          "fieldType": "uint16",
          "scale": 10,
          "units": "%",
          "comment": "Min percentage of hemoglobin saturated with oxygen",
          "example": 1
        },
        "59": {
          "fieldName": "saturated_hemoglobin_percent_max",
          "fieldType": "uint16",
          "scale": 10,
          "units": "%",
          "comment": "Max percentage of hemoglobin saturated with oxygen",
          "example": 1
        },
        "62": {
          "fieldName": "device_index",
          "fieldType": "device_index",
          "example": 1
        },
        "67": {
          "fieldName": "left_pco",
          "fieldType": "sint8",
          "units": "mm",
          "comment": "Left platform center offset"
        },
        "68": {
          "fieldName": "right_pco",
          "fieldType": "sint8",
          "units": "mm",
          "comment": "Right platform center offset"
        },
        "69": {
          "fieldName": "left_power_phase",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Left power phase angles. Data value indexes defined by power_phase_type."
        },
        "70": {
          "fieldName": "left_power_phase_peak",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Left power phase peak angles. Data value indexes defined by power_phase_type."
        },
        "71": {
          "fieldName": "right_power_phase",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Right power phase angles. Data value indexes defined by power_phase_type."
        },
        "72": {
          "fieldName": "right_power_phase_peak",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Right power phase peak angles. Data value indexes defined by power_phase_type."
        },
        "73": {
          "fieldName": "enhanced_speed",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "78": {
          "fieldName": "enhanced_altitude",
          "fieldType": "uint32",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "example": 1
        },
        "81": {
          "fieldName": "battery_soc",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "comment": "lev battery state of charge"
        },
        "82": {
          "fieldName": "motor_power",
          "fieldType": "uint16",
          "units": "watts",
          "comment": "lev motor power"
        },
        "83": {
          "fieldName": "vertical_ratio",
          "fieldType": "uint16",
          "scale": 100,
          "units": "percent"
        },
        "84": {
          "fieldName": "stance_time_balance",
          "fieldType": "uint16",
          "scale": 100,
          "units": "percent"
        },
        "85": {
          "fieldName": "step_length",
          "fieldType": "uint16",
          "scale": 10,
          "units": "mm"
        },
        "91": {
          "fieldName": "absolute_pressure",
          "fieldType": "uint32",
          "units": "Pa",
          "comment": "Includes atmospheric pressure"
        },
        "92": {
          "fieldName": "depth",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m",
          "comment": "0 if above water"
        },
        "93": {
          "fieldName": "next_stop_depth",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m",
          "comment": "0 if above water"
        },
        "94": {
          "fieldName": "next_stop_time",
          "fieldType": "uint32",
          "scale": 1,
          "units": "s"
        },
        "95": {
          "fieldName": "time_to_surface",
          "fieldType": "uint32",
          "scale": 1,
          "units": "s"
        },
        "96": {
          "fieldName": "ndl_time",
          "fieldType": "uint32",
          "scale": 1,
          "units": "s"
        },
        "97": {
          "fieldName": "cns_load",
          "fieldType": "uint8",
          "units": "percent"
        },
        "98": {
          "fieldName": "n2_load",
          "fieldType": "uint16",
          "scale": 1,
          "units": "percent"
        },
        "114": {
          "fieldName": "grit",
          "fieldType": "float32",
          "comment": "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes."
        },
        "115": {
          "fieldName": "flow",
          "fieldType": "float32",
          "comment": "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals."
        },
        "117": {
          "fieldName": "ebike_travel_range",
          "fieldType": "uint16",
          "units": "km"
        },
        "118": {
          "fieldName": "ebike_battery_level",
          "fieldType": "uint8",
          "units": "percent"
        },
        "119": {
          "fieldName": "ebike_assist_mode",
          "fieldType": "uint8",
          "units": "depends on sensor"
        },
        "120": {
          "fieldName": "ebike_assist_level_percent",
          "fieldType": "uint8",
          "units": "percent"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "example": 1
        }
      }
    },
    "event": {
      "fields": {
        "0": {
          "fieldName": "event",
          "fieldType": "event",
          "example": 1
        },
        "1": {
          "fieldName": "event_type",
          "fieldType": "event_type",
          "example": 1
        },
        "2": {
          "fieldName": "data16",
          "fieldType": "uint16",
          "components": "data",
          "bits": 16,
          "example": 1
        },
        "3": {
          "fieldName": "data",
          "fieldType": "uint32",
          "example": 1,
          "options": [
            {
              "fieldName": "timer_trigger",
              "fieldType": "timer_trigger",
              "refFieldName": "event",
              "refFieldValue": "timer",
              "example": 1
            },
            {
              "fieldName": "course_point_index",
              "fieldType": "message_index",
              "refFieldName": "event",
              "refFieldValue": "course_point",
              "example": 1
            },
            {
              "fieldName": "battery_level",
              "fieldType": "uint16",
              "scale": 1000,
              "units": "V",
              "refFieldName": "event",
              "refFieldValue": "battery",
              "example": 1
            },
            {
              "fieldName": "virtual_partner_speed",
              "fieldType": "uint16",
              "scale": 1000,
              "units": "m/s",
              "refFieldName": "event",
              "refFieldValue": "virtual_partner_pace",
              "example": 1
            },
            {
              "fieldName": "hr_high_alert",
              "fieldType": "uint8",
              "units": "bpm",
              "refFieldName": "event",
              "refFieldValue": "hr_high_alert",
              "example": 1
            },
            {
              "fieldName": "hr_low_alert",
              "fieldType": "uint8",
              "units": "bpm",
              "refFieldName": "event",
              "refFieldValue": "hr_low_alert",
              "example": 1
            },
            {
              "fieldName": "speed_high_alert",
              "fieldType": "uint32",
              "scale": 1000,
              "units": "m/s",
              "refFieldName": "event",
              "refFieldValue": "speed_high_alert",
              "example": 1
            },
            {
              "fieldName": "speed_low_alert",
              "fieldType": "uint32",
              "scale": 1000,
              "units": "m/s",
              "refFieldName": "event",
              "refFieldValue": "speed_low_alert",
              "example": 1
            },
            {
              "fieldName": "cad_high_alert",
              "fieldType": "uint16",
              "units": "rpm",
              "refFieldName": "event",
              "refFieldValue": "cad_high_alert",
              "example": 1
            },
            {
              "fieldName": "cad_low_alert",
              "fieldType": "uint16",
              "units": "rpm",
              "refFieldName": "event",
              "refFieldValue": "cad_low_alert",
              "example": 1
            },
            {
              "fieldName": "power_high_alert",
              "fieldType": "uint16",
              "units": "watts",
              "refFieldName": "event",
              "refFieldValue": "power_high_alert",
              "example": 1
            },
            {
              "fieldName": "power_low_alert",
              "fieldType": "uint16",
              "units": "watts",
              "refFieldName": "event",
              "refFieldValue": "power_low_alert",
              "example": 1
            },
            {
              "fieldName": "time_duration_alert",
              "fieldType": "uint32",
              "scale": 1000,
              "units": "s",
              "refFieldName": "event",
              "refFieldValue": "time_duration_alert",
              "example": 1
            },
            {
              "fieldName": "distance_duration_alert",
              "fieldType": "uint32",
              "scale": 100,
              "units": "m",
              "refFieldName": "event",
              "refFieldValue": "distance_duration_alert",
              "example": 1
            },
            {
              "fieldName": "calorie_duration_alert",
              "fieldType": "uint32",
              "units": "calories",
              "refFieldName": "event",
              "refFieldValue": "calorie_duration_alert",
              "example": 1
            },
            {
              "fieldName": "fitness_equipment_state",
              "fieldType": "fitness_equipment_state",
              "refFieldName": "event",
              "refFieldValue": "fitness_equipment",
              "example": 1
            },
            {
              "fieldName": "sport_point",
              "fieldType": "uint32",
              "components": "score,opponent_score",
              "scale": "1,1",
              "bits": "16,16",
              "refFieldName": "event",
              "refFieldValue": "sport_point",
              "example": 1
            },
            {
              "fieldName": "gear_change_data",
              "fieldType": "uint32",
              "components": "rear_gear_num,\r\nrear_gear,\r\nfront_gear_num,\r\nfront_gear",
              "scale": "1,1,1,1",
              "bits": "8,\r\n8,\r\n8,\r\n8",
              "refFieldName": "event",
              "refFieldValue": "front_gear_change",
              "example": 1
            },
            {
              "fieldName": "gear_change_data",
              "fieldType": "uint32",
              "components": "rear_gear_num,\r\nrear_gear,\r\nfront_gear_num,\r\nfront_gear",
              "scale": "1,1,1,1",
              "bits": "8,\r\n8,\r\n8,\r\n8",
              "refFieldName": "event",
              "refFieldValue": "rear_gear_change",
              "example": 1
            },
            {
              "fieldName": "rider_position",
              "fieldType": "rider_position_type",
              "refFieldName": "event",
              "refFieldValue": "rider_position_change",
              "comment": "Indicates the rider position value."
            },
            {
              "fieldName": "comm_timeout",
              "fieldType": "comm_timeout_type",
              "refFieldName": "event",
              "refFieldValue": "comm_timeout"
            }
          ]
        },
        "4": {
          "fieldName": "event_group",
          "fieldType": "uint8",
          "example": 1
        },
        "7": {
          "fieldName": "score",
          "fieldType": "uint16",
          "comment": "Do not populate directly.  Autogenerated by decoder for sport_point subfield components",
          "example": 1
        },
        "8": {
          "fieldName": "opponent_score",
          "fieldType": "uint16",
          "comment": "Do not populate directly.  Autogenerated by decoder for sport_point subfield components",
          "example": 1
        },
        "9": {
          "fieldName": "front_gear_num",
          "fieldType": "uint8z",
          "comment": "Do not populate directly.  Autogenerated by decoder for gear_change subfield components.  Front gear number. 1 is innermost.",
          "example": 1
        },
        "10": {
          "fieldName": "front_gear",
          "fieldType": "uint8z",
          "comment": "Do not populate directly.  Autogenerated by decoder for gear_change subfield components.  Number of front teeth.",
          "example": 1
        },
        "11": {
          "fieldName": "rear_gear_num",
          "fieldType": "uint8z",
          "comment": "Do not populate directly.  Autogenerated by decoder for gear_change subfield components.  Rear gear number. 1 is innermost.",
          "example": 1
        },
        "12": {
          "fieldName": "rear_gear",
          "fieldType": "uint8z",
          "comment": "Do not populate directly.  Autogenerated by decoder for gear_change subfield components.  Number of rear teeth.",
          "example": 1
        },
        "13": {
          "fieldName": "device_index",
          "fieldType": "device_index"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "example": 1
        }
      }
    },
    "device_info": {
      "fields": {
        "0": {
          "fieldName": "device_index",
          "fieldType": "device_index",
          "example": 1
        },
        "1": {
          "fieldName": "device_type",
          "fieldType": "uint8",
          "example": 1,
          "options": [
            {
              "fieldName": "antplus_device_type",
              "fieldType": "antplus_device_type",
              "refFieldName": "source_type",
              "refFieldValue": "antplus",
              "example": 1
            },
            {
              "fieldName": "ant_device_type",
              "fieldType": "uint8",
              "refFieldName": "source_type",
              "refFieldValue": "ant",
              "example": 1
            }
          ]
        },
        "2": {
          "fieldName": "manufacturer",
          "fieldType": "manufacturer",
          "example": 1
        },
        "3": {
          "fieldName": "serial_number",
          "fieldType": "uint32z",
          "example": 1
        },
        "4": {
          "fieldName": "product",
          "fieldType": "uint16",
          "example": 1,
          "options": [
            {
              "fieldName": "favero_product",
              "fieldType": "favero_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "favero_electronics"
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "garmin",
              "example": 1
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "dynastream",
              "example": 1
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "dynastream_oem",
              "example": 1
            }
          ]
        },
        "5": {
          "fieldName": "software_version",
          "fieldType": "uint16",
          "scale": 100,
          "example": 1
        },
        "6": {
          "fieldName": "hardware_version",
          "fieldType": "uint8",
          "example": 1
        },
        "7": {
          "fieldName": "cum_operating_time",
          "fieldType": "uint32",
          "units": "s",
          "comment": "Reset by new battery or charge.",
          "example": 1
        },
        "10": {
          "fieldName": "battery_voltage",
          "fieldType": "uint16",
          "scale": 256,
          "units": "V",
          "example": 1
        },
        "11": {
          "fieldName": "battery_status",
          "fieldType": "battery_status",
          "example": 1
        },
        "18": {
          "fieldName": "sensor_position",
          "fieldType": "body_location",
          "comment": "Indicates the location of the sensor",
          "example": 1
        },
        "19": {
          "fieldName": "descriptor",
          "fieldType": "string",
          "comment": "Used to describe the sensor or location",
          "example": 1
        },
        "20": {
          "fieldName": "ant_transmission_type",
          "fieldType": "uint8z",
          "example": 1
        },
        "21": {
          "fieldName": "ant_device_number",
          "fieldType": "uint16z",
          "example": 1
        },
        "22": {
          "fieldName": "ant_network",
          "fieldType": "ant_network",
          "example": 1
        },
        "25": {
          "fieldName": "source_type",
          "fieldType": "source_type",
          "example": 1
        },
        "27": {
          "fieldName": "product_name",
          "fieldType": "string",
          "comment": "Optional free form string to indicate the devices name or model",
          "example": 20
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "example": 1
        }
      }
    },
    "training_file": {
      "comment": "Corresponds to file_id of workout or course.",
      "fields": {
        "0": {
          "fieldName": "type",
          "fieldType": "file",
          "example": 1
        },
        "1": {
          "fieldName": "manufacturer",
          "fieldType": "manufacturer",
          "example": 1
        },
        "2": {
          "fieldName": "product",
          "fieldType": "uint16",
          "example": 1,
          "options": [
            {
              "fieldName": "favero_product",
              "fieldType": "favero_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "favero_electronics"
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "garmin",
              "example": 1
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "dynastream",
              "example": 1
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "dynastream_oem",
              "example": 1
            }
          ]
        },
        "3": {
          "fieldName": "serial_number",
          "fieldType": "uint32z",
          "example": 1
        },
        "4": {
          "fieldName": "time_created",
          "fieldType": "date_time",
          "example": 1
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "example": 1
        }
      }
    },
    "hrv": {
      "comment": "Heart rate variability",
      "fields": {
        "0": {
          "fieldName": "time",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "comment": "Time between beats",
          "example": 1
        }
      }
    },
    "weather_conditions": {
      "fields": {
        "0": {
          "fieldName": "weather_report",
          "fieldType": "weather_report",
          "comment": "Current or forecast",
          "example": 1
        },
        "1": {
          "fieldName": "temperature",
          "fieldType": "sint8",
          "units": "C",
          "example": 1
        },
        "2": {
          "fieldName": "condition",
          "fieldType": "weather_status",
          "comment": "Corresponds to GSC Response weatherIcon field",
          "example": 1
        },
        "3": {
          "fieldName": "wind_direction",
          "fieldType": "uint16",
          "units": "degrees",
          "example": 1
        },
        "4": {
          "fieldName": "wind_speed",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "5": {
          "fieldName": "precipitation_probability",
          "fieldType": "uint8",
          "comment": "range 0-100",
          "example": 1
        },
        "6": {
          "fieldName": "temperature_feels_like",
          "fieldType": "sint8",
          "units": "C",
          "comment": "Heat Index if  GCS heatIdx above or equal to 90F or wind chill if GCS windChill below or equal to 32F",
          "example": 1
        },
        "7": {
          "fieldName": "relative_humidity",
          "fieldType": "uint8",
          "example": 1
        },
        "8": {
          "fieldName": "location",
          "fieldType": "string",
          "comment": "string corresponding to GCS response location string",
          "example": 64
        },
        "9": {
          "fieldName": "observed_at_time",
          "fieldType": "date_time",
          "example": 1
        },
        "10": {
          "fieldName": "observed_location_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "11": {
          "fieldName": "observed_location_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "12": {
          "fieldName": "day_of_week",
          "fieldType": "day_of_week",
          "example": 1
        },
        "13": {
          "fieldName": "high_temperature",
          "fieldType": "sint8",
          "units": "C",
          "example": 1
        },
        "14": {
          "fieldName": "low_temperature",
          "fieldType": "sint8",
          "units": "C",
          "example": 1
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "comment": "time of update for current conditions, else forecast time",
          "example": 1
        }
      }
    },
    "weather_alert": {
      "fields": {
        "0": {
          "fieldName": "report_id",
          "fieldType": "string",
          "comment": "Unique identifier from GCS report ID string, length is 12",
          "example": 12
        },
        "1": {
          "fieldName": "issue_time",
          "fieldType": "date_time",
          "comment": "Time alert was issued",
          "example": 1
        },
        "2": {
          "fieldName": "expire_time",
          "fieldType": "date_time",
          "comment": "Time alert expires",
          "example": 1
        },
        "3": {
          "fieldName": "severity",
          "fieldType": "weather_severity",
          "comment": "Warning, Watch, Advisory, Statement",
          "example": 1
        },
        "4": {
          "fieldName": "type",
          "fieldType": "weather_severe_type",
          "comment": "Tornado, Severe Thunderstorm, etc.",
          "example": 1
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "example": 1
        }
      }
    },
    "gps_metadata": {
      "fields": {
        "0": {
          "fieldName": "timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Millisecond part of the timestamp."
        },
        "1": {
          "fieldName": "position_lat",
          "fieldType": "sint32",
          "units": "semicircles"
        },
        "2": {
          "fieldName": "position_long",
          "fieldType": "sint32",
          "units": "semicircles"
        },
        "3": {
          "fieldName": "enhanced_altitude",
          "fieldType": "uint32",
          "scale": 5,
          "offset": 500,
          "units": "m"
        },
        "4": {
          "fieldName": "enhanced_speed",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m/s"
        },
        "5": {
          "fieldName": "heading",
          "fieldType": "uint16",
          "scale": 100,
          "units": "degrees"
        },
        "6": {
          "fieldName": "utc_timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Used to correlate UTC to system time if the timestamp of the message is in system time.  This UTC time is derived from the GPS data."
        },
        "7": {
          "fieldName": "velocity",
          "fieldType": "sint16",
          "array": "[3]",
          "scale": 100,
          "units": "m/s",
          "comment": "velocity[0] is lon velocity.  Velocity[1] is lat velocity.  Velocity[2] is altitude velocity."
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Whole second part of the timestamp."
        }
      }
    },
    "camera_event": {
      "fields": {
        "0": {
          "fieldName": "timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Millisecond part of the timestamp."
        },
        "1": {
          "fieldName": "camera_event_type",
          "fieldType": "camera_event_type"
        },
        "2": {
          "fieldName": "camera_file_uuid",
          "fieldType": "string"
        },
        "3": {
          "fieldName": "camera_orientation",
          "fieldType": "camera_orientation_type"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Whole second part of the timestamp."
        }
      }
    },
    "gyroscope_data": {
      "fields": {
        "0": {
          "fieldName": "timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Millisecond part of the timestamp."
        },
        "1": {
          "fieldName": "sample_time_offset",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "ms",
          "comment": "Each time in the array describes the time at which the gyro sample with the corrosponding index was taken. Limited to 30 samples in each message. The samples may span across seconds. Array size must match the number of samples in gyro_x and gyro_y and gyro_z"
        },
        "2": {
          "fieldName": "gyro_x",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read."
        },
        "3": {
          "fieldName": "gyro_y",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read."
        },
        "4": {
          "fieldName": "gyro_z",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read."
        },
        "5": {
          "fieldName": "calibrated_gyro_x",
          "fieldType": "float32",
          "array": "[N]",
          "units": "deg/s",
          "comment": "Calibrated gyro reading"
        },
        "6": {
          "fieldName": "calibrated_gyro_y",
          "fieldType": "float32",
          "array": "[N]",
          "units": "deg/s",
          "comment": "Calibrated gyro reading"
        },
        "7": {
          "fieldName": "calibrated_gyro_z",
          "fieldType": "float32",
          "array": "[N]",
          "units": "deg/s",
          "comment": "Calibrated gyro reading"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Whole second part of the timestamp"
        }
      }
    },
    "accelerometer_data": {
      "fields": {
        "0": {
          "fieldName": "timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Millisecond part of the timestamp."
        },
        "1": {
          "fieldName": "sample_time_offset",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "ms",
          "comment": "Each time in the array describes the time at which the accelerometer sample with the corrosponding index was taken. Limited to 30 samples in each message. The samples may span across seconds. Array size must match the number of samples in accel_x and accel_y and accel_z"
        },
        "2": {
          "fieldName": "accel_x",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read."
        },
        "3": {
          "fieldName": "accel_y",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read."
        },
        "4": {
          "fieldName": "accel_z",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read."
        },
        "5": {
          "fieldName": "calibrated_accel_x",
          "fieldType": "float32",
          "array": "[N]",
          "units": "g",
          "comment": "Calibrated accel reading"
        },
        "6": {
          "fieldName": "calibrated_accel_y",
          "fieldType": "float32",
          "array": "[N]",
          "units": "g",
          "comment": "Calibrated accel reading"
        },
        "7": {
          "fieldName": "calibrated_accel_z",
          "fieldType": "float32",
          "array": "[N]",
          "units": "g",
          "comment": "Calibrated accel reading"
        },
        "8": {
          "fieldName": "compressed_calibrated_accel_x",
          "fieldType": "sint16",
          "array": "[N]",
          "units": "mG",
          "comment": "Calibrated accel reading"
        },
        "9": {
          "fieldName": "compressed_calibrated_accel_y",
          "fieldType": "sint16",
          "array": "[N]",
          "units": "mG",
          "comment": "Calibrated accel reading"
        },
        "10": {
          "fieldName": "compressed_calibrated_accel_z",
          "fieldType": "sint16",
          "array": "[N]",
          "units": "mG",
          "comment": "Calibrated accel reading"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Whole second part of the timestamp"
        }
      }
    },
    "magnetometer_data": {
      "fields": {
        "0": {
          "fieldName": "timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Millisecond part of the timestamp."
        },
        "1": {
          "fieldName": "sample_time_offset",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "ms",
          "comment": "Each time in the array describes the time at which the compass sample with the corrosponding index was taken. Limited to 30 samples in each message. The samples may span across seconds. Array size must match the number of samples in cmps_x and cmps_y and cmps_z"
        },
        "2": {
          "fieldName": "mag_x",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read."
        },
        "3": {
          "fieldName": "mag_y",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read."
        },
        "4": {
          "fieldName": "mag_z",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "counts",
          "comment": "These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read."
        },
        "5": {
          "fieldName": "calibrated_mag_x",
          "fieldType": "float32",
          "array": "[N]",
          "units": "G",
          "comment": "Calibrated Magnetometer reading"
        },
        "6": {
          "fieldName": "calibrated_mag_y",
          "fieldType": "float32",
          "array": "[N]",
          "units": "G",
          "comment": "Calibrated Magnetometer reading"
        },
        "7": {
          "fieldName": "calibrated_mag_z",
          "fieldType": "float32",
          "array": "[N]",
          "units": "G",
          "comment": "Calibrated Magnetometer reading"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Whole second part of the timestamp"
        }
      }
    },
    "barometer_data": {
      "fields": {
        "0": {
          "fieldName": "timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Millisecond part of the timestamp."
        },
        "1": {
          "fieldName": "sample_time_offset",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "ms",
          "comment": "Each time in the array describes the time at which the barometer sample with the corrosponding index was taken. The samples may span across seconds. Array size must match the number of samples in baro_cal"
        },
        "2": {
          "fieldName": "baro_pres",
          "fieldType": "uint32",
          "array": "[N]",
          "units": "Pa",
          "comment": "These are the raw ADC reading. The samples may span across seconds. A conversion will need to be done on this data once read."
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Whole second part of the timestamp"
        }
      }
    },
    "three_d_sensor_calibration": {
      "fields": {
        "0": {
          "fieldName": "sensor_type",
          "fieldType": "sensor_type",
          "comment": "Indicates which sensor the calibration is for"
        },
        "1": {
          "fieldName": "calibration_factor",
          "fieldType": "uint32",
          "comment": "Calibration factor used to convert from raw ADC value to degrees, g,  etc.",
          "options": [
            {
              "fieldName": "accel_cal_factor",
              "fieldType": "uint32",
              "units": "g",
              "refFieldName": "sensor_type",
              "refFieldValue": "accelerometer",
              "comment": "Accelerometer calibration factor"
            },
            {
              "fieldName": "gyro_cal_factor",
              "fieldType": "uint32",
              "units": "deg/s",
              "refFieldName": "sensor_type",
              "refFieldValue": "gyroscope",
              "comment": "Gyro calibration factor"
            }
          ]
        },
        "2": {
          "fieldName": "calibration_divisor",
          "fieldType": "uint32",
          "units": "counts",
          "comment": "Calibration factor divisor"
        },
        "3": {
          "fieldName": "level_shift",
          "fieldType": "uint32",
          "comment": "Level shift value used to shift the ADC value back into range"
        },
        "4": {
          "fieldName": "offset_cal",
          "fieldType": "sint32",
          "array": "[3]",
          "comment": "Internal calibration factors, one for each: xy, yx, zx"
        },
        "5": {
          "fieldName": "orientation_matrix",
          "fieldType": "sint32",
          "array": "[9]",
          "scale": 65535,
          "comment": "3 x 3 rotation matrix (row major)"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Whole second part of the timestamp"
        }
      }
    },
    "one_d_sensor_calibration": {
      "fields": {
        "0": {
          "fieldName": "sensor_type",
          "fieldType": "sensor_type",
          "comment": "Indicates which sensor the calibration is for"
        },
        "1": {
          "fieldName": "calibration_factor",
          "fieldType": "uint32",
          "comment": "Calibration factor used to convert from raw ADC value to degrees, g,  etc.",
          "options": [
            {
              "fieldName": "baro_cal_factor",
              "fieldType": "uint32",
              "units": "Pa",
              "refFieldName": "sensor_type",
              "refFieldValue": "barometer",
              "comment": "Barometer calibration factor"
            }
          ]
        },
        "2": {
          "fieldName": "calibration_divisor",
          "fieldType": "uint32",
          "units": "counts",
          "comment": "Calibration factor divisor"
        },
        "3": {
          "fieldName": "level_shift",
          "fieldType": "uint32",
          "comment": "Level shift value used to shift the ADC value back into range"
        },
        "4": {
          "fieldName": "offset_cal",
          "fieldType": "sint32",
          "comment": "Internal Calibration factor"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Whole second part of the timestamp"
        }
      }
    },
    "video_frame": {
      "fields": {
        "0": {
          "fieldName": "timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Millisecond part of the timestamp."
        },
        "1": {
          "fieldName": "frame_number",
          "fieldType": "uint32",
          "comment": "Number of the frame that the timestamp and timestamp_ms correlate to"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Whole second part of the timestamp"
        }
      }
    },
    "obdii_data": {
      "fields": {
        "0": {
          "fieldName": "timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Fractional part of timestamp, added to timestamp"
        },
        "1": {
          "fieldName": "time_offset",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "ms",
          "comment": "Offset of PID reading [i] from start_timestamp+start_timestamp_ms. Readings may span accross seconds."
        },
        "2": {
          "fieldName": "pid",
          "fieldType": "byte",
          "comment": "Parameter ID"
        },
        "3": {
          "fieldName": "raw_data",
          "fieldType": "byte",
          "array": "[N]",
          "comment": "Raw parameter data"
        },
        "4": {
          "fieldName": "pid_data_size",
          "fieldType": "uint8",
          "array": "[N]",
          "comment": "Optional, data size of PID[i].  If not specified refer to SAE J1979."
        },
        "5": {
          "fieldName": "system_time",
          "fieldType": "uint32",
          "array": "[N]",
          "comment": "System time associated with sample expressed in ms, can be used instead of time_offset.  There will be a system_time value for each raw_data element.  For multibyte pids the system_time is repeated."
        },
        "6": {
          "fieldName": "start_timestamp",
          "fieldType": "date_time",
          "comment": "Timestamp of first sample recorded in the message.  Used with time_offset to generate time of each sample"
        },
        "7": {
          "fieldName": "start_timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Fractional part of start_timestamp"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Timestamp message was output"
        }
      }
    },
    "nmea_sentence": {
      "fields": {
        "0": {
          "fieldName": "timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Fractional part of timestamp, added to timestamp",
          "example": 1
        },
        "1": {
          "fieldName": "sentence",
          "fieldType": "string",
          "comment": "NMEA sentence",
          "example": 83
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Timestamp message was output",
          "example": 1
        }
      }
    },
    "aviation_attitude": {
      "fields": {
        "0": {
          "fieldName": "timestamp_ms",
          "fieldType": "uint16",
          "units": "ms",
          "comment": "Fractional part of timestamp, added to timestamp",
          "example": 1
        },
        "1": {
          "fieldName": "system_time",
          "fieldType": "uint32",
          "array": "[N]",
          "units": "ms",
          "comment": "System time associated with sample expressed in ms.",
          "example": 1
        },
        "2": {
          "fieldName": "pitch",
          "fieldType": "sint16",
          "array": "[N]",
          "scale": 10430.38,
          "units": "radians",
          "comment": "Range -PI/2 to +PI/2",
          "example": 1
        },
        "3": {
          "fieldName": "roll",
          "fieldType": "sint16",
          "array": "[N]",
          "scale": 10430.38,
          "units": "radians",
          "comment": "Range -PI to +PI",
          "example": 1
        },
        "4": {
          "fieldName": "accel_lateral",
          "fieldType": "sint16",
          "array": "[N]",
          "scale": 100,
          "units": "m/s^2",
          "comment": "Range -78.4 to +78.4 (-8 Gs to 8 Gs)",
          "example": 1
        },
        "5": {
          "fieldName": "accel_normal",
          "fieldType": "sint16",
          "array": "[N]",
          "scale": 100,
          "units": "m/s^2",
          "comment": "Range -78.4 to +78.4 (-8 Gs to 8 Gs)",
          "example": 1
        },
        "6": {
          "fieldName": "turn_rate",
          "fieldType": "sint16",
          "array": "[N]",
          "scale": 1024,
          "units": "radians/second",
          "comment": "Range -8.727 to +8.727 (-500 degs/sec to +500 degs/sec)",
          "example": 1
        },
        "7": {
          "fieldName": "stage",
          "fieldType": "attitude_stage",
          "array": "[N]",
          "example": 1
        },
        "8": {
          "fieldName": "attitude_stage_complete",
          "fieldType": "uint8",
          "array": "[N]",
          "units": "%",
          "comment": "The percent complete of the current attitude stage.  Set to 0 for attitude stages 0, 1 and 2 and to 100 for attitude stage 3 by AHRS modules that do not support it.  Range - 100",
          "example": 1
        },
        "9": {
          "fieldName": "track",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 10430.38,
          "units": "radians",
          "comment": "Track Angle/Heading Range 0 - 2pi",
          "example": 1
        },
        "10": {
          "fieldName": "validity",
          "fieldType": "attitude_validity",
          "array": "[N]",
          "example": 1
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Timestamp message was output",
          "example": 1
        }
      }
    },
    "video": {
      "fields": {
        "0": {
          "fieldName": "url",
          "fieldType": "string"
        },
        "1": {
          "fieldName": "hosting_provider",
          "fieldType": "string"
        },
        "2": {
          "fieldName": "duration",
          "fieldType": "uint32",
          "units": "ms",
          "comment": "Playback time of video"
        }
      }
    },
    "video_title": {
      "fields": {
        "0": {
          "fieldName": "message_count",
          "fieldType": "uint16",
          "comment": "Total number of title parts",
          "example": 1
        },
        "1": {
          "fieldName": "text",
          "fieldType": "string",
          "example": 80
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "comment": "Long titles will be split into multiple parts",
          "example": 1
        }
      }
    },
    "video_description": {
      "fields": {
        "0": {
          "fieldName": "message_count",
          "fieldType": "uint16",
          "comment": "Total number of description parts",
          "example": 1
        },
        "1": {
          "fieldName": "text",
          "fieldType": "string",
          "example": 250
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "comment": "Long descriptions will be split into multiple parts",
          "example": 1
        }
      }
    },
    "video_clip": {
      "fields": {
        "0": {
          "fieldName": "clip_number",
          "fieldType": "uint16"
        },
        "1": {
          "fieldName": "start_timestamp",
          "fieldType": "date_time"
        },
        "2": {
          "fieldName": "start_timestamp_ms",
          "fieldType": "uint16"
        },
        "3": {
          "fieldName": "end_timestamp",
          "fieldType": "date_time"
        },
        "4": {
          "fieldName": "end_timestamp_ms",
          "fieldType": "uint16"
        },
        "6": {
          "fieldName": "clip_start",
          "fieldType": "uint32",
          "units": "ms",
          "comment": "Start of clip in video time"
        },
        "7": {
          "fieldName": "clip_end",
          "fieldType": "uint32",
          "units": "ms",
          "comment": "End of clip in video time"
        }
      }
    },
    "set": {
      "fields": {
        "0": {
          "fieldName": "duration",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s"
        },
        "3": {
          "fieldName": "repetitions",
          "fieldType": "uint16",
          "comment": "# of repitions of the movement"
        },
        "4": {
          "fieldName": "weight",
          "fieldType": "uint16",
          "scale": 16,
          "units": "kg",
          "comment": "Amount of weight applied for the set"
        },
        "5": {
          "fieldName": "set_type",
          "fieldType": "set_type"
        },
        "6": {
          "fieldName": "start_time",
          "fieldType": "date_time",
          "comment": "Start time of the set"
        },
        "7": {
          "fieldName": "category",
          "fieldType": "exercise_category",
          "array": "[N]"
        },
        "8": {
          "fieldName": "category_subtype",
          "fieldType": "uint16",
          "array": "[N]",
          "comment": "Based on the associated category, see [category]_exercise_names"
        },
        "9": {
          "fieldName": "weight_display_unit",
          "fieldType": "fit_base_unit",
          "example": 1
        },
        "10": {
          "fieldName": "message_index",
          "fieldType": "message_index"
        },
        "11": {
          "fieldName": "wkt_step_index",
          "fieldType": "message_index"
        },
        "254": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "comment": "Timestamp of the set"
        }
      }
    },
    "jump": {
      "fields": {
        "0": {
          "fieldName": "distance",
          "fieldType": "float32",
          "units": "m"
        },
        "1": {
          "fieldName": "height",
          "fieldType": "float32",
          "units": "m"
        },
        "2": {
          "fieldName": "rotations",
          "fieldType": "uint8"
        },
        "3": {
          "fieldName": "hang_time",
          "fieldType": "float32",
          "units": "s"
        },
        "4": {
          "fieldName": "score",
          "fieldType": "float32",
          "comment": "A score for a jump calculated based on hang time, rotations, and distance."
        },
        "5": {
          "fieldName": "position_lat",
          "fieldType": "sint32",
          "units": "semicircles"
        },
        "6": {
          "fieldName": "position_long",
          "fieldType": "sint32",
          "units": "semicircles"
        },
        "7": {
          "fieldName": "speed",
          "fieldType": "uint16",
          "components": "enhanced_speed",
          "scale": 1000,
          "units": "m/s",
          "bits": 16
        },
        "8": {
          "fieldName": "enhanced_speed",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m/s"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s"
        }
      }
    },
    "course": {
      "fields": {
        "4": {
          "fieldName": "sport",
          "fieldType": "sport",
          "example": 1
        },
        "5": {
          "fieldName": "name",
          "fieldType": "string",
          "example": 16
        },
        "6": {
          "fieldName": "capabilities",
          "fieldType": "course_capabilities",
          "example": 1
        },
        "7": {
          "fieldName": "sub_sport",
          "fieldType": "sub_sport",
          "example": 1
        }
      }
    },
    "course_point": {
      "fields": {
        "1": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "example": 1
        },
        "2": {
          "fieldName": "position_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "3": {
          "fieldName": "position_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "4": {
          "fieldName": "distance",
          "fieldType": "uint32",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "5": {
          "fieldName": "type",
          "fieldType": "course_point",
          "example": 1
        },
        "6": {
          "fieldName": "name",
          "fieldType": "string",
          "example": 16
        },
        "8": {
          "fieldName": "favorite",
          "fieldType": "bool",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "segment_id": {
      "comment": "Unique Identification data for a segment file",
      "fields": {
        "0": {
          "fieldName": "name",
          "fieldType": "string",
          "comment": "Friendly name assigned to segment",
          "example": 1
        },
        "1": {
          "fieldName": "uuid",
          "fieldType": "string",
          "comment": "UUID of the segment",
          "example": 1
        },
        "2": {
          "fieldName": "sport",
          "fieldType": "sport",
          "comment": "Sport associated with the segment",
          "example": 1
        },
        "3": {
          "fieldName": "enabled",
          "fieldType": "bool",
          "comment": "Segment enabled for evaluation",
          "example": 1
        },
        "4": {
          "fieldName": "user_profile_primary_key",
          "fieldType": "uint32",
          "comment": "Primary key of the user that created the segment",
          "example": 1
        },
        "5": {
          "fieldName": "device_id",
          "fieldType": "uint32",
          "comment": "ID of the device that created the segment",
          "example": 1
        },
        "6": {
          "fieldName": "default_race_leader",
          "fieldType": "uint8",
          "comment": "Index for the Leader Board entry selected as the default race participant",
          "example": 1
        },
        "7": {
          "fieldName": "delete_status",
          "fieldType": "segment_delete_status",
          "comment": "Indicates if any segments should be deleted",
          "example": 1
        },
        "8": {
          "fieldName": "selection_type",
          "fieldType": "segment_selection_type",
          "comment": "Indicates how the segment was selected to be sent to the device",
          "example": 1
        }
      }
    },
    "segment_leaderboard_entry": {
      "comment": "Unique Identification data for an individual segment leader within a segment file",
      "fields": {
        "0": {
          "fieldName": "name",
          "fieldType": "string",
          "comment": "Friendly name assigned to leader",
          "example": 1
        },
        "1": {
          "fieldName": "type",
          "fieldType": "segment_leaderboard_type",
          "comment": "Leader classification",
          "example": 1
        },
        "2": {
          "fieldName": "group_primary_key",
          "fieldType": "uint32",
          "comment": "Primary user ID of this leader",
          "example": 1
        },
        "3": {
          "fieldName": "activity_id",
          "fieldType": "uint32",
          "comment": "ID of the activity associated with this leader time",
          "example": 1
        },
        "4": {
          "fieldName": "segment_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "comment": "Segment Time (includes pauses)",
          "example": 1
        },
        "5": {
          "fieldName": "activity_id_string",
          "fieldType": "string",
          "comment": "String version of the activity_id. 21 characters long, express in decimal"
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "segment_point": {
      "comment": "Navigation and race evaluation point for a segment decribing a point along the segment path and time it took each segment leader to reach that point",
      "fields": {
        "1": {
          "fieldName": "position_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "2": {
          "fieldName": "position_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "3": {
          "fieldName": "distance",
          "fieldType": "uint32",
          "scale": 100,
          "units": "m",
          "comment": "Accumulated distance along the segment at the described point",
          "example": 1
        },
        "4": {
          "fieldName": "altitude",
          "fieldType": "uint16",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "comment": "Accumulated altitude along the segment at the described point",
          "example": 1
        },
        "5": {
          "fieldName": "leader_time",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "comment": "Accumualted time each leader board member required to reach the described point. This value is zero for all leader board members at the starting point of the segment.",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "segment_lap": {
      "fields": {
        "0": {
          "fieldName": "event",
          "fieldType": "event",
          "example": 1
        },
        "1": {
          "fieldName": "event_type",
          "fieldType": "event_type",
          "example": 1
        },
        "2": {
          "fieldName": "start_time",
          "fieldType": "date_time",
          "example": 1
        },
        "3": {
          "fieldName": "start_position_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "4": {
          "fieldName": "start_position_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "5": {
          "fieldName": "end_position_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "6": {
          "fieldName": "end_position_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "example": 1
        },
        "7": {
          "fieldName": "total_elapsed_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "comment": "Time (includes pauses)",
          "example": 1
        },
        "8": {
          "fieldName": "total_timer_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "comment": "Timer Time (excludes pauses)",
          "example": 1
        },
        "9": {
          "fieldName": "total_distance",
          "fieldType": "uint32",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "10": {
          "fieldName": "total_cycles",
          "fieldType": "uint32",
          "units": "cycles",
          "example": 1,
          "options": [
            {
              "fieldName": "total_strokes",
              "fieldType": "uint32",
              "units": "strokes",
              "refFieldName": "sport",
              "refFieldValue": "cycling",
              "example": 1
            }
          ]
        },
        "11": {
          "fieldName": "total_calories",
          "fieldType": "uint16",
          "units": "kcal",
          "example": 1
        },
        "12": {
          "fieldName": "total_fat_calories",
          "fieldType": "uint16",
          "units": "kcal",
          "comment": "If New Leaf",
          "example": 1
        },
        "13": {
          "fieldName": "avg_speed",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "14": {
          "fieldName": "max_speed",
          "fieldType": "uint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "15": {
          "fieldName": "avg_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "16": {
          "fieldName": "max_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "17": {
          "fieldName": "avg_cadence",
          "fieldType": "uint8",
          "units": "rpm",
          "comment": "total_cycles / total_timer_time if non_zero_avg_cadence otherwise total_cycles / total_elapsed_time",
          "example": 1
        },
        "18": {
          "fieldName": "max_cadence",
          "fieldType": "uint8",
          "units": "rpm",
          "example": 1
        },
        "19": {
          "fieldName": "avg_power",
          "fieldType": "uint16",
          "units": "watts",
          "comment": "total_power / total_timer_time if non_zero_avg_power otherwise total_power / total_elapsed_time",
          "example": 1
        },
        "20": {
          "fieldName": "max_power",
          "fieldType": "uint16",
          "units": "watts",
          "example": 1
        },
        "21": {
          "fieldName": "total_ascent",
          "fieldType": "uint16",
          "units": "m",
          "example": 1
        },
        "22": {
          "fieldName": "total_descent",
          "fieldType": "uint16",
          "units": "m",
          "example": 1
        },
        "23": {
          "fieldName": "sport",
          "fieldType": "sport",
          "example": 1
        },
        "24": {
          "fieldName": "event_group",
          "fieldType": "uint8",
          "example": 1
        },
        "25": {
          "fieldName": "nec_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "comment": "North east corner latitude.",
          "example": 1
        },
        "26": {
          "fieldName": "nec_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "comment": "North east corner longitude.",
          "example": 1
        },
        "27": {
          "fieldName": "swc_lat",
          "fieldType": "sint32",
          "units": "semicircles",
          "comment": "South west corner latitude.",
          "example": 1
        },
        "28": {
          "fieldName": "swc_long",
          "fieldType": "sint32",
          "units": "semicircles",
          "comment": "South west corner latitude.",
          "example": 1
        },
        "29": {
          "fieldName": "name",
          "fieldType": "string",
          "example": 16
        },
        "30": {
          "fieldName": "normalized_power",
          "fieldType": "uint16",
          "units": "watts",
          "example": 1
        },
        "31": {
          "fieldName": "left_right_balance",
          "fieldType": "left_right_balance_100",
          "example": 1
        },
        "32": {
          "fieldName": "sub_sport",
          "fieldType": "sub_sport",
          "example": 1
        },
        "33": {
          "fieldName": "total_work",
          "fieldType": "uint32",
          "units": "J",
          "example": 1
        },
        "34": {
          "fieldName": "avg_altitude",
          "fieldType": "uint16",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "example": 1
        },
        "35": {
          "fieldName": "max_altitude",
          "fieldType": "uint16",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "example": 1
        },
        "36": {
          "fieldName": "gps_accuracy",
          "fieldType": "uint8",
          "units": "m",
          "example": 1
        },
        "37": {
          "fieldName": "avg_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "38": {
          "fieldName": "avg_pos_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "39": {
          "fieldName": "avg_neg_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "40": {
          "fieldName": "max_pos_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "41": {
          "fieldName": "max_neg_grade",
          "fieldType": "sint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "42": {
          "fieldName": "avg_temperature",
          "fieldType": "sint8",
          "units": "C",
          "example": 1
        },
        "43": {
          "fieldName": "max_temperature",
          "fieldType": "sint8",
          "units": "C",
          "example": 1
        },
        "44": {
          "fieldName": "total_moving_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "45": {
          "fieldName": "avg_pos_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "46": {
          "fieldName": "avg_neg_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "47": {
          "fieldName": "max_pos_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "48": {
          "fieldName": "max_neg_vertical_speed",
          "fieldType": "sint16",
          "scale": 1000,
          "units": "m/s",
          "example": 1
        },
        "49": {
          "fieldName": "time_in_hr_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "50": {
          "fieldName": "time_in_speed_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "51": {
          "fieldName": "time_in_cadence_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "52": {
          "fieldName": "time_in_power_zone",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "53": {
          "fieldName": "repetition_num",
          "fieldType": "uint16",
          "example": 1
        },
        "54": {
          "fieldName": "min_altitude",
          "fieldType": "uint16",
          "scale": 5,
          "offset": 500,
          "units": "m",
          "example": 1
        },
        "55": {
          "fieldName": "min_heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "56": {
          "fieldName": "active_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "57": {
          "fieldName": "wkt_step_index",
          "fieldType": "message_index",
          "example": 1
        },
        "58": {
          "fieldName": "sport_event",
          "fieldType": "sport_event",
          "example": 1
        },
        "59": {
          "fieldName": "avg_left_torque_effectiveness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "example": 1
        },
        "60": {
          "fieldName": "avg_right_torque_effectiveness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "example": 1
        },
        "61": {
          "fieldName": "avg_left_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "example": 1
        },
        "62": {
          "fieldName": "avg_right_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "example": 1
        },
        "63": {
          "fieldName": "avg_combined_pedal_smoothness",
          "fieldType": "uint8",
          "scale": 2,
          "units": "percent",
          "example": 1
        },
        "64": {
          "fieldName": "status",
          "fieldType": "segment_lap_status",
          "example": 1
        },
        "65": {
          "fieldName": "uuid",
          "fieldType": "string",
          "example": 33
        },
        "66": {
          "fieldName": "avg_fractional_cadence",
          "fieldType": "uint8",
          "scale": 128,
          "units": "rpm",
          "comment": "fractional part of the avg_cadence",
          "example": 1
        },
        "67": {
          "fieldName": "max_fractional_cadence",
          "fieldType": "uint8",
          "scale": 128,
          "units": "rpm",
          "comment": "fractional part of the max_cadence",
          "example": 1
        },
        "68": {
          "fieldName": "total_fractional_cycles",
          "fieldType": "uint8",
          "scale": 128,
          "units": "cycles",
          "comment": "fractional part of the total_cycles",
          "example": 1
        },
        "69": {
          "fieldName": "front_gear_shift_count",
          "fieldType": "uint16",
          "example": 1
        },
        "70": {
          "fieldName": "rear_gear_shift_count",
          "fieldType": "uint16",
          "example": 1
        },
        "71": {
          "fieldName": "time_standing",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "comment": "Total time spent in the standing position"
        },
        "72": {
          "fieldName": "stand_count",
          "fieldType": "uint16",
          "comment": "Number of transitions to the standing state"
        },
        "73": {
          "fieldName": "avg_left_pco",
          "fieldType": "sint8",
          "units": "mm",
          "comment": "Average left platform center offset"
        },
        "74": {
          "fieldName": "avg_right_pco",
          "fieldType": "sint8",
          "units": "mm",
          "comment": "Average right platform center offset"
        },
        "75": {
          "fieldName": "avg_left_power_phase",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average left power phase angles. Data value indexes defined by power_phase_type."
        },
        "76": {
          "fieldName": "avg_left_power_phase_peak",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average left power phase peak angles. Data value indexes defined by power_phase_type."
        },
        "77": {
          "fieldName": "avg_right_power_phase",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average right power phase angles. Data value indexes defined by power_phase_type."
        },
        "78": {
          "fieldName": "avg_right_power_phase_peak",
          "fieldType": "uint8",
          "array": "[N]",
          "scale": 0.7111111,
          "units": "degrees",
          "comment": "Average right power phase peak angles. Data value indexes defined by power_phase_type."
        },
        "79": {
          "fieldName": "avg_power_position",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "watts",
          "comment": "Average power by position. Data value indexes defined by rider_position_type."
        },
        "80": {
          "fieldName": "max_power_position",
          "fieldType": "uint16",
          "array": "[N]",
          "units": "watts",
          "comment": "Maximum power by position. Data value indexes defined by rider_position_type."
        },
        "81": {
          "fieldName": "avg_cadence_position",
          "fieldType": "uint8",
          "array": "[N]",
          "units": "rpm",
          "comment": "Average cadence by position. Data value indexes defined by rider_position_type."
        },
        "82": {
          "fieldName": "max_cadence_position",
          "fieldType": "uint8",
          "array": "[N]",
          "units": "rpm",
          "comment": "Maximum cadence by position. Data value indexes defined by rider_position_type."
        },
        "83": {
          "fieldName": "manufacturer",
          "fieldType": "manufacturer",
          "comment": "Manufacturer that produced the segment"
        },
        "84": {
          "fieldName": "total_grit",
          "fieldType": "float32",
          "units": "kGrit",
          "comment": "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes."
        },
        "85": {
          "fieldName": "total_flow",
          "fieldType": "float32",
          "units": "Flow",
          "comment": "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals."
        },
        "86": {
          "fieldName": "avg_grit",
          "fieldType": "float32",
          "units": "kGrit",
          "comment": "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes."
        },
        "87": {
          "fieldName": "avg_flow",
          "fieldType": "float32",
          "units": "Flow",
          "comment": "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals."
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Lap end time.",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "segment_file": {
      "comment": "Summary of the unique segment and leaderboard information associated with a segment file. This message is used to compile a segment list file describing all segment files on a device. The segment list file is used when refreshing the contents of a segment file with the latest available leaderboard information.",
      "fields": {
        "1": {
          "fieldName": "file_uuid",
          "fieldType": "string",
          "comment": "UUID of the segment file",
          "example": 1
        },
        "3": {
          "fieldName": "enabled",
          "fieldType": "bool",
          "comment": "Enabled state of the segment file",
          "example": 1
        },
        "4": {
          "fieldName": "user_profile_primary_key",
          "fieldType": "uint32",
          "comment": "Primary key of the user that created the segment file",
          "example": 1
        },
        "7": {
          "fieldName": "leader_type",
          "fieldType": "segment_leaderboard_type",
          "array": "[N]",
          "comment": "Leader type of each leader in the segment file",
          "example": 1
        },
        "8": {
          "fieldName": "leader_group_primary_key",
          "fieldType": "uint32",
          "array": "[N]",
          "comment": "Group primary key of each leader in the segment file",
          "example": 1
        },
        "9": {
          "fieldName": "leader_activity_id",
          "fieldType": "uint32",
          "array": "[N]",
          "comment": "Activity ID of each leader in the segment file",
          "example": 1
        },
        "10": {
          "fieldName": "leader_activity_id_string",
          "fieldType": "string",
          "array": "[N]",
          "comment": "String version of the activity ID of each leader in the segment file. 21 characters long for each ID, express in decimal"
        },
        "11": {
          "fieldName": "default_race_leader",
          "fieldType": "uint8",
          "comment": "Index for the Leader Board entry selected as the default race participant"
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "workout": {
      "fields": {
        "4": {
          "fieldName": "sport",
          "fieldType": "sport",
          "example": 1
        },
        "5": {
          "fieldName": "capabilities",
          "fieldType": "workout_capabilities",
          "example": 1
        },
        "6": {
          "fieldName": "num_valid_steps",
          "fieldType": "uint16",
          "comment": "number of valid steps",
          "example": 1
        },
        "8": {
          "fieldName": "wkt_name",
          "fieldType": "string",
          "example": 16
        },
        "11": {
          "fieldName": "sub_sport",
          "fieldType": "sub_sport",
          "example": 1
        },
        "14": {
          "fieldName": "pool_length",
          "fieldType": "uint16",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "15": {
          "fieldName": "pool_length_unit",
          "fieldType": "display_measure",
          "example": 1
        }
      }
    },
    "workout_session": {
      "fields": {
        "0": {
          "fieldName": "sport",
          "fieldType": "sport",
          "example": 1
        },
        "1": {
          "fieldName": "sub_sport",
          "fieldType": "sub_sport",
          "example": 1
        },
        "2": {
          "fieldName": "num_valid_steps",
          "fieldType": "uint16",
          "example": 1
        },
        "3": {
          "fieldName": "first_step_index",
          "fieldType": "uint16",
          "example": 1
        },
        "4": {
          "fieldName": "pool_length",
          "fieldType": "uint16",
          "scale": 100,
          "units": "m",
          "example": 1
        },
        "5": {
          "fieldName": "pool_length_unit",
          "fieldType": "display_measure",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "workout_step": {
      "fields": {
        "0": {
          "fieldName": "wkt_step_name",
          "fieldType": "string",
          "example": 16
        },
        "1": {
          "fieldName": "duration_type",
          "fieldType": "wkt_step_duration",
          "example": 1
        },
        "2": {
          "fieldName": "duration_value",
          "fieldType": "uint32",
          "example": 1,
          "options": [
            {
              "fieldName": "duration_time",
              "fieldType": "uint32",
              "scale": 1000,
              "units": "s",
              "refFieldName": "duration_type",
              "refFieldValue": "time",
              "example": 1
            },
            {
              "fieldName": "duration_time",
              "fieldType": "uint32",
              "scale": 1000,
              "units": "s",
              "refFieldName": "duration_type",
              "refFieldValue": "repetition_time",
              "example": 1
            },
            {
              "fieldName": "duration_distance",
              "fieldType": "uint32",
              "scale": 100,
              "units": "m",
              "refFieldName": "duration_type",
              "refFieldValue": "distance",
              "example": 1
            },
            {
              "fieldName": "duration_hr",
              "fieldType": "workout_hr",
              "units": "% or bpm",
              "refFieldName": "duration_type",
              "refFieldValue": "hr_less_than",
              "example": 1
            },
            {
              "fieldName": "duration_hr",
              "fieldType": "workout_hr",
              "units": "% or bpm",
              "refFieldName": "duration_type",
              "refFieldValue": "hr_greater_than",
              "example": 1
            },
            {
              "fieldName": "duration_calories",
              "fieldType": "uint32",
              "units": "calories",
              "refFieldName": "duration_type",
              "refFieldValue": "calories",
              "example": 1
            },
            {
              "fieldName": "duration_step",
              "fieldType": "uint32",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_steps_cmplt",
              "comment": "message_index of step to loop back to. Steps are assumed to be in the order by message_index. custom_name and intensity members are undefined for this duration type.",
              "example": 1
            },
            {
              "fieldName": "duration_step",
              "fieldType": "uint32",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_time",
              "comment": "message_index of step to loop back to. Steps are assumed to be in the order by message_index. custom_name and intensity members are undefined for this duration type.",
              "example": 1
            },
            {
              "fieldName": "duration_step",
              "fieldType": "uint32",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_distance",
              "comment": "message_index of step to loop back to. Steps are assumed to be in the order by message_index. custom_name and intensity members are undefined for this duration type.",
              "example": 1
            },
            {
              "fieldName": "duration_step",
              "fieldType": "uint32",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_calories",
              "comment": "message_index of step to loop back to. Steps are assumed to be in the order by message_index. custom_name and intensity members are undefined for this duration type.",
              "example": 1
            },
            {
              "fieldName": "duration_step",
              "fieldType": "uint32",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_hr_less_than",
              "comment": "message_index of step to loop back to. Steps are assumed to be in the order by message_index. custom_name and intensity members are undefined for this duration type.",
              "example": 1
            },
            {
              "fieldName": "duration_step",
              "fieldType": "uint32",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_hr_greater_than",
              "comment": "message_index of step to loop back to. Steps are assumed to be in the order by message_index. custom_name and intensity members are undefined for this duration type.",
              "example": 1
            },
            {
              "fieldName": "duration_step",
              "fieldType": "uint32",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_power_less_than",
              "comment": "message_index of step to loop back to. Steps are assumed to be in the order by message_index. custom_name and intensity members are undefined for this duration type.",
              "example": 1
            },
            {
              "fieldName": "duration_step",
              "fieldType": "uint32",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_power_greater_than",
              "comment": "message_index of step to loop back to. Steps are assumed to be in the order by message_index. custom_name and intensity members are undefined for this duration type.",
              "example": 1
            },
            {
              "fieldName": "duration_power",
              "fieldType": "workout_power",
              "units": "% or watts",
              "refFieldName": "duration_type",
              "refFieldValue": "power_less_than",
              "example": 1
            },
            {
              "fieldName": "duration_power",
              "fieldType": "workout_power",
              "units": "% or watts",
              "refFieldName": "duration_type",
              "refFieldValue": "power_greater_than",
              "example": 1
            },
            {
              "fieldName": "duration_reps",
              "fieldType": "uint32",
              "refFieldName": "duration_type",
              "refFieldValue": "reps",
              "example": 1
            }
          ]
        },
        "3": {
          "fieldName": "target_type",
          "fieldType": "wkt_step_target",
          "example": 1
        },
        "4": {
          "fieldName": "target_value",
          "fieldType": "uint32",
          "example": 1,
          "options": [
            {
              "fieldName": "target_speed_zone",
              "fieldType": "uint32",
              "refFieldName": "target_type",
              "refFieldValue": "speed",
              "comment": "speed zone (1-10);Custom =0;",
              "example": 1
            },
            {
              "fieldName": "target_hr_zone",
              "fieldType": "uint32",
              "refFieldName": "target_type",
              "refFieldValue": "heart_rate",
              "comment": "hr zone (1-5);Custom =0;",
              "example": 1
            },
            {
              "fieldName": "target_cadence_zone",
              "fieldType": "uint32",
              "refFieldName": "target_type",
              "refFieldValue": "cadence",
              "comment": "Zone (1-?); Custom = 0;",
              "example": 1
            },
            {
              "fieldName": "target_power_zone",
              "fieldType": "uint32",
              "refFieldName": "target_type",
              "refFieldValue": "power",
              "comment": "Power Zone ( 1-7); Custom = 0;",
              "example": 1
            },
            {
              "fieldName": "repeat_steps",
              "fieldType": "uint32",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_steps_cmplt",
              "comment": "# of repetitions",
              "example": 1
            },
            {
              "fieldName": "repeat_time",
              "fieldType": "uint32",
              "scale": 1000,
              "units": "s",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_time",
              "example": 1
            },
            {
              "fieldName": "repeat_distance",
              "fieldType": "uint32",
              "scale": 100,
              "units": "m",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_distance",
              "example": 1
            },
            {
              "fieldName": "repeat_calories",
              "fieldType": "uint32",
              "units": "calories",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_calories",
              "example": 1
            },
            {
              "fieldName": "repeat_hr",
              "fieldType": "workout_hr",
              "units": "% or bpm",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_hr_less_than",
              "example": 1
            },
            {
              "fieldName": "repeat_hr",
              "fieldType": "workout_hr",
              "units": "% or bpm",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_hr_greater_than",
              "example": 1
            },
            {
              "fieldName": "repeat_power",
              "fieldType": "workout_power",
              "units": "% or watts",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_power_less_than",
              "example": 1
            },
            {
              "fieldName": "repeat_power",
              "fieldType": "workout_power",
              "units": "% or watts",
              "refFieldName": "duration_type",
              "refFieldValue": "repeat_until_power_greater_than",
              "example": 1
            },
            {
              "fieldName": "target_stroke_type",
              "fieldType": "swim_stroke",
              "refFieldName": "target_type",
              "refFieldValue": "swim_stroke",
              "example": 1
            }
          ]
        },
        "5": {
          "fieldName": "custom_target_value_low",
          "fieldType": "uint32",
          "example": 1,
          "options": [
            {
              "fieldName": "custom_target_speed_low",
              "fieldType": "uint32",
              "scale": 1000,
              "units": "m/s",
              "refFieldName": "target_type",
              "refFieldValue": "speed",
              "example": 1
            },
            {
              "fieldName": "custom_target_heart_rate_low",
              "fieldType": "workout_hr",
              "units": "% or bpm",
              "refFieldName": "target_type",
              "refFieldValue": "heart_rate",
              "example": 1
            },
            {
              "fieldName": "custom_target_cadence_low",
              "fieldType": "uint32",
              "units": "rpm",
              "refFieldName": "target_type",
              "refFieldValue": "cadence",
              "example": 1
            },
            {
              "fieldName": "custom_target_power_low",
              "fieldType": "workout_power",
              "units": "% or watts",
              "refFieldName": "target_type",
              "refFieldValue": "power",
              "example": 1
            }
          ]
        },
        "6": {
          "fieldName": "custom_target_value_high",
          "fieldType": "uint32",
          "example": 1,
          "options": [
            {
              "fieldName": "custom_target_speed_high",
              "fieldType": "uint32",
              "scale": 1000,
              "units": "m/s",
              "refFieldName": "target_type",
              "refFieldValue": "speed",
              "example": 1
            },
            {
              "fieldName": "custom_target_heart_rate_high",
              "fieldType": "workout_hr",
              "units": "% or bpm",
              "refFieldName": "target_type",
              "refFieldValue": "heart_rate",
              "example": 1
            },
            {
              "fieldName": "custom_target_cadence_high",
              "fieldType": "uint32",
              "units": "rpm",
              "refFieldName": "target_type",
              "refFieldValue": "cadence",
              "example": 1
            },
            {
              "fieldName": "custom_target_power_high",
              "fieldType": "workout_power",
              "units": "% or watts",
              "refFieldName": "target_type",
              "refFieldValue": "power",
              "example": 1
            }
          ]
        },
        "7": {
          "fieldName": "intensity",
          "fieldType": "intensity",
          "example": 1
        },
        "8": {
          "fieldName": "notes",
          "fieldType": "string",
          "example": 50
        },
        "9": {
          "fieldName": "equipment",
          "fieldType": "workout_equipment",
          "example": 1
        },
        "10": {
          "fieldName": "exercise_category",
          "fieldType": "exercise_category",
          "example": 1
        },
        "11": {
          "fieldName": "exercise_name",
          "fieldType": "uint16"
        },
        "12": {
          "fieldName": "exercise_weight",
          "fieldType": "uint16",
          "scale": 100,
          "units": "kg"
        },
        "13": {
          "fieldName": "weight_display_unit",
          "fieldType": "fit_base_unit"
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "exercise_title": {
      "fields": {
        "0": {
          "fieldName": "exercise_category",
          "fieldType": "exercise_category",
          "example": 1
        },
        "1": {
          "fieldName": "exercise_name",
          "fieldType": "uint16",
          "example": 1
        },
        "2": {
          "fieldName": "wkt_step_name",
          "fieldType": "string",
          "array": "[N]",
          "example": 200
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "schedule": {
      "fields": {
        "0": {
          "fieldName": "manufacturer",
          "fieldType": "manufacturer",
          "comment": "Corresponds to file_id of scheduled workout / course.",
          "example": 1
        },
        "1": {
          "fieldName": "product",
          "fieldType": "uint16",
          "comment": "Corresponds to file_id of scheduled workout / course.",
          "example": 1,
          "options": [
            {
              "fieldName": "favero_product",
              "fieldType": "favero_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "favero_electronics"
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "garmin",
              "example": 1
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "dynastream",
              "example": 1
            },
            {
              "fieldName": "garmin_product",
              "fieldType": "garmin_product",
              "refFieldName": "manufacturer",
              "refFieldValue": "dynastream_oem",
              "example": 1
            }
          ]
        },
        "2": {
          "fieldName": "serial_number",
          "fieldType": "uint32z",
          "comment": "Corresponds to file_id of scheduled workout / course.",
          "example": 1
        },
        "3": {
          "fieldName": "time_created",
          "fieldType": "date_time",
          "comment": "Corresponds to file_id of scheduled workout / course.",
          "example": 1
        },
        "4": {
          "fieldName": "completed",
          "fieldType": "bool",
          "comment": "TRUE if this activity has been started",
          "example": 1
        },
        "5": {
          "fieldName": "type",
          "fieldType": "schedule",
          "example": 1
        },
        "6": {
          "fieldName": "scheduled_time",
          "fieldType": "local_date_time",
          "example": 1
        }
      }
    },
    "totals": {
      "fields": {
        "0": {
          "fieldName": "timer_time",
          "fieldType": "uint32",
          "units": "s",
          "comment": "Excludes pauses",
          "example": 1
        },
        "1": {
          "fieldName": "distance",
          "fieldType": "uint32",
          "units": "m",
          "example": 1
        },
        "2": {
          "fieldName": "calories",
          "fieldType": "uint32",
          "units": "kcal",
          "example": 1
        },
        "3": {
          "fieldName": "sport",
          "fieldType": "sport",
          "example": 1
        },
        "4": {
          "fieldName": "elapsed_time",
          "fieldType": "uint32",
          "units": "s",
          "comment": "Includes pauses",
          "example": 1
        },
        "5": {
          "fieldName": "sessions",
          "fieldType": "uint16",
          "example": 1
        },
        "6": {
          "fieldName": "active_time",
          "fieldType": "uint32",
          "units": "s",
          "example": 1
        },
        "9": {
          "fieldName": "sport_index",
          "fieldType": "uint8"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "example": 1
        },
        "254": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "example": 1
        }
      }
    },
    "weight_scale": {
      "fields": {
        "0": {
          "fieldName": "weight",
          "fieldType": "weight",
          "scale": 100,
          "units": "kg",
          "example": 1
        },
        "1": {
          "fieldName": "percent_fat",
          "fieldType": "uint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "2": {
          "fieldName": "percent_hydration",
          "fieldType": "uint16",
          "scale": 100,
          "units": "%",
          "example": 1
        },
        "3": {
          "fieldName": "visceral_fat_mass",
          "fieldType": "uint16",
          "scale": 100,
          "units": "kg",
          "example": 1
        },
        "4": {
          "fieldName": "bone_mass",
          "fieldType": "uint16",
          "scale": 100,
          "units": "kg",
          "example": 1
        },
        "5": {
          "fieldName": "muscle_mass",
          "fieldType": "uint16",
          "scale": 100,
          "units": "kg",
          "example": 1
        },
        "7": {
          "fieldName": "basal_met",
          "fieldType": "uint16",
          "scale": 4,
          "units": "kcal/day",
          "example": 1
        },
        "8": {
          "fieldName": "physique_rating",
          "fieldType": "uint8",
          "example": 1
        },
        "9": {
          "fieldName": "active_met",
          "fieldType": "uint16",
          "scale": 4,
          "units": "kcal/day",
          "comment": "~4kJ per kcal, 0.25 allows max 16384 kcal",
          "example": 1
        },
        "10": {
          "fieldName": "metabolic_age",
          "fieldType": "uint8",
          "units": "years",
          "example": 1
        },
        "11": {
          "fieldName": "visceral_fat_rating",
          "fieldType": "uint8",
          "example": 1
        },
        "12": {
          "fieldName": "user_profile_index",
          "fieldType": "message_index",
          "comment": "Associates this weight scale message to a user.  This corresponds to the index of the user profile message in the weight scale file.",
          "example": 1
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "example": 1
        }
      }
    },
    "blood_pressure": {
      "fields": {
        "0": {
          "fieldName": "systolic_pressure",
          "fieldType": "uint16",
          "units": "mmHg",
          "example": 1
        },
        "1": {
          "fieldName": "diastolic_pressure",
          "fieldType": "uint16",
          "units": "mmHg",
          "example": 1
        },
        "2": {
          "fieldName": "mean_arterial_pressure",
          "fieldType": "uint16",
          "units": "mmHg",
          "example": 1
        },
        "3": {
          "fieldName": "map_3_sample_mean",
          "fieldType": "uint16",
          "units": "mmHg",
          "example": 1
        },
        "4": {
          "fieldName": "map_morning_values",
          "fieldType": "uint16",
          "units": "mmHg",
          "example": 1
        },
        "5": {
          "fieldName": "map_evening_values",
          "fieldType": "uint16",
          "units": "mmHg",
          "example": 1
        },
        "6": {
          "fieldName": "heart_rate",
          "fieldType": "uint8",
          "units": "bpm",
          "example": 1
        },
        "7": {
          "fieldName": "heart_rate_type",
          "fieldType": "hr_type",
          "example": 1
        },
        "8": {
          "fieldName": "status",
          "fieldType": "bp_status",
          "example": 1
        },
        "9": {
          "fieldName": "user_profile_index",
          "fieldType": "message_index",
          "comment": "Associates this blood pressure message to a user.  This corresponds to the index of the user profile message in the blood pressure file.",
          "example": 1
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "example": 1
        }
      }
    },
    "monitoring_info": {
      "fields": {
        "0": {
          "fieldName": "local_timestamp",
          "fieldType": "local_date_time",
          "units": "s",
          "comment": "Use to convert activity timestamps to local time if device does not support time zone and daylight savings time correction.",
          "example": 1
        },
        "1": {
          "fieldName": "activity_type",
          "fieldType": "activity_type",
          "array": "[N]"
        },
        "3": {
          "fieldName": "cycles_to_distance",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 5000,
          "units": "m/cycle",
          "comment": "Indexed by activity_type"
        },
        "4": {
          "fieldName": "cycles_to_calories",
          "fieldType": "uint16",
          "array": "[N]",
          "scale": 5000,
          "units": "kcal/cycle",
          "comment": "Indexed by activity_type"
        },
        "5": {
          "fieldName": "resting_metabolic_rate",
          "fieldType": "uint16",
          "units": "kcal / day"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "example": 1
        }
      }
    },
    "monitoring": {
      "fields": {
        "0": {
          "fieldName": "device_index",
          "fieldType": "device_index",
          "comment": "Associates this data to device_info message.  Not required for file with single device (sensor).",
          "example": 1
        },
        "1": {
          "fieldName": "calories",
          "fieldType": "uint16",
          "units": "kcal",
          "comment": "Accumulated total calories.  Maintained by MonitoringReader for each activity_type.  See SDK documentation",
          "example": 1
        },
        "2": {
          "fieldName": "distance",
          "fieldType": "uint32",
          "scale": 100,
          "units": "m",
          "comment": "Accumulated distance.  Maintained by MonitoringReader for each activity_type.  See SDK documentation.",
          "example": 1
        },
        "3": {
          "fieldName": "cycles",
          "fieldType": "uint32",
          "scale": 2,
          "units": "cycles",
          "comment": "Accumulated cycles.  Maintained by MonitoringReader for each activity_type.  See SDK documentation.",
          "example": 1,
          "options": [
            {
              "fieldName": "steps",
              "fieldType": "uint32",
              "scale": 1,
              "units": "steps",
              "refFieldName": "activity_type",
              "refFieldValue": "walking"
            },
            {
              "fieldName": "steps",
              "fieldType": "uint32",
              "scale": 1,
              "units": "steps",
              "refFieldName": "activity_type",
              "refFieldValue": "running"
            },
            {
              "fieldName": "strokes",
              "fieldType": "uint32",
              "scale": 2,
              "units": "strokes",
              "refFieldName": "activity_type",
              "refFieldValue": "cycling",
              "example": 1
            },
            {
              "fieldName": "strokes",
              "fieldType": "uint32",
              "scale": 2,
              "units": "strokes",
              "refFieldName": "activity_type",
              "refFieldValue": "swimming",
              "example": 1
            }
          ]
        },
        "4": {
          "fieldName": "active_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s",
          "example": 1
        },
        "5": {
          "fieldName": "activity_type",
          "fieldType": "activity_type",
          "example": 1
        },
        "6": {
          "fieldName": "activity_subtype",
          "fieldType": "activity_subtype",
          "example": 1
        },
        "7": {
          "fieldName": "activity_level",
          "fieldType": "activity_level"
        },
        "8": {
          "fieldName": "distance_16",
          "fieldType": "uint16",
          "units": "100 * m",
          "example": 1
        },
        "9": {
          "fieldName": "cycles_16",
          "fieldType": "uint16",
          "units": "2 * cycles (steps)",
          "example": 1
        },
        "10": {
          "fieldName": "active_time_16",
          "fieldType": "uint16",
          "units": "s",
          "example": 1
        },
        "11": {
          "fieldName": "local_timestamp",
          "fieldType": "local_date_time",
          "comment": "Must align to logging interval, for example, time must be 00:00:00 for daily log.",
          "example": 1
        },
        "12": {
          "fieldName": "temperature",
          "fieldType": "sint16",
          "scale": 100,
          "units": "C",
          "comment": "Avg temperature during the logging interval ended at timestamp"
        },
        "14": {
          "fieldName": "temperature_min",
          "fieldType": "sint16",
          "scale": 100,
          "units": "C",
          "comment": "Min temperature during the logging interval ended at timestamp"
        },
        "15": {
          "fieldName": "temperature_max",
          "fieldType": "sint16",
          "scale": 100,
          "units": "C",
          "comment": "Max temperature during the logging interval ended at timestamp"
        },
        "16": {
          "fieldName": "activity_time",
          "fieldType": "uint16",
          "array": "[8]",
          "units": "minutes",
          "comment": "Indexed using minute_activity_level enum"
        },
        "19": {
          "fieldName": "active_calories",
          "fieldType": "uint16",
          "units": "kcal"
        },
        "24": {
          "fieldName": "current_activity_type_intensity",
          "fieldType": "byte",
          "components": "activity_type,intensity",
          "bits": "5,3",
          "comment": "Indicates single type / intensity for duration since last monitoring message."
        },
        "25": {
          "fieldName": "timestamp_min_8",
          "fieldType": "uint8",
          "units": "min"
        },
        "26": {
          "fieldName": "timestamp_16",
          "fieldType": "uint16",
          "units": "s"
        },
        "27": {
          "fieldName": "heart_rate",
          "fieldType": "uint8",
          "units": "bpm"
        },
        "28": {
          "fieldName": "intensity",
          "fieldType": "uint8",
          "scale": 10
        },
        "29": {
          "fieldName": "duration_min",
          "fieldType": "uint16",
          "units": "min"
        },
        "30": {
          "fieldName": "duration",
          "fieldType": "uint32",
          "units": "s"
        },
        "31": {
          "fieldName": "ascent",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m"
        },
        "32": {
          "fieldName": "descent",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m"
        },
        "33": {
          "fieldName": "moderate_activity_minutes",
          "fieldType": "uint16",
          "units": "minutes"
        },
        "34": {
          "fieldName": "vigorous_activity_minutes",
          "fieldType": "uint16",
          "units": "minutes"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Must align to logging interval, for example, time must be 00:00:00 for daily log.",
          "example": 1
        }
      }
    },
    "hr": {
      "fields": {
        "0": {
          "fieldName": "fractional_timestamp",
          "fieldType": "uint16",
          "scale": 32768,
          "units": "s",
          "example": 1
        },
        "1": {
          "fieldName": "time256",
          "fieldType": "uint8",
          "components": "fractional_timestamp",
          "scale": 256,
          "units": "s",
          "bits": 8,
          "example": 1
        },
        "6": {
          "fieldName": "filtered_bpm",
          "fieldType": "uint8",
          "array": "[N]",
          "units": "bpm",
          "example": 1
        },
        "9": {
          "fieldName": "event_timestamp",
          "fieldType": "uint32",
          "array": "[N]",
          "scale": 1024,
          "units": "s",
          "example": 1
        },
        "10": {
          "fieldName": "event_timestamp_12",
          "fieldType": "byte",
          "array": "[N]",
          "components": "event_timestamp,\r\nevent_timestamp,\r\nevent_timestamp,\r\nevent_timestamp,\r\nevent_timestamp,\r\nevent_timestamp,\r\nevent_timestamp,\r\nevent_timestamp,\r\nevent_timestamp,\r\nevent_timestamp\r\n",
          "scale": "1024,\r\n1024,\r\n1024,\r\n1024,\r\n1024,\r\n1024,\r\n1024,\r\n1024,\r\n1024,\r\n1024",
          "units": "s",
          "bits": "12,\r\n12,\r\n12,\r\n12,\r\n12,\r\n12,\r\n12,\r\n12,\r\n12,\r\n12",
          "accumulate": "1,\r\n1,\r\n1,\r\n1,\r\n1,\r\n1,\r\n1,\r\n1,\r\n1,\r\n1",
          "example": 1
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "example": 1
        }
      }
    },
    "stress_level": {
      "comment": "Value from 1 to 100 calculated by FirstBeat",
      "fields": {
        "0": {
          "fieldName": "stress_level_value",
          "fieldType": "sint16"
        },
        "1": {
          "fieldName": "stress_level_time",
          "fieldType": "date_time",
          "units": "s",
          "comment": "Time stress score was calculated"
        }
      }
    },
    "memo_glob": {
      "fields": {
        "0": {
          "fieldName": "memo",
          "fieldType": "byte",
          "array": "[N]",
          "comment": "Block of utf8 bytes"
        },
        "1": {
          "fieldName": "message_number",
          "fieldType": "uint16",
          "comment": "Allows relating glob to another mesg  If used only required for first part of each memo_glob"
        },
        "2": {
          "fieldName": "message_index",
          "fieldType": "message_index",
          "comment": "Index of external mesg"
        },
        "250": {
          "fieldName": "part_index",
          "fieldType": "uint32",
          "comment": "Sequence number of memo blocks"
        }
      }
    },
    "ant_channel_id": {
      "fields": {
        "0": {
          "fieldName": "channel_number",
          "fieldType": "uint8"
        },
        "1": {
          "fieldName": "device_type",
          "fieldType": "uint8z"
        },
        "2": {
          "fieldName": "device_number",
          "fieldType": "uint16z"
        },
        "3": {
          "fieldName": "transmission_type",
          "fieldType": "uint8z"
        },
        "4": {
          "fieldName": "device_index",
          "fieldType": "device_index"
        }
      }
    },
    "ant_rx": {
      "fields": {
        "0": {
          "fieldName": "fractional_timestamp",
          "fieldType": "uint16",
          "scale": 32768,
          "units": "s",
          "example": 1
        },
        "1": {
          "fieldName": "mesg_id",
          "fieldType": "byte",
          "example": 1
        },
        "2": {
          "fieldName": "mesg_data",
          "fieldType": "byte",
          "array": "[N]",
          "components": "channel_number,data,data,data,data,data,data,data,data",
          "bits": "8,8,8,8,8,8,8,8,8",
          "example": 9
        },
        "3": {
          "fieldName": "channel_number",
          "fieldType": "uint8",
          "example": 1
        },
        "4": {
          "fieldName": "data",
          "fieldType": "byte",
          "array": "[N]",
          "example": 8
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "example": 1
        }
      }
    },
    "ant_tx": {
      "fields": {
        "0": {
          "fieldName": "fractional_timestamp",
          "fieldType": "uint16",
          "scale": 32768,
          "units": "s",
          "example": 1
        },
        "1": {
          "fieldName": "mesg_id",
          "fieldType": "byte",
          "example": 1
        },
        "2": {
          "fieldName": "mesg_data",
          "fieldType": "byte",
          "array": "[N]",
          "components": "channel_number,data,data,data,data,data,data,data,data",
          "bits": "8,8,8,8,8,8,8,8,8",
          "example": 9
        },
        "3": {
          "fieldName": "channel_number",
          "fieldType": "uint8",
          "example": 1
        },
        "4": {
          "fieldName": "data",
          "fieldType": "byte",
          "array": "[N]",
          "example": 8
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s",
          "example": 1
        }
      }
    },
    "exd_screen_configuration": {
      "fields": {
        "0": {
          "fieldName": "screen_index",
          "fieldType": "uint8",
          "example": 1
        },
        "1": {
          "fieldName": "field_count",
          "fieldType": "uint8",
          "comment": "number of fields in screen",
          "example": 1
        },
        "2": {
          "fieldName": "layout",
          "fieldType": "exd_layout",
          "example": 1
        },
        "3": {
          "fieldName": "screen_enabled",
          "fieldType": "bool",
          "example": 1
        }
      }
    },
    "exd_data_field_configuration": {
      "fields": {
        "0": {
          "fieldName": "screen_index",
          "fieldType": "uint8",
          "example": 1
        },
        "1": {
          "fieldName": "concept_field",
          "fieldType": "byte",
          "components": "field_id,concept_count",
          "bits": "4,4",
          "example": 1
        },
        "2": {
          "fieldName": "field_id",
          "fieldType": "uint8",
          "example": 1
        },
        "3": {
          "fieldName": "concept_count",
          "fieldType": "uint8",
          "example": 1
        },
        "4": {
          "fieldName": "display_type",
          "fieldType": "exd_display_type",
          "example": 1
        },
        "5": {
          "fieldName": "title",
          "fieldType": "string",
          "array": "[32]",
          "example": 1
        }
      }
    },
    "exd_data_concept_configuration": {
      "fields": {
        "0": {
          "fieldName": "screen_index",
          "fieldType": "uint8",
          "example": 1
        },
        "1": {
          "fieldName": "concept_field",
          "fieldType": "byte",
          "components": "field_id,concept_index",
          "bits": "4,4",
          "example": 1
        },
        "2": {
          "fieldName": "field_id",
          "fieldType": "uint8",
          "example": 1
        },
        "3": {
          "fieldName": "concept_index",
          "fieldType": "uint8",
          "example": 1
        },
        "4": {
          "fieldName": "data_page",
          "fieldType": "uint8",
          "example": 1
        },
        "5": {
          "fieldName": "concept_key",
          "fieldType": "uint8",
          "example": 1
        },
        "6": {
          "fieldName": "scaling",
          "fieldType": "uint8",
          "example": 1
        },
        "8": {
          "fieldName": "data_units",
          "fieldType": "exd_data_units",
          "example": 1
        },
        "9": {
          "fieldName": "qualifier",
          "fieldType": "exd_qualifiers",
          "example": 1
        },
        "10": {
          "fieldName": "descriptor",
          "fieldType": "exd_descriptors",
          "example": 1
        },
        "11": {
          "fieldName": "is_signed",
          "fieldType": "bool",
          "example": 1
        }
      }
    },
    "field_description": {
      "comment": "Must be logged before developer field is used",
      "fields": {
        "0": {
          "fieldName": "developer_data_index",
          "fieldType": "uint8",
          "example": 1
        },
        "1": {
          "fieldName": "field_definition_number",
          "fieldType": "uint8",
          "example": 1
        },
        "2": {
          "fieldName": "fit_base_type_id",
          "fieldType": "fit_base_type",
          "example": 1
        },
        "3": {
          "fieldName": "field_name",
          "fieldType": "string",
          "array": "[N]",
          "example": 64
        },
        "4": {
          "fieldName": "array",
          "fieldType": "uint8",
          "example": 0
        },
        "5": {
          "fieldName": "components",
          "fieldType": "string",
          "example": 0
        },
        "6": {
          "fieldName": "scale",
          "fieldType": "uint8",
          "example": 1
        },
        "7": {
          "fieldName": "offset",
          "fieldType": "sint8",
          "example": 1
        },
        "8": {
          "fieldName": "units",
          "fieldType": "string",
          "array": "[N]",
          "example": 16
        },
        "9": {
          "fieldName": "bits",
          "fieldType": "string",
          "example": 0
        },
        "10": {
          "fieldName": "accumulate",
          "fieldType": "string",
          "example": 0
        },
        "13": {
          "fieldName": "fit_base_unit_id",
          "fieldType": "fit_base_unit",
          "example": 1
        },
        "14": {
          "fieldName": "native_mesg_num",
          "fieldType": "mesg_num",
          "example": 1
        },
        "15": {
          "fieldName": "native_field_num",
          "fieldType": "uint8",
          "example": 1
        }
      }
    },
    "developer_data_id": {
      "comment": "Must be logged before field description",
      "fields": {
        "0": {
          "fieldName": "developer_id",
          "fieldType": "byte",
          "array": "[N]",
          "example": 16
        },
        "1": {
          "fieldName": "application_id",
          "fieldType": "byte",
          "array": "[N]",
          "example": 16
        },
        "2": {
          "fieldName": "manufacturer_id",
          "fieldType": "manufacturer",
          "example": 1
        },
        "3": {
          "fieldName": "developer_data_index",
          "fieldType": "uint8",
          "example": 1
        },
        "4": {
          "fieldName": "application_version",
          "fieldType": "uint32",
          "example": 1
        }
      }
    },
    "dive_summary": {
      "fields": {
        "0": {
          "fieldName": "reference_mesg",
          "fieldType": "mesg_num"
        },
        "1": {
          "fieldName": "reference_index",
          "fieldType": "message_index"
        },
        "2": {
          "fieldName": "avg_depth",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m",
          "comment": "0 if above water"
        },
        "3": {
          "fieldName": "max_depth",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "m",
          "comment": "0 if above water"
        },
        "4": {
          "fieldName": "surface_interval",
          "fieldType": "uint32",
          "scale": 1,
          "units": "s",
          "comment": "Time since end of last dive"
        },
        "5": {
          "fieldName": "start_cns",
          "fieldType": "uint8",
          "scale": 1,
          "units": "percent"
        },
        "6": {
          "fieldName": "end_cns",
          "fieldType": "uint8",
          "scale": 1,
          "units": "percent"
        },
        "7": {
          "fieldName": "start_n2",
          "fieldType": "uint16",
          "scale": 1,
          "units": "percent"
        },
        "8": {
          "fieldName": "end_n2",
          "fieldType": "uint16",
          "scale": 1,
          "units": "percent"
        },
        "9": {
          "fieldName": "o2_toxicity",
          "fieldType": "uint16",
          "units": "OTUs"
        },
        "10": {
          "fieldName": "dive_number",
          "fieldType": "uint32"
        },
        "11": {
          "fieldName": "bottom_time",
          "fieldType": "uint32",
          "scale": 1000,
          "units": "s"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s"
        }
      }
    },
    "climb_pro": {
      "fields": {
        "0": {
          "fieldName": "position_lat",
          "fieldType": "sint32",
          "units": "semicircles"
        },
        "1": {
          "fieldName": "position_long",
          "fieldType": "sint32",
          "units": "semicircles"
        },
        "2": {
          "fieldName": "climb_pro_event",
          "fieldType": "climb_pro_event"
        },
        "3": {
          "fieldName": "climb_number",
          "fieldType": "uint16"
        },
        "4": {
          "fieldName": "climb_category",
          "fieldType": "uint8"
        },
        "5": {
          "fieldName": "current_dist",
          "fieldType": "float32",
          "units": "m"
        },
        "253": {
          "fieldName": "timestamp",
          "fieldType": "date_time",
          "units": "s"
        }
      }
    }
  }
}